Microsoft (R) Macro Assembler Version 14.37.32824.0	    12/20/23 18:52:36
<MASM PlaySound                        (PlaySoundExample.asm  Page 1 - 1


				include Irvine32.inc
			      C ; Include file for Irvine32.lib             (Irvine32.inc)
			      C 
			      C ;OPTION CASEMAP:NONE		; optional: make identifiers case-sensitive
			      C 
			      C INCLUDE SmallWin.inc		; MS-Windows prototypes, structures, and constants
			      C .NOLIST
			      C .LIST
			      C 
			      C INCLUDE VirtualKeys.inc
			      C ; VirtualKeys.inc
			      C .NOLIST
			      C .LIST
			      C 
			      C 
			      C .NOLIST
			      C .LIST
			      C 
				include macros.inc
			      C .NOLIST
			      C .LIST
			      C 
				includelib winmm.lib

				TITLE MASM PlaySound                        (PlaySoundExample.asm)

				PlaySound PROTO,
				pszSound:PTR BYTE, 
				hmod:DWORD, 
				fdwSound:DWORD

 00000000			.data

 00000000 00000096		    speed1 Dword 150
 00000004 0000007D		    speed2 DWORD 125
 00000008 00000064		    speed3 DWORD 100

 0000000C 00020001		    SND_FILENAME DWORD 00020001h
 00000010 70 61 63 6D 61	    musicIntro DB "pacman_beginning.wav", 0
	   6E 5F 62 65 67
	   69 6E 6E 69 6E
	   67 2E 77 61 76
	   00
 00000025 70 61 63 6D 61	    musicChomp DB "pacman_chomp.wav", 0
	   6E 5F 63 68 6F
	   6D 70 2E 77 61
	   76 00
 00000036 70 61 63 6D 61	    musicFruit DB "pacman_eatfruit.wav", 0
	   6E 5F 65 61 74
	   66 72 75 69 74
	   2E 77 61 76 00
 0000004A 70 61 63 6D 61	    musicDeath DB "pacman_death.wav", 0
	   6E 5F 64 65 61
	   74 68 2E 77 61
	   76 00
 0000005B 20 00			    TempM DB " ",0

 0000005D 01			    levelIndicator DB 1
 0000005E 03			    livesIndicator DB 3
 0000005F 0000			    score DW 0

 00000061			    Menu1InputNamePrompt DB 25 Dup(?)
 0000007A			    buffer db 255 Dup(?)
 00000179 20 20 20 30 00	    scoreBuffer DB "   0",0 

 0000017E			    Name1 db 25 Dup(?)
 00000197			    Name2 db 25 Dup(?)
 000001B0			    Name3 db 25 Dup(?)

 000001C9			    Score1 db 25 Dup(?)
 000001E2			    Score2 db 25 Dup(?)
 000001FB			    Score3 db 25 Dup(?)

 00000214			    level_1 db 25 Dup(?)
 0000022D			    level_2 db 25 Dup(?)
 00000246			    level_3 db 25 Dup(?)

 0000025F 4E 61 6D 65 20	    HighscorePrompt DB "Name      Score       Level",0
	   20 20 20 20 20
	   53 63 6F 72 65
	   20 20 20 20 20
	   20 20 4C 65 76
	   65 6C 00

 0000027B 73 63 6F 72 65	    filename DB  "score.txt", 0
	   2E 74 78 74 00
 00000285 74 65 6D 70 2E	    filetemp DB  "temp.txt",0
	   74 78 74 00
 0000028E 00000000		    fileHandle HANDLE ?

 00000292 0258			    CurrentCoins DW 600


 00000294 01			    Menu2OptionHandle DB 1
 00000295 00			    Menu2OptionUp_Down DB ?
				;------------------------------------------------------------------------------------------
				;------------------------------------------------------------------------------------------
 00000296 01			    GameStateHandle DB  1
				;--------------------------------------(player Movement Handles)---------------------------   
				;-----------------------------------------------------------------------------------------    
				    
 00000297 03			    PlayerDirectionHandle DB 3
 00000298 01			    PlayerMovement1Possibibly DB 1

 00000299 01			    Ghost1DirectionHandle DB 1
 0000029A 01			    Ghost1MovementPossibibly DB 1

 0000029B 01			    Ghost2DirectionHandle DB 1
 0000029C 01			    Ghost2MovementPossibibly DB 1
 0000029D 01			    Ghost3DirectionHandle DB 1
 0000029E 01			    Ghost3MovementPossibibly DB 1

 0000029F 01			    Ghost4DirectionHandle DB 1
 000002A0 01			    Ghost4MovementPossibibly DB 1
 000002A1 02			    Ghost5DirectionHandle DB 2
 000002A2 01			    Ghost5MovementPossibibly DB 1
 000002A3 03			    Ghost6DirectionHandle DB 3
 000002A4 01			    Ghost6MovementPossibibly DB 1
 000002A5 01			    Ghost7DirectionHandle DB 1
 000002A6 01			    Ghost7MovementPossibibly DB 1

 000002A7 01			    Ghost1Status DB 1
 000002A8 01			    Ghost2Status DB 1
 000002A9 01			    Ghost3Status DB 1
 000002AA 01			    Ghost4Status DB 1
 000002AB 01			    Ghost5Status DB 1
 000002AC 01			    Ghost6Status DB 1
 000002AD 01			    Ghost7Status DB 1

				;----------------------------------(Player)-----------------------------------------------   
				; 
 000002AE 08			    xPos DB 8
 000002AF 07			    yPos DB 7
 000002B0 00			    inputChar DB ?
				;----------------------------------(Wall,Coin,Space,Ghost)--------------------------------    
				;-----------------------------------------------------------------------------------------    
 000002B1 58			    wall DB "X"
 000002B2 2E			    coin DB "."
 000002B3 20			    space DB " "

 000002B4 21			    G1 DB "!"    
 000002B5 21			    G2 DB "!"     
 000002B6 21			    G3 DB "!"   
 000002B7 21			    G4 DB "!"    
 000002B8 21			    G5 DB "!"    
 000002B9 21			    G6 DB "!"    
 000002BA 21			    G7 DB "!"   

				    ;   level 1 Ghost
 000002BB 0A			    xG1Pos DB 10
 000002BC 0F			    yG1Pos DB 15
				    ;   level 2 Ghost
 000002BD 08			    xG2Pos DB 8
 000002BE 0F			    yG2Pos DB 15
 000002BF 0C			    xG3Pos DB 12
 000002C0 11			    yG3Pos DB 17
				    ;   level 3 ghost
 000002C1 28			    xG4Pos DB 40
 000002C2 15			    yG4Pos DB 21
 000002C3 22			    xG5Pos DB 34
 000002C4 15			    yG5Pos DB 21
 000002C5 28			    xG6Pos DB 40
 000002C6 0F			    yG6Pos DB 15
 000002C7 22			    xG7Pos DB 34
 000002C8 0F			    yG7Pos DB 15
				;--------------------------------------Main Screen----------------------------------------    
				;----------------------------------------------------------------------------------------- 

 000002C9 58 58 58 58 58	    m1_r01 DB "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX",0
	   58 58 58 58 58
	   58 58 58 58 58
	   58 58 58 58 58
	   58 58 58 58 58
	   58 58 58 58 58
	   58 58 58 58 58
	   58 58 58 58 58
	   58 58 58 58 58
	   58 58 58 58 58
	   58 58 58 58 58
	   58 58 58 58 58
	   58 58 58 58 58
	   58 58 58 58 58
	   58 58 58 58 58
	   00
 00000315 58 58 58 58 20	    m1_r02 DB "XXXX                                                                   XXXX",0
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 58 58 58 58
	   00

 00000361 20 20 20 2C 2D	    pacman_0 DB "   ,------------------------------------------------------------,",0
	   2D 2D 2D 2D 2D
	   2D 2D 2D 2D 2D
	   2D 2D 2D 2D 2D
	   2D 2D 2D 2D 2D
	   2D 2D 2D 2D 2D
	   2D 2D 2D 2D 2D
	   2D 2D 2D 2D 2D
	   2D 2D 2D 2D 2D
	   2D 2D 2D 2D 2D
	   2D 2D 2D 2D 2D
	   2D 2D 2D 2D 2D
	   2D 2D 2D 2D 2C
	   00
 000003A3 20 20 20 7C 20	    pacman_1 DB "   |   ________                                                 |",0
	   20 20 5F 5F 5F
	   5F 5F 5F 5F 5F
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 7C
	   00
 000003E5 20 20 20 7C 20	    pacman_2 DB "   |   \____   \ _____      ____     _____   _____      ____    |",0
	   20 20 5C 5F 5F
	   5F 5F 20 20 20
	   5C 20 5F 5F 5F
	   5F 5F 20 20 20
	   20 20 20 5F 5F
	   5F 5F 20 20 20
	   20 20 5F 5F 5F
	   5F 5F 20 20 20
	   5F 5F 5F 5F 5F
	   20 20 20 20 20
	   20 5F 5F 5F 5F
	   20 20 20 20 7C
	   00
 00000427 20 20 20 7C 20	    pacman_3 DB "   |    |   ___/ \__  \   _/ ___\   /     \  \__  \    /    \   |",0
	   20 20 20 7C 20
	   20 20 5F 5F 5F
	   2F 20 5C 5F 5F
	   20 20 5C 20 20
	   20 5F 2F 20 5F
	   5F 5F 5C 20 20
	   20 2F 20 20 20
	   20 20 5C 20 20
	   5C 5F 5F 20 20
	   5C 20 20 20 20
	   2F 20 20 20 20
	   5C 20 20 20 7C
	   00
 00000469 20 20 20 7C 20	    pacman_4 DB "   |    |  |      / __ \_ \  \___  |  | |  \  / __ \_ |   |  \  |",0
	   20 20 20 7C 20
	   20 7C 20 20 20
	   20 20 20 2F 20
	   5F 5F 20 5C 5F
	   20 5C 20 20 5C
	   5F 5F 5F 20 20
	   7C 20 20 7C 20
	   7C 20 20 5C 20
	   20 2F 20 5F 5F
	   20 5C 5F 20 7C
	   20 20 20 7C 20
	   20 5C 20 20 7C
	   00
 000004AB 20 20 20 7C 20	    pacman_5 DB "   |    |__|     (____  /  \__  /  |__|_|  / (____  / |___|  /  |",0
	   20 20 20 7C 5F
	   5F 7C 20 20 20
	   20 20 28 5F 5F
	   5F 5F 20 20 2F
	   20 20 5C 5F 5F
	   20 20 2F 20 20
	   7C 5F 5F 7C 5F
	   7C 20 20 2F 20
	   28 5F 5F 5F 5F
	   20 20 2F 20 7C
	   5F 5F 5F 7C 20
	   20 2F 20 20 7C
	   00
 000004ED 20 20 20 7C 20	    pacman_6 DB "   |                  \/      \/         \/       \/       \/   |",0  
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 5C 2F 20
	   20 20 20 20 20
	   5C 2F 20 20 20
	   20 20 20 20 20
	   20 5C 2F 20 20
	   20 20 20 20 20
	   5C 2F 20 20 20
	   20 20 20 20 5C
	   2F 20 20 20 7C
	   00
 0000052F 20 20 20 27 2D	    pacman_7 DB "   '------------------------------------------------------------'",0
	   2D 2D 2D 2D 2D
	   2D 2D 2D 2D 2D
	   2D 2D 2D 2D 2D
	   2D 2D 2D 2D 2D
	   2D 2D 2D 2D 2D
	   2D 2D 2D 2D 2D
	   2D 2D 2D 2D 2D
	   2D 2D 2D 2D 2D
	   2D 2D 2D 2D 2D
	   2D 2D 2D 2D 2D
	   2D 2D 2D 2D 2D
	   2D 2D 2D 2D 27
	   00
				    
 00000571 20 20 20 20 20	    pinky_01 DB "              PPPPPPPP",0
	   20 20 20 20 20
	   20 20 20 20 50
	   50 50 50 50 50
	   50 50 00
 00000588 20 20 20 20 20	    pinky_02 DB "          PPPPPPPPPPPPPPPP",0
	   20 20 20 20 20
	   50 50 50 50 50
	   50 50 50 50 50
	   50 50 50 50 50
	   50 00
 000005A3 20 20 20 20 20	    pinky_03 DB "        PPPPPPPPPPPPPPPPPPPP",0
	   20 20 20 50 50
	   50 50 50 50 50
	   50 50 50 50 50
	   50 50 50 50 50
	   50 50 50 00
 000005C0 20 20 20 20 20	    pinky_04 DB "      PPPPPPWWWWPPPPPPPPWWWWPP",0
	   20 50 50 50 50
	   50 50 57 57 57
	   57 50 50 50 50
	   50 50 50 50 57
	   57 57 57 50 50
	   00
 000005DF 20 20 20 20 20	    pinky_05 DB "      PPPPWWWWWWWWPPPPWWWWWWWW",0
	   20 50 50 50 50
	   57 57 57 57 57
	   57 57 57 50 50
	   50 50 57 57 57
	   57 57 57 57 57
	   00
 000005FE 20 20 20 20 20	    pinky_06 DB "      PPPPWWWWBBBBPPPPWWWWBBBB",0
	   20 50 50 50 50
	   57 57 57 57 42
	   42 42 42 50 50
	   50 50 57 57 57
	   57 42 42 42 42
	   00
 0000061D 20 20 20 20 50	    pinky_07 DB "    PPPPPPWWWWBBBBPPPPWWWWBBBBPP",0
	   50 50 50 50 50
	   57 57 57 57 42
	   42 42 42 50 50
	   50 50 57 57 57
	   57 42 42 42 42
	   50 50 00
 0000063E 20 20 20 20 50	    pinky_08 DB "    PPPPPPPPWWWWPPPPPPPPWWWWPPPP",0
	   50 50 50 50 50
	   50 50 57 57 57
	   57 50 50 50 50
	   50 50 50 50 57
	   57 57 57 50 50
	   50 50 00
 0000065F 20 20 20 20 50	    pinky_09 DB "    PPPPPPPPPPPPPPPPPPPPPPPPPPPP",0
	   50 50 50 50 50
	   50 50 50 50 50
	   50 50 50 50 50
	   50 50 50 50 50
	   50 50 50 50 50
	   50 50 00
 00000680 20 20 20 20 50	    pinky_10 DB "    PPPPPPPPPPPPPPPPPPPPPPPPPPPP",0
	   50 50 50 50 50
	   50 50 50 50 50
	   50 50 50 50 50
	   50 50 50 50 50
	   50 50 50 50 50
	   50 50 00
 000006A1 20 20 20 20 50	    pinky_11 DB "    PPPPPPPPPPPPPPPPPPPPPPPPPPPP",0
	   50 50 50 50 50
	   50 50 50 50 50
	   50 50 50 50 50
	   50 50 50 50 50
	   50 50 50 50 50
	   50 50 00
 000006C2 20 20 20 20 50	    pinky_12 DB "    PPPP  PPPPPP    PPPPPP  PPPP",0
	   50 50 50 20 20
	   50 50 50 50 50
	   50 20 20 20 20
	   50 50 50 50 50
	   50 20 20 50 50
	   50 50 00
 000006E3 20 20 20 20 50	    pinky_13 DB "    PP      PPPP    PPPP      PP",0
	   50 20 20 20 20
	   20 20 50 50 50
	   50 20 20 20 20
	   50 50 50 50 20
	   20 20 20 20 20
	   50 50 00

				;--------------------------------------(Level 1)-----------------------------------------    
				;-----------------------------------------------------------------------------------------    

 00000704 20 20 20 20 20	    l1_r01 DB "     XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX",0
	   58 58 58 58 58
	   58 58 58 58 58
	   58 58 58 58 58
	   58 58 58 58 58
	   58 58 58 58 58
	   58 58 58 58 58
	   58 58 58 00
 0000072B 20 20 20 20 20	    l1_r02 DB "     XX . . . . . . . . . . . . . . XX",0
	   58 58 20 2E 20
	   2E 20 2E 20 2E
	   20 2E 20 2E 20
	   2E 20 2E 20 2E
	   20 2E 20 2E 20
	   2E 20 2E 20 2E
	   20 58 58 00
 00000752 20 20 20 20 20	    l1_r03 DB "     XX . XXXXXXX . XXX . XXXXXXX . XX",0
	   58 58 20 2E 20
	   58 58 58 58 58
	   58 58 20 2E 20
	   58 58 58 20 2E
	   20 58 58 58 58
	   58 58 58 20 2E
	   20 58 58 00
 00000779 20 20 20 20 20	    l1_r04 DB "     XX . XXXXXXX . XXX . XXXXXXX . XX",0
	   58 58 20 2E 20
	   58 58 58 58 58
	   58 58 20 2E 20
	   58 58 58 20 2E
	   20 58 58 58 58
	   58 58 58 20 2E
	   20 58 58 00
 000007A0 20 20 20 20 20	    l1_r05 DB "     XX . . . . . . . . . . . . . . XX",0
	   58 58 20 2E 20
	   2E 20 2E 20 2E
	   20 2E 20 2E 20
	   2E 20 2E 20 2E
	   20 2E 20 2E 20
	   2E 20 2E 20 2E
	   20 58 58 00
 000007C7 20 20 20 20 20	    l1_r06 DB "     XX . XXXXXXX . XXX . XXX . XXXXXX",0
	   58 58 20 2E 20
	   58 58 58 58 58
	   58 58 20 2E 20
	   58 58 58 20 2E
	   20 58 58 58 20
	   2E 20 58 58 58
	   58 58 58 00
 000007EE 20 20 20 20 20	    l1_r07 DB "     XX . XXXXXXX . XXX . XXX . XXXXXX",0    
	   58 58 20 2E 20
	   58 58 58 58 58
	   58 58 20 2E 20
	   58 58 58 20 2E
	   20 58 58 58 20
	   2E 20 58 58 58
	   58 58 58 00
 00000815 20 20 20 20 20	    l1_r08 DB "     XX . . . . . . XXX . . . . . . XX",0
	   58 58 20 2E 20
	   2E 20 2E 20 2E
	   20 2E 20 2E 20
	   58 58 58 20 2E
	   20 2E 20 2E 20
	   2E 20 2E 20 2E
	   20 58 58 00
 0000083C 20 20 20 20 20	    l1_r09 DB "     XXXXXXXXXXXX . XXXXXXXXXXXXX . XX",0
	   58 58 58 58 58
	   58 58 58 58 58
	   58 58 20 2E 20
	   58 58 58 58 58
	   58 58 58 58 58
	   58 58 58 20 2E
	   20 58 58 00
 00000863 20 20 20 20 20	    l1_r10 DB "     XX           . XXX . . . . . . XX",0
	   58 58 20 20 20
	   20 20 20 20 20
	   20 20 20 2E 20
	   58 58 58 20 2E
	   20 2E 20 2E 20
	   2E 20 2E 20 2E
	   20 58 58 00
 0000088A 20 20 20 20 20	    l1_r11 DB "     XX        XX . . . . XXXXXXX . XX",0
	   58 58 20 20 20
	   20 20 20 20 20
	   58 58 20 2E 20
	   2E 20 2E 20 2E
	   20 58 58 58 58
	   58 58 58 20 2E
	   20 58 58 00
 000008B1 20 20 20 20 20	    l1_r12 DB "     XX        XX . XXX . . . . . . XX",0
	   58 58 20 20 20
	   20 20 20 20 20
	   58 58 20 2E 20
	   58 58 58 20 2E
	   20 2E 20 2E 20
	   2E 20 2E 20 2E
	   20 58 58 00
 000008D8 20 20 20 20 20	    l1_r13 DB "     XXXXXXXXXXXX . XXX . XXXXXXX . XX",0
	   58 58 58 58 58
	   58 58 58 58 58
	   58 58 20 2E 20
	   58 58 58 20 2E
	   20 58 58 58 58
	   58 58 58 20 2E
	   20 58 58 00
 000008FF 20 20 20 20 20	    l1_r14 DB "     XX . . . . . . . . . . . . . . XX",0
	   58 58 20 2E 20
	   2E 20 2E 20 2E
	   20 2E 20 2E 20
	   2E 20 2E 20 2E
	   20 2E 20 2E 20
	   2E 20 2E 20 2E
	   20 58 58 00
 00000926 20 20 20 20 20	    l1_r15 DB "     XX . XXXXXXX . XXX . XXXXXXX . XX",0
	   58 58 20 2E 20
	   58 58 58 58 58
	   58 58 20 2E 20
	   58 58 58 20 2E
	   20 58 58 58 58
	   58 58 58 20 2E
	   20 58 58 00
 0000094D 20 20 20 20 20	    l1_r16 DB "     XX . . . XXX . . . . . . . . . XX",0
	   58 58 20 2E 20
	   2E 20 2E 20 58
	   58 58 20 2E 20
	   2E 20 2E 20 2E
	   20 2E 20 2E 20
	   2E 20 2E 20 2E
	   20 58 58 00
 00000974 20 20 20 20 20	    l1_r17 DB "     XXXXXX . XXX . XXX . XXXXXXXXXXXX",0
	   58 58 58 58 58
	   58 20 2E 20 58
	   58 58 20 2E 20
	   58 58 58 20 2E
	   20 58 58 58 58
	   58 58 58 58 58
	   58 58 58 00
 0000099B 20 20 20 20 20	    l1_r18 DB "     XX . . . . . . XXX . . . . . . XX",0
	   58 58 20 2E 20
	   2E 20 2E 20 2E
	   20 2E 20 2E 20
	   58 58 58 20 2E
	   20 2E 20 2E 20
	   2E 20 2E 20 2E
	   20 58 58 00
 000009C2 20 20 20 20 20	    l1_r19 DB "     XX . XXXXXXXXXXXXXXXXXXXXXXX . XX",0
	   58 58 20 2E 20
	   58 58 58 58 58
	   58 58 58 58 58
	   58 58 58 58 58
	   58 58 58 58 58
	   58 58 58 20 2E
	   20 58 58 00
 000009E9 20 20 20 20 20	    l1_r20 DB "     XX . XXXXXXXXXXXXXXXXXXXXXXX . XX",0
	   58 58 20 2E 20
	   58 58 58 58 58
	   58 58 58 58 58
	   58 58 58 58 58
	   58 58 58 58 58
	   58 58 58 20 2E
	   20 58 58 00
 00000A10 20 20 20 20 20	    l1_r21 DB "     XX . . . . . . . . . . . . . . XX",0
	   58 58 20 2E 20
	   2E 20 2E 20 2E
	   20 2E 20 2E 20
	   2E 20 2E 20 2E
	   20 2E 20 2E 20
	   2E 20 2E 20 2E
	   20 58 58 00
 00000A37 20 20 20 20 20	    l1_r22 DB "     XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX",0
	   58 58 58 58 58
	   58 58 58 58 58
	   58 58 58 58 58
	   58 58 58 58 58
	   58 58 58 58 58
	   58 58 58 58 58
	   58 58 58 00
				   
				;--------------------------------------(Level 2)-----------------------------------------    
				;-----------------------------------------------------------------------------------------    

 00000A5E 20 20 20 20 20	    l2_r01 DB "     XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX",0
	   58 58 58 58 58
	   58 58 58 58 58
	   58 58 58 58 58
	   58 58 58 58 58
	   58 58 58 58 58
	   58 58 58 58 58
	   58 58 58 58 58
	   58 58 58 58 58
	   58 58 58 58 58
	   00
 00000A91 20 20 20 20 20	    l2_r02 DB "     XX . . . . . . . . . . . . . . XXX . . . . XX",0
	   58 58 20 2E 20
	   2E 20 2E 20 2E
	   20 2E 20 2E 20
	   2E 20 2E 20 2E
	   20 2E 20 2E 20
	   2E 20 2E 20 2E
	   20 58 58 58 20
	   2E 20 2E 20 2E
	   20 2E 20 58 58
	   00
 00000AC4 20 20 20 20 20	    l2_r03 DB "     XX * XXXXXXX . XXX . XXXXXXX . XXX . XXX * XX",0
	   58 58 20 2A 20
	   58 58 58 58 58
	   58 58 20 2E 20
	   58 58 58 20 2E
	   20 58 58 58 58
	   58 58 58 20 2E
	   20 58 58 58 20
	   2E 20 58 58 58
	   20 2A 20 58 58
	   00
 00000AF7 20 20 20 20 20	    l2_r04 DB "     XX . XXXXXXX . XXX . XXXXXXX . XXX . XXX . XX",0
	   58 58 20 2E 20
	   58 58 58 58 58
	   58 58 20 2E 20
	   58 58 58 20 2E
	   20 58 58 58 58
	   58 58 58 20 2E
	   20 58 58 58 20
	   2E 20 58 58 58
	   20 2E 20 58 58
	   00
 00000B2A 20 20 20 20 20	    l2_r05 DB "     XX . . . . . . . . . . . . . . . . . XXX . XX",0
	   58 58 20 2E 20
	   2E 20 2E 20 2E
	   20 2E 20 2E 20
	   2E 20 2E 20 2E
	   20 2E 20 2E 20
	   2E 20 2E 20 2E
	   20 2E 20 2E 20
	   2E 20 58 58 58
	   20 2E 20 58 58
	   00
 00000B5D 20 20 20 20 20	    l2_r06 DB "     XX . XXXXXXX . XXX . XXX . XXXXXXX . . . . XX",0
	   58 58 20 2E 20
	   58 58 58 58 58
	   58 58 20 2E 20
	   58 58 58 20 2E
	   20 58 58 58 20
	   2E 20 58 58 58
	   58 58 58 58 20
	   2E 20 2E 20 2E
	   20 2E 20 58 58
	   00
 00000B90 20 20 20 20 20	    l2_r07 DB "     XX . XXXXXXX . XXX . XXX . XXXXXXX . XXXXXXXX",0
	   58 58 20 2E 20
	   58 58 58 58 58
	   58 58 20 2E 20
	   58 58 58 20 2E
	   20 58 58 58 20
	   2E 20 58 58 58
	   58 58 58 58 20
	   2E 20 58 58 58
	   58 58 58 58 58
	   00
 00000BC3 20 20 20 20 20	    l2_r08 DB "     XX . . . . . . XXX . . . . . . . . . . . . XX",0
	   58 58 20 2E 20
	   2E 20 2E 20 2E
	   20 2E 20 2E 20
	   58 58 58 20 2E
	   20 2E 20 2E 20
	   2E 20 2E 20 2E
	   20 2E 20 2E 20
	   2E 20 2E 20 2E
	   20 2E 20 58 58
	   00
 00000BF6 20 20 20 20 20	    l2_r09 DB "     XXXXXXXXXXXX . XXXXXXXXXXXXX . XXX . XXX . XX",0
	   58 58 58 58 58
	   58 58 58 58 58
	   58 58 20 2E 20
	   58 58 58 58 58
	   58 58 58 58 58
	   58 58 58 20 2E
	   20 58 58 58 20
	   2E 20 58 58 58
	   20 2E 20 58 58
	   00
 00000C29 20 20 20 20 20	    l2_r10 DB "     XX           . XXX . . . . . . . . . XXX . XX",0
	   58 58 20 20 20
	   20 20 20 20 20
	   20 20 20 2E 20
	   58 58 58 20 2E
	   20 2E 20 2E 20
	   2E 20 2E 20 2E
	   20 2E 20 2E 20
	   2E 20 58 58 58
	   20 2E 20 58 58
	   00
 00000C5C 20 20 20 20 20	    l2_r11 DB "     XX        XX . . . . XXXXXXXXXXXXX . . . . XX",0
	   58 58 20 20 20
	   20 20 20 20 20
	   58 58 20 2E 20
	   2E 20 2E 20 2E
	   20 58 58 58 58
	   58 58 58 58 58
	   58 58 58 58 20
	   2E 20 2E 20 2E
	   20 2E 20 58 58
	   00
 00000C8F 20 20 20 20 20	    l2_r12 DB "     XX           . XXX . . . . . . XXX . XXXXXXXX",0
	   58 58 20 20 20
	   20 20 20 20 20
	   20 20 20 2E 20
	   58 58 58 20 2E
	   20 2E 20 2E 20
	   2E 20 2E 20 2E
	   20 58 58 58 20
	   2E 20 58 58 58
	   58 58 58 58 58
	   00
 00000CC2 20 20 20 20 20	    l2_r13 DB "     XXXXXXXXXXXX . XXX . XXXXXXX . XXX . XXXXXXXX",0
	   58 58 58 58 58
	   58 58 58 58 58
	   58 58 20 2E 20
	   58 58 58 20 2E
	   20 58 58 58 58
	   58 58 58 20 2E
	   20 58 58 58 20
	   2E 20 58 58 58
	   58 58 58 58 58
	   00
 00000CF5 20 20 20 20 20	    l2_r14 DB "     XX . . . . . . . . . . . . . . . . . . . . XX",0
	   58 58 20 2E 20
	   2E 20 2E 20 2E
	   20 2E 20 2E 20
	   2E 20 2E 20 2E
	   20 2E 20 2E 20
	   2E 20 2E 20 2E
	   20 2E 20 2E 20
	   2E 20 2E 20 2E
	   20 2E 20 58 58
	   00
 00000D28 20 20 20 20 20	    l2_r15 DB "     XX . XXXXXXX . XXX . XXXXXXX . XXXXXXXXX . XX",0
	   58 58 20 2E 20
	   58 58 58 58 58
	   58 58 20 2E 20
	   58 58 58 20 2E
	   20 58 58 58 58
	   58 58 58 20 2E
	   20 58 58 58 58
	   58 58 58 58 58
	   20 2E 20 58 58
	   00
 00000D5B 20 20 20 20 20	    l2_r16 DB "     XX . . . XXX . . . . . . . . . . . . . . . XX",0
	   58 58 20 2E 20
	   2E 20 2E 20 58
	   58 58 20 2E 20
	   2E 20 2E 20 2E
	   20 2E 20 2E 20
	   2E 20 2E 20 2E
	   20 2E 20 2E 20
	   2E 20 2E 20 2E
	   20 2E 20 58 58
	   00
 00000D8E 20 20 20 20 20	    l2_r17 DB "     XXXXXX . XXX . XXX . XXXXXXXXXXXXX . XXXXXXXX",0
	   58 58 58 58 58
	   58 20 2E 20 58
	   58 58 20 2E 20
	   58 58 58 20 2E
	   20 58 58 58 58
	   58 58 58 58 58
	   58 58 58 58 20
	   2E 20 58 58 58
	   58 58 58 58 58
	   00
 00000DC1 20 20 20 20 20	    l2_r18 DB "     XX . . . . . . XXX . . . . . . . . . . . . XX",0
	   58 58 20 2E 20
	   2E 20 2E 20 2E
	   20 2E 20 2E 20
	   58 58 58 20 2E
	   20 2E 20 2E 20
	   2E 20 2E 20 2E
	   20 2E 20 2E 20
	   2E 20 2E 20 2E
	   20 2E 20 58 58
	   00
 00000DF4 20 20 20 20 20	    l2_r19 DB "     XX * XXXXXXXXXXXXXXXXXXXXXXX . XXX . XXX * XX",0
	   58 58 20 2A 20
	   58 58 58 58 58
	   58 58 58 58 58
	   58 58 58 58 58
	   58 58 58 58 58
	   58 58 58 20 2E
	   20 58 58 58 20
	   2E 20 58 58 58
	   20 2A 20 58 58
	   00
 00000E27 20 20 20 20 20	    l2_r20 DB "     XX . XXXXXXXXXXXXXXXXXXXXXXX . XXX . XXX . XX",0
	   58 58 20 2E 20
	   58 58 58 58 58
	   58 58 58 58 58
	   58 58 58 58 58
	   58 58 58 58 58
	   58 58 58 20 2E
	   20 58 58 58 20
	   2E 20 58 58 58
	   20 2E 20 58 58
	   00
 00000E5A 20 20 20 20 20	    l2_r21 DB "     XX . . . . . . . . . . . . . . XXX . . . . XX",0
	   58 58 20 2E 20
	   2E 20 2E 20 2E
	   20 2E 20 2E 20
	   2E 20 2E 20 2E
	   20 2E 20 2E 20
	   2E 20 2E 20 2E
	   20 58 58 58 20
	   2E 20 2E 20 2E
	   20 2E 20 58 58
	   00
 00000E8D 20 20 20 20 20	    l2_r22 DB "     XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX",0
	   58 58 58 58 58
	   58 58 58 58 58
	   58 58 58 58 58
	   58 58 58 58 58
	   58 58 58 58 58
	   58 58 58 58 58
	   58 58 58 58 58
	   58 58 58 58 58
	   58 58 58 58 58
	   00

				;--------------------------------------(Level 3)-----------------------------------------    
				;-----------------------------------------------------------------------------------------    

 00000EC0 20 20 20 20 20	    l3_r01 DB "     XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX",0
	   58 58 58 58 58
	   58 58 58 58 58
	   58 58 58 58 58
	   58 58 58 58 58
	   58 58 58 58 58
	   58 58 58 58 58
	   58 58 58 58 58
	   58 58 58 58 58
	   58 58 58 58 58
	   58 58 58 58 58
	   58 58 58 58 58
	   58 58 58 58 58
	   58 58 58 58 58
	   00
 00000F07 20 20 20 20 20	    l3_r02 DB "     XX . . . . . . . . . . . . . . XXX . . . . . . . . . . . . . * XX",0
	   58 58 20 2E 20
	   2E 20 2E 20 2E
	   20 2E 20 2E 20
	   2E 20 2E 20 2E
	   20 2E 20 2E 20
	   2E 20 2E 20 2E
	   20 58 58 58 20
	   2E 20 2E 20 2E
	   20 2E 20 2E 20
	   2E 20 2E 20 2E
	   20 2E 20 2E 20
	   2E 20 2E 20 2E
	   20 2A 20 58 58
	   00
 00000F4E 20 20 20 20 20	    l3_r03 DB "     XX . XXXXXXX . XXXXXXXXXXXXX . XXX . XXXXXXXXXXXXX . XXXXXXX . XX",0
	   58 58 20 2E 20
	   58 58 58 58 58
	   58 58 20 2E 20
	   58 58 58 58 58
	   58 58 58 58 58
	   58 58 58 20 2E
	   20 58 58 58 20
	   2E 20 58 58 58
	   58 58 58 58 58
	   58 58 58 58 58
	   20 2E 20 58 58
	   58 58 58 58 58
	   20 2E 20 58 58
	   00
 00000F95 20 20 20 20 20	    l3_r04 DB "     XX * XXXXXXX . XXXXXXXXXXXXX . XXX . XXXXXXXXXXXXX . XXXXXXX . XX",0
	   58 58 20 2A 20
	   58 58 58 58 58
	   58 58 20 2E 20
	   58 58 58 58 58
	   58 58 58 58 58
	   58 58 58 20 2E
	   20 58 58 58 20
	   2E 20 58 58 58
	   58 58 58 58 58
	   58 58 58 58 58
	   20 2E 20 58 58
	   58 58 58 58 58
	   20 2E 20 58 58
	   00
 00000FDC 20 20 20 20 20	    l3_r05 DB "     XX . . . . . . . . . XXX . . . . . . . . XXX . . . . . . . . . XX",0
	   58 58 20 2E 20
	   2E 20 2E 20 2E
	   20 2E 20 2E 20
	   2E 20 2E 20 2E
	   20 58 58 58 20
	   2E 20 2E 20 2E
	   20 2E 20 2E 20
	   2E 20 2E 20 2E
	   20 58 58 58 20
	   2E 20 2E 20 2E
	   20 2E 20 2E 20
	   2E 20 2E 20 2E
	   20 2E 20 58 58
	   00
 00001023 20 20 20 20 20	    l3_r06 DB "     XX . XXXXXXX . XXX . XXX . XXXXXXXXXXX . XXX . XXX . XXXXXXX . XX",0
	   58 58 20 2E 20
	   58 58 58 58 58
	   58 58 20 2E 20
	   58 58 58 20 2E
	   20 58 58 58 20
	   2E 20 58 58 58
	   58 58 58 58 58
	   58 58 58 20 2E
	   20 58 58 58 20
	   2E 20 58 58 58
	   20 2E 20 58 58
	   58 58 58 58 58
	   20 2E 20 58 58
	   00
 0000106A 20 20 20 20 20	    l3_r07 DB "     XX . XXXXXXX . XXX . . . . . . XXX . . . . . . XXX . XXXXXXX . XX",0    
	   58 58 20 2E 20
	   58 58 58 58 58
	   58 58 20 2E 20
	   58 58 58 20 2E
	   20 2E 20 2E 20
	   2E 20 2E 20 2E
	   20 58 58 58 20
	   2E 20 2E 20 2E
	   20 2E 20 2E 20
	   2E 20 58 58 58
	   20 2E 20 58 58
	   58 58 58 58 58
	   20 2E 20 58 58
	   00
 000010B1 20 20 20 20 20	    l3_r08 DB "     XX . . . . . . XXXXXXXXXXXXX . XXX . XXXXXXXXXXXXX . . . . . . XX",0
	   58 58 20 2E 20
	   2E 20 2E 20 2E
	   20 2E 20 2E 20
	   58 58 58 58 58
	   58 58 58 58 58
	   58 58 58 20 2E
	   20 58 58 58 20
	   2E 20 58 58 58
	   58 58 58 58 58
	   58 58 58 58 58
	   20 2E 20 2E 20
	   2E 20 2E 20 2E
	   20 2E 20 58 58
	   00
 000010F8 20 20 20 20 20	    l3_r09 DB "     XXXXXXXXXXXX . XXXXXXXXXXXXX . XXX . XXXXXXXXXXXXX . XXXXXXXXXXXX",0
	   58 58 58 58 58
	   58 58 58 58 58
	   58 58 20 2E 20
	   58 58 58 58 58
	   58 58 58 58 58
	   58 58 58 20 2E
	   20 58 58 58 20
	   2E 20 58 58 58
	   58 58 58 58 58
	   58 58 58 58 58
	   20 2E 20 58 58
	   58 58 58 58 58
	   58 58 58 58 58
	   00
 0000113F 20 20 20 20 20	    l3_r10 DB "     XXXX     XXX . XXX . . . . . . . . . . . . . * XXX . XXX     XXXX",0
	   58 58 58 58 20
	   20 20 20 20 58
	   58 58 20 2E 20
	   58 58 58 20 2E
	   20 2E 20 2E 20
	   2E 20 2E 20 2E
	   20 2E 20 2E 20
	   2E 20 2E 20 2E
	   20 2E 20 2E 20
	   2A 20 58 58 58
	   20 2E 20 58 58
	   58 20 20 20 20
	   20 58 58 58 58
	   00
 00001186 20 20 20 20 20	    l3_r11 DB "                  . XXX . XXXXXXX . XXX . XXXXXXX . XXX .             ",0
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 2E 20
	   58 58 58 20 2E
	   20 58 58 58 58
	   58 58 58 20 2E
	   20 58 58 58 20
	   2E 20 58 58 58
	   58 58 58 58 20
	   2E 20 58 58 58
	   20 2E 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   00
 000011CD 20 20 20 20 20	    l3_r12 DB "     XXXX     XXX . XXX . XXXXXXX . XXX . XXXXXXX . XXX . XXX     XXXX",0
	   58 58 58 58 20
	   20 20 20 20 58
	   58 58 20 2E 20
	   58 58 58 20 2E
	   20 58 58 58 58
	   58 58 58 20 2E
	   20 58 58 58 20
	   2E 20 58 58 58
	   58 58 58 58 20
	   2E 20 58 58 58
	   20 2E 20 58 58
	   58 20 20 20 20
	   20 58 58 58 58
	   00
 00001214 20 20 20 20 20	    l3_r13 DB "     XXXXXXXXXXXX . XXX . XXXXXXX . XXX . XXXXXXX . XXX . XXXXXXXXXXXX",0
	   58 58 58 58 58
	   58 58 58 58 58
	   58 58 20 2E 20
	   58 58 58 20 2E
	   20 58 58 58 58
	   58 58 58 20 2E
	   20 58 58 58 20
	   2E 20 58 58 58
	   58 58 58 58 20
	   2E 20 58 58 58
	   20 2E 20 58 58
	   58 58 58 58 58
	   58 58 58 58 58
	   00
 0000125B 20 20 20 20 20	    l3_r14 DB "     XX . . . . . . . . . XXXXXXX . . . . XXXXXXX . . . . . . . . . XX",0
	   58 58 20 2E 20
	   2E 20 2E 20 2E
	   20 2E 20 2E 20
	   2E 20 2E 20 2E
	   20 58 58 58 58
	   58 58 58 20 2E
	   20 2E 20 2E 20
	   2E 20 58 58 58
	   58 58 58 58 20
	   2E 20 2E 20 2E
	   20 2E 20 2E 20
	   2E 20 2E 20 2E
	   20 2E 20 58 58
	   00
 000012A2 20 20 20 20 20	    l3_r15 DB "     XX . XXXXXXX . XXX . XXXXXXXXXXXXXXXXXXXXXXX . XXX . XXXXXXX . XX",0
	   58 58 20 2E 20
	   58 58 58 58 58
	   58 58 20 2E 20
	   58 58 58 20 2E
	   20 58 58 58 58
	   58 58 58 58 58
	   58 58 58 58 58
	   58 58 58 58 58
	   58 58 58 58 20
	   2E 20 58 58 58
	   20 2E 20 58 58
	   58 58 58 58 58
	   20 2E 20 58 58
	   00
 000012E9 20 20 20 20 20	    l3_r16 DB "     XX . . . XXX . . . . . . . . . . . . . . . . . . . . XXX . . . XX",0
	   58 58 20 2E 20
	   2E 20 2E 20 58
	   58 58 20 2E 20
	   2E 20 2E 20 2E
	   20 2E 20 2E 20
	   2E 20 2E 20 2E
	   20 2E 20 2E 20
	   2E 20 2E 20 2E
	   20 2E 20 2E 20
	   2E 20 2E 20 2E
	   20 2E 20 58 58
	   58 20 2E 20 2E
	   20 2E 20 58 58
	   00
 00001330 20 20 20 20 20	    l3_r17 DB "     XXXXXX . XXX . XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX . XXX . XXXXXX",0
	   58 58 58 58 58
	   58 20 2E 20 58
	   58 58 20 2E 20
	   58 58 58 58 58
	   58 58 58 58 58
	   58 58 58 58 58
	   58 58 58 58 58
	   58 58 58 58 58
	   58 58 58 58 58
	   58 58 58 58 58
	   20 2E 20 58 58
	   58 20 2E 20 58
	   58 58 58 58 58
	   00
 00001377 20 20 20 20 20	    l3_r18 DB "     XX . . . XXX . . . . . . . . . XXX . . . . . . . . . XXX . . . XX",0
	   58 58 20 2E 20
	   2E 20 2E 20 58
	   58 58 20 2E 20
	   2E 20 2E 20 2E
	   20 2E 20 2E 20
	   2E 20 2E 20 2E
	   20 58 58 58 20
	   2E 20 2E 20 2E
	   20 2E 20 2E 20
	   2E 20 2E 20 2E
	   20 2E 20 58 58
	   58 20 2E 20 2E
	   20 2E 20 58 58
	   00
 000013BE 20 20 20 20 20	    l3_r19 DB "     XX * XXXXXXXXXXXXXXXXX . XXX . XXX . XXX . XXXXXXXXXXXXXXXXX . XX",0
	   58 58 20 2A 20
	   58 58 58 58 58
	   58 58 58 58 58
	   58 58 58 58 58
	   58 58 20 2E 20
	   58 58 58 20 2E
	   20 58 58 58 20
	   2E 20 58 58 58
	   20 2E 20 58 58
	   58 58 58 58 58
	   58 58 58 58 58
	   58 58 58 58 58
	   20 2E 20 58 58
	   00
 00001405 20 20 20 20 20	    l3_r20 DB "     XX . XXXXXXXXXXXXXXXXX . XXX . XXX . XXX . XXXXXXXXXXXXXXXXX . XX",0
	   58 58 20 2E 20
	   58 58 58 58 58
	   58 58 58 58 58
	   58 58 58 58 58
	   58 58 20 2E 20
	   58 58 58 20 2E
	   20 58 58 58 20
	   2E 20 58 58 58
	   20 2E 20 58 58
	   58 58 58 58 58
	   58 58 58 58 58
	   58 58 58 58 58
	   20 2E 20 58 58
	   00
 0000144C 20 20 20 20 20	    l3_r21 DB "     XX . . . . . . . . . . . XXX . * . . XXX . . . . . . . . . . * XX",0
	   58 58 20 2E 20
	   2E 20 2E 20 2E
	   20 2E 20 2E 20
	   2E 20 2E 20 2E
	   20 2E 20 2E 20
	   58 58 58 20 2E
	   20 2A 20 2E 20
	   2E 20 58 58 58
	   20 2E 20 2E 20
	   2E 20 2E 20 2E
	   20 2E 20 2E 20
	   2E 20 2E 20 2E
	   20 2A 20 58 58
	   00
 00001493 20 20 20 20 20	    l3_r22 DB "     XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX",0
	   58 58 58 58 58
	   58 58 58 58 58
	   58 58 58 58 58
	   58 58 58 58 58
	   58 58 58 58 58
	   58 58 58 58 58
	   58 58 58 58 58
	   58 58 58 58 58
	   58 58 58 58 58
	   58 58 58 58 58
	   58 58 58 58 58
	   58 58 58 58 58
	   58 58 58 58 58
	   00


 00000000			.code

				;------------------------------------------(Start of Main)-------------------------------------------
				;------------------------------------------(Main Screen)---------------------------------------------
				;------------------------------------------(Main Screen)---------------------------------------------

 00000000			main PROC
				    ;call Level1Maze
				    ;call Level2Maze
				    ;call Level3Maze
				   
				;----------------------------------(Introduction screen)----------------------------------    
				;-----------------------------------------------------------------------------------------
 00000000  E8 0000006A		    call Menu1Name
 00000005  E8 000003FC		    call PacmanLogo
 0000000A  E8 00000503		    call Menu1EnterName
				;--------------------------------------(Menu screen)--------------------------------------    
				;-----------------------------------------------------------------------------------------
 0000000F			    Menu:
				    ;call clrscr
 0000000F  E8 00000875		    call Menu2Screen
 00000014  E8 00000000 E	    call Readchar
				;----------------------------------------(Selection)--------------------------------------
				;----------------------------------------(Selection)--------------------------------------
 00000019  3C 31		    cmp al,"1"
 0000001B  74 2D		    je level1
 0000001D  3C 32		    cmp al,"2"
 0000001F  75 11		    jne n2
 00000021  E8 00000000 E	    call clrscr
 00000026  E8 0000091E		    call InstructionPage
 0000002B  E8 00000000 E	    call readchar
 00000030  EB DD		    jmp Menu
 00000032			    n2:
 00000032  3C 33		    cmp al,"3"
 00000034  75 0C		    jne SkipL
 00000036  E8 00000996		    call HighScoreMenu
 0000003B  E8 00000000 E	    call readchar
 00000040  EB CD		    jmp Menu
 00000042			    SkipL:
 00000042			    n3:
 00000042  3C 34		    cmp al,"4"
 00000044  0F 84 000066C0	    je exitGame
 0000004A			    n4:


 0000004A			    level1:
 0000004A  E8 0000651B		        call Level1Maze 
 0000004F			    level2:
 0000004F  E8 0000656F		        call Level2Maze 
 00000054			    level3:
 00000054  E8 000065F6		        call Level3Maze

 00000059			    exitGame:
 00000059  E8 00000000 E	    call clrscr
 0000005E  B8 0000000F		    mov eax, white (black*16)
 00000063  E8 00000000 E	    call settextcolor
				    exit
 00000068  6A 00	   *	    push   +000000000h
 0000006A  E8 00000000 E   *	    call   ExitProcess

 0000006F			main ENDP
				;------------------------------------------(End of Main)---------------------------------------------
				;------------------------------------------(Main Screen)---------------------------------------------


				;------------------------------------------(Main Screen)---------------------------------------------
				;------------------------------------------(Main Screen)---------------------------------------------
 0000006F			Menu1Name PROC  
				    
				    ;call playMusic
				    ;INVOKE PlaySound, OFFSET musicIntro, NULL, SND_FILENAME

 0000006F  BE 000002C9 R	    mov esi,offset [m1_r01]
 00000074  B9 0000004C		    mov ecx,lengthof m1_r01
 00000079  E8 00000367		    call Menu1Displayer
 0000007E  E8 00000000 E	    call crlf
 00000083  B8 00000001		    mov eax,1   
 00000088  E8 00000000 E	    call Delay
 0000008D  BE 000002C9 R	    mov esi,offset [m1_r01]
 00000092  B9 0000004C		    mov ecx,lengthof m1_r01
 00000097  E8 00000349		    call Menu1Displayer
 0000009C  E8 00000000 E	    call crlf
 000000A1  B8 00000001		    mov eax,1   
 000000A6  E8 00000000 E	    call Delay

 000000AB  BE 00000315 R	    mov esi,offset [m1_r02]
 000000B0  B9 0000004C		    mov ecx,lengthof m1_r02
 000000B5  E8 0000032B		    call Menu1Displayer
 000000BA  E8 00000000 E	    call crlf
 000000BF  B8 00000001		    mov eax,1   
 000000C4  E8 00000000 E	    call Delay
 000000C9  BE 00000315 R	    mov esi,offset [m1_r02]
 000000CE  B9 0000004C		    mov ecx,lengthof m1_r02
 000000D3  E8 0000030D		    call Menu1Displayer
 000000D8  E8 00000000 E	    call crlf
 000000DD  B8 00000001		    mov eax,1   
 000000E2  E8 00000000 E	    call Delay
 000000E7  BE 00000315 R	    mov esi,offset [m1_r02]
 000000EC  B9 0000004C		    mov ecx,lengthof m1_r02
 000000F1  E8 000002EF		    call Menu1Displayer
 000000F6  E8 00000000 E	    call crlf
 000000FB  B8 00000001		    mov eax,1   
 00000100  E8 00000000 E	    call Delay
 00000105  BE 00000315 R	    mov esi,offset [m1_r02]
 0000010A  B9 0000004C		    mov ecx,lengthof m1_r02
 0000010F  E8 000002D1		    call Menu1Displayer
 00000114  E8 00000000 E	    call crlf
 00000119  B8 00000001		    mov eax,1   
 0000011E  E8 00000000 E	    call Delay
 00000123  BE 00000315 R	    mov esi,offset [m1_r02]
 00000128  B9 0000004C		    mov ecx,lengthof m1_r02
 0000012D  E8 000002B3		    call Menu1Displayer
 00000132  E8 00000000 E	    call crlf
 00000137  B8 00000001		    mov eax,1   
 0000013C  E8 00000000 E	    call Delay
 00000141  BE 00000315 R	    mov esi,offset [m1_r02]
 00000146  B9 0000004C		    mov ecx,lengthof m1_r02
 0000014B  E8 00000295		    call Menu1Displayer
 00000150  E8 00000000 E	    call crlf
 00000155  B8 00000001		    mov eax,1   
 0000015A  E8 00000000 E	    call Delay
 0000015F  BE 00000315 R	    mov esi,offset [m1_r02]
 00000164  B9 0000004C		    mov ecx,lengthof m1_r02
 00000169  E8 00000277		    call Menu1Displayer
 0000016E  E8 00000000 E	    call crlf
 00000173  B8 00000001		    mov eax,1   
 00000178  E8 00000000 E	    call Delay
 0000017D  BE 00000315 R	    mov esi,offset [m1_r02]
 00000182  B9 0000004C		    mov ecx,lengthof m1_r02
 00000187  E8 00000259		    call Menu1Displayer
 0000018C  E8 00000000 E	    call crlf
 00000191  B8 00000001		    mov eax,1   
 00000196  E8 00000000 E	    call Delay
 0000019B  BE 00000315 R	    mov esi,offset [m1_r02]
 000001A0  B9 0000004C		    mov ecx,lengthof m1_r02
 000001A5  E8 0000023B		    call Menu1Displayer
 000001AA  E8 00000000 E	    call crlf
 000001AF  B8 00000001		    mov eax,1   
 000001B4  E8 00000000 E	    call Delay
 000001B9  BE 00000315 R	    mov esi,offset [m1_r02]
 000001BE  B9 0000004C		    mov ecx,lengthof m1_r02
 000001C3  E8 0000021D		    call Menu1Displayer
 000001C8  E8 00000000 E	    call crlf
 000001CD  B8 00000001		    mov eax,1   
 000001D2  E8 00000000 E	    call Delay
 000001D7  BE 00000315 R	    mov esi,offset [m1_r02]
 000001DC  B9 0000004C		    mov ecx,lengthof m1_r02
 000001E1  E8 000001FF		    call Menu1Displayer
 000001E6  E8 00000000 E	    call crlf
 000001EB  B8 00000001		    mov eax,1   
 000001F0  E8 00000000 E	    call Delay
 000001F5  BE 00000315 R	    mov esi,offset [m1_r02]
 000001FA  B9 0000004C		    mov ecx,lengthof m1_r02
 000001FF  E8 000001E1		    call Menu1Displayer
 00000204  E8 00000000 E	    call crlf
 00000209  B8 00000001		    mov eax,1   
 0000020E  E8 00000000 E	    call Delay
 00000213  BE 00000315 R	    mov esi,offset [m1_r02]
 00000218  B9 0000004C		    mov ecx,lengthof m1_r02
 0000021D  E8 000001C3		    call Menu1Displayer
 00000222  E8 00000000 E	    call crlf
 00000227  B8 00000001		    mov eax,1   
 0000022C  E8 00000000 E	    call Delay
 00000231  BE 00000315 R	    mov esi,offset [m1_r02]
 00000236  B9 0000004C		    mov ecx,lengthof m1_r02
 0000023B  E8 000001A5		    call Menu1Displayer
 00000240  E8 00000000 E	    call crlf
 00000245  B8 00000001		    mov eax,1   
 0000024A  E8 00000000 E	    call Delay
 0000024F  BE 00000315 R	    mov esi,offset [m1_r02]
 00000254  B9 0000004C		    mov ecx,lengthof m1_r02
 00000259  E8 00000187		    call Menu1Displayer
 0000025E  E8 00000000 E	    call crlf
 00000263  B8 00000001		    mov eax,1   
 00000268  E8 00000000 E	    call Delay
 0000026D  BE 00000315 R	    mov esi,offset [m1_r02]
 00000272  B9 0000004C		    mov ecx,lengthof m1_r02
 00000277  E8 00000169		    call Menu1Displayer
 0000027C  E8 00000000 E	    call crlf
 00000281  B8 00000001		    mov eax,1   
 00000286  E8 00000000 E	    call Delay
 0000028B  BE 00000315 R	    mov esi,offset [m1_r02]
 00000290  B9 0000004C		    mov ecx,lengthof m1_r02
 00000295  E8 0000014B		    call Menu1Displayer
 0000029A  E8 00000000 E	    call crlf
 0000029F  B8 00000001		    mov eax,1   
 000002A4  E8 00000000 E	    call Delay
 000002A9  BE 00000315 R	    mov esi,offset [m1_r02]
 000002AE  B9 0000004C		    mov ecx,lengthof m1_r02
 000002B3  E8 0000012D		    call Menu1Displayer
 000002B8  E8 00000000 E	    call crlf
 000002BD  B8 00000001		    mov eax,1   
 000002C2  E8 00000000 E	    call Delay
 000002C7  BE 00000315 R	    mov esi,offset [m1_r02]
 000002CC  B9 0000004C		    mov ecx,lengthof m1_r02
 000002D1  E8 0000010F		    call Menu1Displayer
 000002D6  E8 00000000 E	    call crlf
 000002DB  B8 00000001		    mov eax,1   
 000002E0  E8 00000000 E	    call Delay
 000002E5  BE 00000315 R	    mov esi,offset [m1_r02]
 000002EA  B9 0000004C		    mov ecx,lengthof m1_r02
 000002EF  E8 000000F1		    call Menu1Displayer
 000002F4  E8 00000000 E	    call crlf
 000002F9  B8 00000001		    mov eax,1   
 000002FE  E8 00000000 E	    call Delay
 00000303  BE 00000315 R	    mov esi,offset [m1_r02]
 00000308  B9 0000004C		    mov ecx,lengthof m1_r02
 0000030D  E8 000000D3		    call Menu1Displayer
 00000312  E8 00000000 E	    call crlf
 00000317  B8 00000001		    mov eax,1   
 0000031C  E8 00000000 E	    call Delay
 00000321  BE 00000315 R	    mov esi,offset [m1_r02]
 00000326  B9 0000004C		    mov ecx,lengthof m1_r02
 0000032B  E8 000000B5		    call Menu1Displayer
 00000330  E8 00000000 E	    call crlf
 00000335  B8 00000001		    mov eax,1   
 0000033A  E8 00000000 E	    call Delay
 0000033F  BE 00000315 R	    mov esi,offset [m1_r02]
 00000344  B9 0000004C		    mov ecx,lengthof m1_r02
 00000349  E8 00000097		    call Menu1Displayer
 0000034E  E8 00000000 E	    call crlf
 00000353  B8 00000001		    mov eax,1   
 00000358  E8 00000000 E	    call Delay
 0000035D  BE 00000315 R	    mov esi,offset [m1_r02]
 00000362  B9 0000004C		    mov ecx,lengthof m1_r02
 00000367  E8 00000079		    call Menu1Displayer
 0000036C  E8 00000000 E	    call crlf
 00000371  B8 00000001		    mov eax,1   
 00000376  E8 00000000 E	    call Delay
 0000037B  BE 00000315 R	    mov esi,offset [m1_r02]
 00000380  B9 0000004C		    mov ecx,lengthof m1_r02
 00000385  E8 0000005B		    call Menu1Displayer
 0000038A  E8 00000000 E	    call crlf
 0000038F  B8 00000001		    mov eax,1   
 00000394  E8 00000000 E	    call Delay

 00000399  BE 000002C9 R	    mov esi,offset [m1_r01]
 0000039E  B9 0000004C		    mov ecx,lengthof m1_r01
 000003A3  E8 0000003D		    call Menu1Displayer
 000003A8  E8 00000000 E	    call crlf
 000003AD  B8 00000001		    mov eax,1   
 000003B2  E8 00000000 E	    call Delay
 000003B7  BE 000002C9 R	    mov esi,offset [m1_r01]
 000003BC  B9 0000004C		    mov ecx,lengthof m1_r01
 000003C1  E8 0000001F		    call Menu1Displayer
 000003C6  E8 00000000 E	    call crlf
 000003CB  B8 00000001		    mov eax,1   
 000003D0  E8 00000000 E	    call Delay

 000003D5  B8 00000000		    mov eax ,0
 000003DA  B8 00000000		    mov eax, black (black*16)
 000003DF  E8 00000000 E	    call settextcolor

 000003E4  C3			    ret
 000003E5			Menu1Name ENDP  
 000003E5			Menu1Displayer PROC

 000003E5			    ld1:
 000003E5  8B 1E		        mov ebx,[esi]  
 000003E7  80 FB 20		        cmp bl,' '
 000003EA  74 0A		        jz C1
 000003EC  3A 1D 000002B1 R	        cmp bl,wall
 000003F2  74 09		        jz C3
 000003F4  EB 0C		        jmp ld_excape
 000003F6  E8 00000F79		        C1: call DrawSpace
 000003FB  EB 05		        jmp ld_excape
 000003FD  E8 00000FCB		        C3: call DrawRedWall
 00000402			        ld_excape:
 00000402  46			        inc esi
 00000403  E2 E0		        loop ld1    
 00000405  C3			    ret
 00000406			Menu1Displayer ENDP 
 00000406			PacmanLogo PROC  
 00000406  B8 00000000		    mov eax ,0
 0000040B  B8 0000000E		    mov eax, yellow (black*16)
 00000410  E8 00000000 E	    call settextcolor

 00000415  B6 03		    mov dh,3
 00000417  B2 04		    mov dl,4
 00000419  E8 00000000 E	    call gotoxy
 0000041E  BA 00000361 R	    mov edx,offset pacman_0
 00000423  E8 00000000 E	    call writestring
 00000428  B8 00000032		    mov  eax,50    
 0000042D  E8 00000000 E	    call Delay
 00000432  B6 04		    mov dh,4
 00000434  B2 04		    mov dl,4
 00000436  E8 00000000 E	    call gotoxy
 0000043B  BA 000003A3 R	    mov edx,offset pacman_1
 00000440  E8 00000000 E	    call writestring
 00000445  B8 00000032		    mov  eax,50    
 0000044A  E8 00000000 E	    call Delay
 0000044F  B6 05		    mov dh,5
 00000451  B2 04		    mov dl,4
 00000453  E8 00000000 E	    call gotoxy
 00000458  BA 000003E5 R	    mov edx,offset pacman_2
 0000045D  E8 00000000 E	    call writestring
 00000462  B8 00000032		    mov  eax,50   
 00000467  E8 00000000 E	    call Delay
 0000046C  B6 06		    mov dh,6
 0000046E  B2 04		    mov dl,4
 00000470  E8 00000000 E	    call gotoxy
 00000475  BA 00000427 R	    mov edx,offset pacman_3
 0000047A  E8 00000000 E	    call writestring
 0000047F  B8 00000032		    mov  eax,50   
 00000484  E8 00000000 E	    call Delay
 00000489  B6 07		    mov dh,7
 0000048B  B2 04		    mov dl,4
 0000048D  E8 00000000 E	    call gotoxy
 00000492  BA 00000469 R	    mov edx,offset pacman_4
 00000497  E8 00000000 E	    call writestring
 0000049C  B8 00000032		    mov  eax,50    
 000004A1  E8 00000000 E	    call Delay
 000004A6  B6 08		    mov dh,8
 000004A8  B2 04		    mov dl,4
 000004AA  E8 00000000 E	    call gotoxy
 000004AF  BA 000004AB R	    mov edx,offset pacman_5
 000004B4  E8 00000000 E	    call writestring
 000004B9  B8 00000032		    mov  eax,50    
 000004BE  E8 00000000 E	    call Delay
 000004C3  B6 09		    mov dh,9
 000004C5  B2 04		    mov dl,4
 000004C7  E8 00000000 E	    call gotoxy
 000004CC  BA 000004ED R	    mov edx,offset pacman_6
 000004D1  E8 00000000 E	    call writestring
 000004D6  B8 00000032		    mov  eax,50   
 000004DB  E8 00000000 E	    call Delay
 000004E0  B6 0A		    mov dh,10
 000004E2  B2 04		    mov dl,4
 000004E4  E8 00000000 E	    call gotoxy
 000004E9  BA 0000052F R	    mov edx,offset pacman_7
 000004EE  E8 00000000 E	    call writestring
 000004F3  B8 00000032		    mov  eax,50   
 000004F8  E8 00000000 E	    call Delay

 000004FD  B8 00000000		    mov eax ,0
 00000502  B8 00000000		    mov eax, black (black*16)
 00000507  E8 00000000 E	    call settextcolor

 0000050C  E8 0000007A		    call PinkyGhost


 00000511  C3			    ret
 00000512			PacmanLogo ENDP 
 00000512			Menu1EnterName PROC 
				    
 00000512  B8 00000000		    mov eax ,0
 00000517  B8 00000008		    mov eax, gray (black*16)
 0000051C  E8 00000000 E	    call settextcolor

 00000521  B6 14		    mov dh,20
 00000523  B2 2A		    mov dl,42
 00000525  E8 00000000 E	    call gotoxy
				    mwrite "Press 'ENTER' to Continue",0
			     1	;
main.asm(584) : warning A4006:too many arguments in macro call
 mWrite(1): Macro Called From
  main.asm(584): Main Line Code
 000014DA		     1		.data		
 000014DA 50 72 65 73 73     1		??0000 BYTE "Press 'ENTER' to Continue",0	
	   20 27 45 4E 54
	   45 52 27 20 74
	   6F 20 43 6F 6E
	   74 69 6E 75 65
	   00
 0000052A		     1		.code
 0000052A  52		     1		push	edx
 0000052B  BA 000014DA R     1		mov	edx,OFFSET ??0000
 00000530  E8 00000000 E     1		call	WriteString
 00000535  5A		     1		pop	edx

 00000536  B8 00000000		    mov eax ,0
 0000053B  B8 0000000F		    mov eax, white (black*16)
 00000540  E8 00000000 E	    call settextcolor

 00000545  B6 0F		    mov dh,15
 00000547  B2 2A		    mov dl,42
 00000549  E8 00000000 E	    call gotoxy
				    mwrite "Enter UserName : ",0
			     1	;
main.asm(593) : warning A4006:too many arguments in macro call
 mWrite(1): Macro Called From
  main.asm(593): Main Line Code
 000014F4		     1		.data		
 000014F4 45 6E 74 65 72     1		??0001 BYTE "Enter UserName : ",0	
	   20 55 73 65 72
	   4E 61 6D 65 20
	   3A 20 00
 0000054E		     1		.code
 0000054E  52		     1		push	edx
 0000054F  BA 000014F4 R     1		mov	edx,OFFSET ??0001
 00000554  E8 00000000 E     1		call	WriteString
 00000559  5A		     1		pop	edx

				    INVOKE PlaySound, OFFSET musicIntro, NULL, SND_FILENAME
 0000055A  FF 35 0000000C R *	    push   SND_FILENAME
 00000560  6A 00	   *	    push   +000000000h
 00000562  68 00000010 R   *	    push   dword  ptr OFFSET FLAT: musicIntro
 00000567  E8 00000000 E   *	    call   PlaySound
				    
 0000056C  B9 00000019		    mov ecx,25
 00000571  BA 00000061 R	    mov edx,offset Menu1InputNamePrompt
 00000576  E8 00000000 E	    call readstring

 0000057B  B8 00000000		    mov eax ,0
 00000580  B8 00000000		    mov eax, black (black*16)
 00000585  E8 00000000 E	    call settextcolor

				    
 0000058A  C3			    ret
 0000058B			Menu1EnterName ENDP 

 0000058B			PinkyGhost PROC
 0000058B  BE 00000571 R	    mov esi,offset pinky_01
 00000590  B9 00000017		    mov ecx,lengthof pinky_01
 00000595  B6 0D		    mov dh,13
 00000597  B2 06		    mov dl,6
 00000599  E8 00000000 E	    call gotoxy
 0000059E  E8 0000012B		    call GhostMaker
 000005A3  BE 00000588 R	    mov esi,offset pinky_02
 000005A8  B9 0000001B		    mov ecx,lengthof pinky_02
 000005AD  B6 0E		    mov dh,14
 000005AF  B2 06		    mov dl,6
 000005B1  E8 00000000 E	    call gotoxy
 000005B6  E8 00000113		    call GhostMaker
 000005BB  BE 000005A3 R	    mov esi,offset pinky_03
 000005C0  B9 0000001D		    mov ecx,lengthof pinky_03
 000005C5  B6 0F		    mov dh,15
 000005C7  B2 06		    mov dl,6
 000005C9  E8 00000000 E	    call gotoxy
 000005CE  E8 000000FB		    call GhostMaker
 000005D3  BE 000005C0 R	    mov esi,offset pinky_04
 000005D8  B9 0000001F		    mov ecx,lengthof pinky_04
 000005DD  B6 10		    mov dh,16
 000005DF  B2 06		    mov dl,6
 000005E1  E8 00000000 E	    call gotoxy
 000005E6  E8 000000E3		    call GhostMaker
 000005EB  BE 000005DF R	    mov esi,offset pinky_05
 000005F0  B9 0000001F		    mov ecx,lengthof pinky_05
 000005F5  B6 11		    mov dh,17
 000005F7  B2 06		    mov dl,6
 000005F9  E8 00000000 E	    call gotoxy
 000005FE  E8 000000CB		    call GhostMaker
 00000603  BE 000005FE R	    mov esi,offset pinky_06
 00000608  B9 0000001F		    mov ecx,lengthof pinky_06
 0000060D  B6 12		    mov dh,18
 0000060F  B2 06		    mov dl,6
 00000611  E8 00000000 E	    call gotoxy
 00000616  E8 000000B3		    call GhostMaker
 0000061B  BE 0000061D R	    mov esi,offset pinky_07
 00000620  B9 00000021		    mov ecx,lengthof pinky_07
 00000625  B6 13		    mov dh,19
 00000627  B2 06		    mov dl,6
 00000629  E8 00000000 E	    call gotoxy
 0000062E  E8 0000009B		    call GhostMaker
 00000633  BE 0000063E R	    mov esi,offset pinky_08
 00000638  B9 00000021		    mov ecx,lengthof pinky_08
 0000063D  B6 14		    mov dh,20
 0000063F  B2 06		    mov dl,6
 00000641  E8 00000000 E	    call gotoxy
 00000646  E8 00000083		    call GhostMaker
 0000064B  BE 0000065F R	    mov esi,offset pinky_09
 00000650  B9 00000021		    mov ecx,lengthof pinky_09
 00000655  B6 15		    mov dh,21
 00000657  B2 06		    mov dl,6
 00000659  E8 00000000 E	    call gotoxy
 0000065E  E8 0000006B		    call GhostMaker
 00000663  BE 00000680 R	    mov esi,offset pinky_10
 00000668  B9 00000021		    mov ecx,lengthof pinky_10
 0000066D  B6 16		    mov dh,22
 0000066F  B2 06		    mov dl,6
 00000671  E8 00000000 E	    call gotoxy
 00000676  E8 00000053		    call GhostMaker
 0000067B  BE 000006A1 R	    mov esi,offset pinky_11
 00000680  B9 00000021		    mov ecx,lengthof pinky_11
 00000685  B6 17		    mov dh,23
 00000687  B2 06		    mov dl,6
 00000689  E8 00000000 E	    call gotoxy
 0000068E  E8 0000003B		    call GhostMaker
 00000693  BE 000006C2 R	    mov esi,offset pinky_12
 00000698  B9 00000021		    mov ecx,lengthof pinky_12
 0000069D  B6 18		    mov dh,24
 0000069F  B2 06		    mov dl,6
 000006A1  E8 00000000 E	    call gotoxy
 000006A6  E8 00000023		    call GhostMaker
 000006AB  BE 000006E3 R	    mov esi,offset pinky_13
 000006B0  B9 00000021		    mov ecx,lengthof pinky_13
 000006B5  B6 19		    mov dh,25
 000006B7  B2 06		    mov dl,6
 000006B9  E8 00000000 E	    call gotoxy
 000006BE  E8 0000000B		    call GhostMaker
 000006C3  B8 00000000		    mov eax,black (black*16)
 000006C8  E8 00000000 E	    call settextcolor
 000006CD  C3			    ret
 000006CE			PinkyGhost ENDP    
 000006CE			GhostMaker PROC 
 000006CE  49			    dec ecx
 000006CF			    ld1:
 000006CF  8B 1E		        mov ebx,[esi]
 000006D1  80 FB 20		        cmp bl,' '
 000006D4  74 14		        jz C1
 000006D6  80 FB 50		        cmp bl,"P"
 000006D9  74 16		        jz C2
 000006DB  80 FB 57		        cmp bl,"W"
 000006DE  74 18		        jz C3
 000006E0  80 FB 42		        cmp bl,"B"
 000006E3  74 1A		        jz C4
 000006E5  E8 00000CB2		        call DrawWall
 000006EA  E8 00000C85		    C1: call DrawSpace
 000006EF  EB 15		        jmp ld_excape
 000006F1  E8 00000D0B		    C2: call DrawPinkWall
 000006F6  EB 0E		        jmp ld_excape
 000006F8  E8 00000D1E		    C3: call DrawWhiteWall
 000006FD  EB 07		        jmp ld_excape
 000006FF  E8 00000CE3		    C4: call DrawBlueWall
 00000704  EB 00		        jmp ld_excape
 00000706			    ld_excape:
 00000706  46			    inc esi
 00000707  E2 C6		    loop ld1

 00000709  C3			    ret
 0000070A			GhostMaker ENDP 

 0000070A			RedyGhost PROC
 0000070A  BE 00000571 R	    mov esi,offset pinky_01
 0000070F  B9 00000017		    mov ecx,lengthof pinky_01
 00000714  B6 0D		    mov dh,13
 00000716  B2 06		    mov dl,6
 00000718  E8 00000000 E	    call gotoxy
 0000071D  E8 0000012B		    call RedGhostMaker
 00000722  BE 00000588 R	    mov esi,offset pinky_02
 00000727  B9 0000001B		    mov ecx,lengthof pinky_02
 0000072C  B6 0E		    mov dh,14
 0000072E  B2 06		    mov dl,6
 00000730  E8 00000000 E	    call gotoxy
 00000735  E8 00000113		    call RedGhostMaker
 0000073A  BE 000005A3 R	    mov esi,offset pinky_03
 0000073F  B9 0000001D		    mov ecx,lengthof pinky_03
 00000744  B6 0F		    mov dh,15
 00000746  B2 06		    mov dl,6
 00000748  E8 00000000 E	    call gotoxy
 0000074D  E8 000000FB		    call RedGhostMaker
 00000752  BE 000005C0 R	    mov esi,offset pinky_04
 00000757  B9 0000001F		    mov ecx,lengthof pinky_04
 0000075C  B6 10		    mov dh,16
 0000075E  B2 06		    mov dl,6
 00000760  E8 00000000 E	    call gotoxy
 00000765  E8 000000E3		    call RedGhostMaker
 0000076A  BE 000005DF R	    mov esi,offset pinky_05
 0000076F  B9 0000001F		    mov ecx,lengthof pinky_05
 00000774  B6 11		    mov dh,17
 00000776  B2 06		    mov dl,6
 00000778  E8 00000000 E	    call gotoxy
 0000077D  E8 000000CB		    call RedGhostMaker
 00000782  BE 000005FE R	    mov esi,offset pinky_06
 00000787  B9 0000001F		    mov ecx,lengthof pinky_06
 0000078C  B6 12		    mov dh,18
 0000078E  B2 06		    mov dl,6
 00000790  E8 00000000 E	    call gotoxy
 00000795  E8 000000B3		    call RedGhostMaker
 0000079A  BE 0000061D R	    mov esi,offset pinky_07
 0000079F  B9 00000021		    mov ecx,lengthof pinky_07
 000007A4  B6 13		    mov dh,19
 000007A6  B2 06		    mov dl,6
 000007A8  E8 00000000 E	    call gotoxy
 000007AD  E8 0000009B		    call RedGhostMaker
 000007B2  BE 0000063E R	    mov esi,offset pinky_08
 000007B7  B9 00000021		    mov ecx,lengthof pinky_08
 000007BC  B6 14		    mov dh,20
 000007BE  B2 06		    mov dl,6
 000007C0  E8 00000000 E	    call gotoxy
 000007C5  E8 00000083		    call RedGhostMaker
 000007CA  BE 0000065F R	    mov esi,offset pinky_09
 000007CF  B9 00000021		    mov ecx,lengthof pinky_09
 000007D4  B6 15		    mov dh,21
 000007D6  B2 06		    mov dl,6
 000007D8  E8 00000000 E	    call gotoxy
 000007DD  E8 0000006B		    call RedGhostMaker
 000007E2  BE 00000680 R	    mov esi,offset pinky_10
 000007E7  B9 00000021		    mov ecx,lengthof pinky_10
 000007EC  B6 16		    mov dh,22
 000007EE  B2 06		    mov dl,6
 000007F0  E8 00000000 E	    call gotoxy
 000007F5  E8 00000053		    call RedGhostMaker
 000007FA  BE 000006A1 R	    mov esi,offset pinky_11
 000007FF  B9 00000021		    mov ecx,lengthof pinky_11
 00000804  B6 17		    mov dh,23
 00000806  B2 06		    mov dl,6
 00000808  E8 00000000 E	    call gotoxy
 0000080D  E8 0000003B		    call RedGhostMaker
 00000812  BE 000006C2 R	    mov esi,offset pinky_12
 00000817  B9 00000021		    mov ecx,lengthof pinky_12
 0000081C  B6 18		    mov dh,24
 0000081E  B2 06		    mov dl,6
 00000820  E8 00000000 E	    call gotoxy
 00000825  E8 00000023		    call RedGhostMaker
 0000082A  BE 000006E3 R	    mov esi,offset pinky_13
 0000082F  B9 00000021		    mov ecx,lengthof pinky_13
 00000834  B6 19		    mov dh,25
 00000836  B2 06		    mov dl,6
 00000838  E8 00000000 E	    call gotoxy
 0000083D  E8 0000000B		    call RedGhostMaker
 00000842  B8 00000000		    mov eax,black (black*16)
 00000847  E8 00000000 E	    call settextcolor
 0000084C  C3			    ret
 0000084D			RedyGhost ENDP    
 0000084D			RedGhostMaker PROC 
 0000084D  49			    dec ecx
 0000084E			    ld1:
 0000084E  8B 1E		        mov ebx,[esi]
 00000850  80 FB 20		        cmp bl,' '
 00000853  74 14		        jz C1
 00000855  80 FB 50		        cmp bl,"P"
 00000858  74 16		        jz C2
 0000085A  80 FB 57		        cmp bl,"W"
 0000085D  74 18		        jz C3
 0000085F  80 FB 42		        cmp bl,"B"
 00000862  74 1A		        jz C4
 00000864  E8 00000B33		        call DrawWall
 00000869  E8 00000B06		    C1: call DrawSpace
 0000086E  EB 15		        jmp ld_excape
 00000870  E8 00000B58		    C2: call DrawRedWall
 00000875  EB 0E		        jmp ld_excape
 00000877  E8 00000B9F		    C3: call DrawWhiteWall
 0000087C  EB 07		        jmp ld_excape
 0000087E  E8 00000B64		    C4: call DrawBlueWall
 00000883  EB 00		        jmp ld_excape
 00000885			    ld_excape:
 00000885  46			    inc esi
 00000886  E2 C6		    loop ld1

 00000888  C3			    ret
 00000889			RedGhostMaker ENDP 

				;------------------------------------------(Menu Screen)---------------------------------------------
				;------------------------------------------(Menu Screen)---------------------------------------------
 00000889			Menu2Screen PROC
 00000889  E8 00000000 E	    call clrscr
 0000088E  E8 FFFFF7DC		    call  Menu1Name  
 00000893  E8 FFFFFB6E		    call PacmanLogo
 00000898  E8 FFFFFE6D		    call RedyGhost  

 0000089D  B8 00000000		    mov eax ,0
 000008A2  B8 00000008		    mov eax, gray (black*16)
 000008A7  E8 00000000 E	    call settextcolor

 000008AC  B6 16		    mov dh,22
 000008AE  B2 2D		    mov dl,45
 000008B0  E8 00000000 E	    call gotoxy
				    mwrite "Press '1,2,3 or 4'",0
			     1	;
main.asm(846) : warning A4006:too many arguments in macro call
 mWrite(1): Macro Called From
  main.asm(846): Main Line Code
 00001506		     1		.data		
 00001506 50 72 65 73 73     1		??0002 BYTE "Press '1,2,3 or 4'",0	
	   20 27 31 2C 32
	   2C 33 20 6F 72
	   20 34 27 00
 000008B5		     1		.code
 000008B5  52		     1		push	edx
 000008B6  BA 00001506 R     1		mov	edx,OFFSET ??0002
 000008BB  E8 00000000 E     1		call	WriteString
 000008C0  5A		     1		pop	edx
 000008C1  B6 17		    mov dh,23
 000008C3  B2 30		    mov dl,48
 000008C5  E8 00000000 E	    call gotoxy
				    mwrite "to Continue",0
			     1	;
main.asm(850) : warning A4006:too many arguments in macro call
 mWrite(1): Macro Called From
  main.asm(850): Main Line Code
 00001519		     1		.data		
 00001519 74 6F 20 43 6F     1		??0003 BYTE "to Continue",0	
	   6E 74 69 6E 75
	   65 00
 000008CA		     1		.code
 000008CA  52		     1		push	edx
 000008CB  BA 00001519 R     1		mov	edx,OFFSET ??0003
 000008D0  E8 00000000 E     1		call	WriteString
 000008D5  5A		     1		pop	edx

 000008D6  B8 00000000		    mov eax ,0
 000008DB  B8 0000000F		    mov eax, white (black*16)
 000008E0  E8 00000000 E	    call settextcolor

 000008E5  B6 0F		    mov dh,15
 000008E7  B2 28		    mov dl,40
 000008E9  E8 00000000 E	    call gotoxy 
				    mwrite "          Play",0
			     1	;
main.asm(859) : warning A4006:too many arguments in macro call
 mWrite(1): Macro Called From
  main.asm(859): Main Line Code
 00001525		     1		.data		
 00001525 20 20 20 20 20     1		??0004 BYTE "          Play",0	
	   20 20 20 20 20
	   50 6C 61 79 00
 000008EE		     1		.code
 000008EE  52		     1		push	edx
 000008EF  BA 00001525 R     1		mov	edx,OFFSET ??0004
 000008F4  E8 00000000 E     1		call	WriteString
 000008F9  5A		     1		pop	edx

 000008FA  B6 10		    mov dh,16
 000008FC  B2 28		    mov dl,40
 000008FE  E8 00000000 E	    call gotoxy
				    mwrite "      How to Play?",0
			     1	;
main.asm(864) : warning A4006:too many arguments in macro call
 mWrite(1): Macro Called From
  main.asm(864): Main Line Code
 00001534		     1		.data		
 00001534 20 20 20 20 20     1		??0005 BYTE "      How to Play?",0	
	   20 48 6F 77 20
	   74 6F 20 50 6C
	   61 79 3F 00
 00000903		     1		.code
 00000903  52		     1		push	edx
 00000904  BA 00001534 R     1		mov	edx,OFFSET ??0005
 00000909  E8 00000000 E     1		call	WriteString
 0000090E  5A		     1		pop	edx

 0000090F  B6 11		    mov dh,17
 00000911  B2 28		    mov dl,40
 00000913  E8 00000000 E	    call gotoxy
				    mwrite "        Highscore",0
			     1	;
main.asm(869) : warning A4006:too many arguments in macro call
 mWrite(1): Macro Called From
  main.asm(869): Main Line Code
 00001547		     1		.data		
 00001547 20 20 20 20 20     1		??0006 BYTE "        Highscore",0	
	   20 20 20 48 69
	   67 68 73 63 6F
	   72 65 00
 00000918		     1		.code
 00000918  52		     1		push	edx
 00000919  BA 00001547 R     1		mov	edx,OFFSET ??0006
 0000091E  E8 00000000 E     1		call	WriteString
 00000923  5A		     1		pop	edx
				    
 00000924  B6 12		    mov dh,18
 00000926  B2 28		    mov dl,40
 00000928  E8 00000000 E	    call gotoxy
				    mwrite "          Quit",0
			     1	;
main.asm(874) : warning A4006:too many arguments in macro call
 mWrite(1): Macro Called From
  main.asm(874): Main Line Code
 00001559		     1		.data		
 00001559 20 20 20 20 20     1		??0007 BYTE "          Quit",0	
	   20 20 20 20 20
	   51 75 69 74 00
 0000092D		     1		.code
 0000092D  52		     1		push	edx
 0000092E  BA 00001559 R     1		mov	edx,OFFSET ??0007
 00000933  E8 00000000 E     1		call	WriteString
 00000938  5A		     1		pop	edx

 00000939  B8 00000000		    mov eax ,0
 0000093E  B8 0000000F		    mov eax, white (black*16)
 00000943  E8 00000000 E	    call settextcolor
				    
 00000948  C3			    ret
 00000949			Menu2Screen ENDP
				;------------------------------------------(Instructions)--------------------------------------------
				;------------------------------------------(Menu Screen)---------------------------------------------
 00000949			InstructionPage PROC    
 00000949  B8 00000000		    mov eax ,0
 0000094E  B8 0000000F		    mov eax, white (black*16)
 00000953  E8 00000000 E	    call settextcolor

 00000958  B6 0A		    mov dh,10
 0000095A  B2 0A		    mov dl,10
 0000095C  E8 00000000 E	    call gotoxy
				    mwrite "          Asking for Pac-Man instructions?",0
			     1	;
main.asm(892) : warning A4006:too many arguments in macro call
 mWrite(1): Macro Called From
  main.asm(892): Main Line Code
 00001568		     1		.data		
 00001568 20 20 20 20 20     1		??0008 BYTE "          Asking for Pac-Man instructions?",0	
	   20 20 20 20 20
	   41 73 6B 69 6E
	   67 20 66 6F 72
	   20 50 61 63 2D
	   4D 61 6E 20 69
	   6E 73 74 72 75
	   63 74 69 6F 6E
	   73 3F 00
 00000961		     1		.code
 00000961  52		     1		push	edx
 00000962  BA 00001568 R     1		mov	edx,OFFSET ??0008
 00000967  E8 00000000 E     1		call	WriteString
 0000096C  5A		     1		pop	edx
 0000096D  B6 0C		    mov dh,12
 0000096F  B2 0A		    mov dl,10
 00000971  E8 00000000 E	    call gotoxy
				    mwrite "     do you also need guidance on how to breathe?",0
			     1	;
main.asm(896) : warning A4006:too many arguments in macro call
 mWrite(1): Macro Called From
  main.asm(896): Main Line Code
 00001593		     1		.data		
 00001593 20 20 20 20 20     1		??0009 BYTE "     do you also need guidance on how to breathe?",0	
	   64 6F 20 79 6F
	   75 20 61 6C 73
	   6F 20 6E 65 65
	   64 20 67 75 69
	   64 61 6E 63 65
	   20 6F 6E 20 68
	   6F 77 20 74 6F
	   20 62 72 65 61
	   74 68 65 3F 00
 00000976		     1		.code
 00000976  52		     1		push	edx
 00000977  BA 00001593 R     1		mov	edx,OFFSET ??0009
 0000097C  E8 00000000 E     1		call	WriteString
 00000981  5A		     1		pop	edx
 00000982  B6 0D		    mov dh,13
 00000984  B2 0A		    mov dl,10
 00000986  E8 00000000 E	    call gotoxy
				    mwrite "  Just press the 'Inhale' button, you'll figure it out!",0
			     1	;
main.asm(900) : warning A4006:too many arguments in macro call
 mWrite(1): Macro Called From
  main.asm(900): Main Line Code
 000015C5		     1		.data		
 000015C5 20 20 4A 75 73     1		??000A BYTE "  Just press the 'Inhale' button, you'll figure it out!",0	
	   74 20 70 72 65
	   73 73 20 74 68
	   65 20 27 49 6E
	   68 61 6C 65 27
	   20 62 75 74 74
	   6F 6E 2C 20 79
	   6F 75 27 6C 6C
	   20 66 69 67 75
	   72 65 20 69 74
	   20 6F 75 74 21
	   00
 0000098B		     1		.code
 0000098B  52		     1		push	edx
 0000098C  BA 000015C5 R     1		mov	edx,OFFSET ??000A
 00000991  E8 00000000 E     1		call	WriteString
 00000996  5A		     1		pop	edx
 00000997  B6 10		    mov dh,16
 00000999  B2 0A		    mov dl,10
 0000099B  E8 00000000 E	    call gotoxy
				    mwrite "        It's like a maze of common sense, really.",0
			     1	;
main.asm(904) : warning A4006:too many arguments in macro call
 mWrite(1): Macro Called From
  main.asm(904): Main Line Code
 000015FD		     1		.data		
 000015FD 20 20 20 20 20     1		??000B BYTE "        It's like a maze of common sense, really.",0	
	   20 20 20 49 74
	   27 73 20 6C 69
	   6B 65 20 61 20
	   6D 61 7A 65 20
	   6F 66 20 63 6F
	   6D 6D 6F 6E 20
	   73 65 6E 73 65
	   2C 20 72 65 61
	   6C 6C 79 2E 00
 000009A0		     1		.code
 000009A0  52		     1		push	edx
 000009A1  BA 000015FD R     1		mov	edx,OFFSET ??000B
 000009A6  E8 00000000 E     1		call	WriteString
 000009AB  5A		     1		pop	edx
				    
 000009AC  B8 00000000		    mov eax ,0
 000009B1  B8 00000008		    mov eax, gray (black*16)
 000009B6  E8 00000000 E	    call settextcolor

 000009BB  B6 16		    mov dh,22
 000009BD  B2 1A		    mov dl,26
 000009BF  E8 00000000 E	    call gotoxy
				    mwrite "Press B for going back",0
			     1	;
main.asm(913) : warning A4006:too many arguments in macro call
 mWrite(1): Macro Called From
  main.asm(913): Main Line Code
 0000162F		     1		.data		
 0000162F 50 72 65 73 73     1		??000C BYTE "Press B for going back",0	
	   20 42 20 66 6F
	   72 20 67 6F 69
	   6E 67 20 62 61
	   63 6B 00
 000009C4		     1		.code
 000009C4  52		     1		push	edx
 000009C5  BA 0000162F R     1		mov	edx,OFFSET ??000C
 000009CA  E8 00000000 E     1		call	WriteString
 000009CF  5A		     1		pop	edx
 000009D0  C3			    ret
 000009D1			InstructionPage ENDP    
				;-------------------------------------------(HighScore)----------------------------------------------
				;------------------------------------------(Menu Screen)---------------------------------------------
 000009D1			HighScoreMenu PROC
 000009D1  E8 00000000 E	    call clrscr
 000009D6  E8 FFFFF694		    call Menu1Name  
 000009DB  E8 FFFFFA26		    call PacmanLogo 
 000009E0  BA 0000027B R	    mov edx,OFFSET filename
 000009E5  E8 00000000 E	    call OpenInputFile
 000009EA  A3 0000028E R	    mov fileHandle,eax

 000009EF			    letsOpenFile:
 000009EF  BA 0000007A R	        mov edx,offset buffer
 000009F4  B9 000000FF		        mov ecx,255
 000009F9  E8 00000000 E	        call ReadFromFile
 000009FE  C6 05 00000179 R	        mov buffer[255],0
	   00
 00000A05  E8 00000000 E	    call CloseFile

 00000A0A  B8 00000000		    mov eax ,0
 00000A0F  B8 00000008		    mov eax, gray (black*16)
 00000A14  E8 00000000 E	    call settextcolor

 00000A19  B6 17		    mov dh,23
 00000A1B  B2 2C		    mov dl,44
 00000A1D  E8 00000000 E	    call gotoxy
				    mwrite "Press B for going back",0
			     1	;
main.asm(940) : warning A4006:too many arguments in macro call
 mWrite(1): Macro Called From
  main.asm(940): Main Line Code
 00001646		     1		.data		
 00001646 50 72 65 73 73     1		??000D BYTE "Press B for going back",0	
	   20 42 20 66 6F
	   72 20 67 6F 69
	   6E 67 20 62 61
	   63 6B 00
 00000A22		     1		.code
 00000A22  52		     1		push	edx
 00000A23  BA 00001646 R     1		mov	edx,OFFSET ??000D
 00000A28  E8 00000000 E     1		call	WriteString
 00000A2D  5A		     1		pop	edx

 00000A2E  B8 0000000F		    mov eax,white(black*16)
 00000A33  E8 00000000 E	    call settextcolor

 00000A38  B6 10		    mov dh,16
 00000A3A  B2 2A		    mov dl,42
 00000A3C  E8 00000000 E	    call gotoxy
				    mwrite "Name      Score       Level",0
			     1	;
main.asm(948) : warning A4006:too many arguments in macro call
 mWrite(1): Macro Called From
  main.asm(948): Main Line Code
 0000165D		     1		.data		
 0000165D 4E 61 6D 65 20     1		??000E BYTE "Name      Score       Level",0	
	   20 20 20 20 20
	   53 63 6F 72 65
	   20 20 20 20 20
	   20 20 4C 65 76
	   65 6C 00
 00000A41		     1		.code
 00000A41  52		     1		push	edx
 00000A42  BA 0000165D R     1		mov	edx,OFFSET ??000E
 00000A47  E8 00000000 E     1		call	WriteString
 00000A4C  5A		     1		pop	edx
 00000A4D  E8 00000000 E	    call crlf

 00000A52  BE 0000007A R	    mov esi,offset buffer
 00000A57  B6 12		    mov dh,18
 00000A59  B2 2A		    mov dl,42
 00000A5B  E8 00000000 E	    call gotoxy
 00000A60  BF 0000017E R	    mov edi,offset Name1
 00000A65  E8 00000099		    call StringMasking 
 00000A6A  B6 12		    mov dh,18
 00000A6C  B2 34		    mov dl,52
 00000A6E  E8 00000000 E	    call gotoxy
 00000A73  BF 000001C9 R	    mov edi,offset Score1
 00000A78  E8 00000086		    call StringMasking 
 00000A7D  B6 12		    mov dh,18
 00000A7F  B2 42		    mov dl,66
 00000A81  E8 00000000 E	    call gotoxy
 00000A86  BF 00000214 R	    mov edi,offset level_1
 00000A8B  E8 00000073		    call StringMasking 

 00000A90  B6 13		    mov dh,19
 00000A92  B2 2A		    mov dl,42
 00000A94  E8 00000000 E	    call gotoxy
 00000A99  BF 00000197 R	    mov edi,offset Name2
 00000A9E  E8 00000060		    call StringMasking 
 00000AA3  B6 13		    mov dh,19
 00000AA5  B2 34		    mov dl,52
 00000AA7  E8 00000000 E	    call gotoxy
 00000AAC  BF 000001E2 R	    mov edi,offset Score2
 00000AB1  E8 0000004D		    call StringMasking 
 00000AB6  B6 13		    mov dh,19
 00000AB8  B2 42		    mov dl,66
 00000ABA  E8 00000000 E	    call gotoxy
 00000ABF  BF 0000022D R	    mov edi,offset level_2
 00000AC4  E8 0000003A		    call StringMasking 

 00000AC9  B6 14		    mov dh,20
 00000ACB  B2 2A		    mov dl,42
 00000ACD  E8 00000000 E	    call gotoxy
 00000AD2  BF 000001B0 R	    mov edi,offset Name3
 00000AD7  E8 00000027		    call StringMasking 
 00000ADC  B6 14		    mov dh,20
 00000ADE  B2 34		    mov dl,52
 00000AE0  E8 00000000 E	    call gotoxy
 00000AE5  BF 000001FB R	    mov edi,offset Score3
 00000AEA  E8 00000014		    call StringMasking 
 00000AEF  B6 14		    mov dh,20
 00000AF1  B2 42		    mov dl,66
 00000AF3  E8 00000000 E	    call gotoxy
 00000AF8  BF 00000246 R	    mov edi,offset level_3
 00000AFD  E8 00000001		    call StringMasking 
 00000B02  C3			    ret
 00000B03			HighScoreMenu ENDP  
 00000B03			StringMasking PROC 


 00000B03  BB 00000020		    mov ebx," "
 00000B08  38 1E		    cmp [esi],bl
 00000B0A  75 01		    jne l1
 00000B0C  46			    inc esi
 00000B0D			    l1:
 00000B0D  B9 00000000		    mov ecx,0
 00000B12  8A 0E		    mov cl,[esi]
 00000B14  8B 06		    mov eax,[esi]
 00000B16  E8 00000000 E	    call writechar
 00000B1B  88 0F		    mov [edi],cl
 00000B1D  46			    inc esi
 00000B1E  47			    inc edi
 00000B1F  38 1E		    cmp [esi],bl
 00000B21  75 EA		    jne l1
				    ;mov bl,0
				    ;mov [edi],bl

 00000B23  C3			ret
 00000B24			StringMasking endp  
				;--------------------------------------------(EndScreen)---------------------------------------------
				;------------------------------------------(Menu Screen)---------------------------------------------
 00000B24			getValuesofUser PROC
 00000B24  BA 0000027B R	    mov edx,OFFSET filename
 00000B29  E8 00000000 E	    call OpenInputFile
 00000B2E  A3 0000028E R	    mov fileHandle,eax

 00000B33			    letsOpenFile:
 00000B33  BA 0000007A R	        mov edx,offset buffer
 00000B38  B9 000000FF		        mov ecx,255
 00000B3D  E8 00000000 E	        call ReadFromFile
 00000B42  C6 05 00000179 R	        mov buffer[255],0
	   00
 00000B49  E8 00000000 E	    call CloseFile

 00000B4E  BE 0000007A R	    mov esi,offset buffer

 00000B53  BF 0000017E R	    mov edi,offset Name1
 00000B58  E8 00000051		    call FileReadingMasking 
 00000B5D  BF 000001C9 R	    mov edi,offset Score1
 00000B62  E8 00000047		    call FileReadingMasking 
 00000B67  BF 00000214 R	    mov edi,offset level_1
 00000B6C  E8 0000003D		    call FileReadingMasking 

 00000B71  BF 00000197 R	    mov edi,offset Name2
 00000B76  E8 00000033		    call FileReadingMasking 
 00000B7B  BF 000001E2 R	    mov edi,offset Score2
 00000B80  E8 00000029		    call FileReadingMasking 
 00000B85  BF 0000022D R	    mov edi,offset level_2
 00000B8A  E8 0000001F		    call FileReadingMasking 

 00000B8F  BF 000001B0 R	    mov edi,offset Name3
 00000B94  E8 00000015		    call FileReadingMasking 
 00000B99  BF 000001FB R	    mov edi,offset Score3
 00000B9E  E8 0000000B		    call FileReadingMasking 
 00000BA3  BF 00000246 R	    mov edi,offset level_3
 00000BA8  E8 00000001		    call FileReadingMasking 
 00000BAD  C3			    ret
 00000BAE			getValuesofUser ENDP  
 00000BAE			FileReadingMasking PROC 

 00000BAE  BB 00000020		    mov ebx," "
 00000BB3  38 1E		    cmp [esi],bl
 00000BB5  75 01		    jne l1
 00000BB7  46			    inc esi
 00000BB8			    l1:
 00000BB8  B9 00000000		    mov ecx,0
 00000BBD  8A 0E		    mov cl,[esi]
				    ;mov eax,[esi]
				    ;call writechar
 00000BBF  88 0F		    mov [edi],cl
 00000BC1  46			    inc esi
 00000BC2  47			    inc edi
 00000BC3  38 1E		    cmp [esi],bl
 00000BC5  75 F1		    jne l1

 00000BC7  C3			ret
 00000BC8			FileReadingMasking endp  
 00000BC8			EndScreen PROC
				    
 00000BC8  E8 00000000 E	    call clrscr
 00000BCD  E8 FFFFF49D		    call Menu1Name  
 00000BD2  E8 FFFFF82F		    call PacmanLogo
 00000BD7  E8 FFFFFF48		    call getValuesofUser   
				    
 00000BDC  B8 00000004		    mov eax, red (black*16)
 00000BE1  E8 00000000 E	    call settextcolor
				   
 00000BE6  B8 00000000		    mov eax ,0
 00000BEB  B8 00000008		    mov eax, gray (black*16)
 00000BF0  E8 00000000 E	    call settextcolor

 00000BF5  B6 15		    mov dh,21
 00000BF7  B2 2E		    mov dl,46
 00000BF9  E8 00000000 E	    call gotoxy
				    mwrite "Press 'R' to Restart",0
			     1	;
main.asm(1097) : warning A4006:too many arguments in macro call
 mWrite(1): Macro Called From
  main.asm(1097): Main Line Code
 00001679		     1		.data		
 00001679 50 72 65 73 73     1		??000F BYTE "Press 'R' to Restart",0	
	   20 27 52 27 20
	   74 6F 20 52 65
	   73 74 61 72 74
	   00
 00000BFE		     1		.code
 00000BFE  52		     1		push	edx
 00000BFF  BA 00001679 R     1		mov	edx,OFFSET ??000F
 00000C04  E8 00000000 E     1		call	WriteString
 00000C09  5A		     1		pop	edx

 00000C0A  B6 10		    mov dh,16
 00000C0C  B2 2E		    mov dl,46
 00000C0E  E8 00000000 E	    call gotoxy
 00000C13  B8 0000000F		    mov eax, white (black*16)
 00000C18  E8 00000000 E	    call settextcolor
				    mwrite "   Name : ",
			     1	;
main.asm(1104) : warning A4006:too many arguments in macro call
 mWrite(1): Macro Called From
  main.asm(1104): Main Line Code
 0000168E		     1		.data		
 0000168E 20 20 20 4E 61     1		??0010 BYTE "   Name : ",0	
	   6D 65 20 3A 20
	   00
 00000C1D		     1		.code
 00000C1D  52		     1		push	edx
 00000C1E  BA 0000168E R     1		mov	edx,OFFSET ??0010
 00000C23  E8 00000000 E     1		call	WriteString
 00000C28  5A		     1		pop	edx
 00000C29  BA 00000061 R	    mov edx,offset Menu1InputNamePrompt
 00000C2E  E8 00000000 E	    call writestring
 00000C33  B6 11		    mov dh,17
 00000C35  B2 2E		    mov dl,46
 00000C37  E8 00000000 E	    call gotoxy
				    mwrite " Scored : ",
			     1	;
main.asm(1110) : warning A4006:too many arguments in macro call
 mWrite(1): Macro Called From
  main.asm(1110): Main Line Code
 00001699		     1		.data		
 00001699 20 53 63 6F 72     1		??0011 BYTE " Scored : ",0	
	   65 64 20 3A 20
	   00
 00000C3C		     1		.code
 00000C3C  52		     1		push	edx
 00000C3D  BA 00001699 R     1		mov	edx,OFFSET ??0011
 00000C42  E8 00000000 E     1		call	WriteString
 00000C47  5A		     1		pop	edx
 00000C48  66| A1		    mov ax,score
	   0000005F R
 00000C4E  E8 00000000 E	    call Writedec
 00000C53  B6 12		    mov dh,18
 00000C55  B2 2E		    mov dl,46
 00000C57  E8 00000000 E	    call gotoxy
				    mwrite "  Level : ",
			     1	;
main.asm(1116) : warning A4006:too many arguments in macro call
 mWrite(1): Macro Called From
  main.asm(1116): Main Line Code
 000016A4		     1		.data		
 000016A4 20 20 4C 65 76     1		??0012 BYTE "  Level : ",0	
	   65 6C 20 3A 20
	   00
 00000C5C		     1		.code
 00000C5C  52		     1		push	edx
 00000C5D  BA 000016A4 R     1		mov	edx,OFFSET ??0012
 00000C62  E8 00000000 E     1		call	WriteString
 00000C67  5A		     1		pop	edx
 00000C68  B8 00000000		    mov eax,0
 00000C6D  A0 0000005D R	    mov al,levelIndicator
 00000C72  E8 00000000 E	    call Writedec
 00000C77  E8 00000000 E	    call readchar
 00000C7C  E8 00000000 E	    call clrscr
 00000C81  E8 FFFFF37A		    call main   
 00000C86  C3			    ret
 00000C87			EndScreen ENDP  
				;--------------------------------------------(Level 1)-----------------------------------------------
				;--------------------------------------------(Level 1)-----------------------------------------------
 00000C87			DrawLevel1 PROC 

 00000C87  BE 00000704 R	    mov esi,offset [l1_r01]
 00000C8C  B9 00000027		    mov ecx,lengthof l1_r01
 00000C91  B2 00		    mov dl,0
 00000C93  B6 06		    mov dh,6
 00000C95  E8 00000000 E	    call Gotoxy
 00000C9A  E8 000001F9		    call LevelDisplayer1

 00000C9F  BE 0000072B R	    mov esi,offset [l1_r02]
 00000CA4  B9 00000027		    mov ecx,lengthof l1_r02
 00000CA9  B2 00		    mov dl,0
 00000CAB  B6 07		    mov dh,7
 00000CAD  E8 00000000 E	    call Gotoxy
 00000CB2  E8 000001E1		    call LevelDisplayer1
				    
 00000CB7  BE 00000752 R	    mov esi,offset [l1_r03]
 00000CBC  B9 00000027		    mov ecx,lengthof l1_r03
 00000CC1  B2 00		    mov dl,0
 00000CC3  B6 08		    mov dh,8
 00000CC5  E8 00000000 E	    call Gotoxy
 00000CCA  E8 000001C9		    call LevelDisplayer1
				    
 00000CCF  BE 00000779 R	    mov esi,offset [l1_r04]
 00000CD4  B9 00000027		    mov ecx,lengthof l1_r04
 00000CD9  B2 00		    mov dl,0
 00000CDB  B6 09		    mov dh,9
 00000CDD  E8 00000000 E	    call Gotoxy
 00000CE2  E8 000001B1		    call LevelDisplayer1
				    
 00000CE7  BE 000007A0 R	    mov esi,offset [l1_r05]
 00000CEC  B9 00000027		    mov ecx,lengthof l1_r05
 00000CF1  B2 00		    mov dl,0
 00000CF3  B6 0A		    mov dh,10
 00000CF5  E8 00000000 E	    call Gotoxy
 00000CFA  E8 00000199		    call LevelDisplayer1
				    
 00000CFF  BE 000007C7 R	    mov esi,offset [l1_r06]
 00000D04  B9 00000027		    mov ecx,lengthof l1_r06
 00000D09  B2 00		    mov dl,0
 00000D0B  B6 0B		    mov dh,11
 00000D0D  E8 00000000 E	    call Gotoxy
 00000D12  E8 00000181		    call LevelDisplayer1
				    
 00000D17  BE 000007EE R	    mov esi,offset [l1_r07]
 00000D1C  B9 00000027		    mov ecx,lengthof l1_r07
 00000D21  B2 00		    mov dl,0
 00000D23  B6 0C		    mov dh,12
 00000D25  E8 00000000 E	    call Gotoxy
 00000D2A  E8 00000169		    call LevelDisplayer1
				    
 00000D2F  BE 00000815 R	    mov esi,offset [l1_r08]
 00000D34  B9 00000027		    mov ecx,lengthof l1_r08
 00000D39  B2 00		    mov dl,0
 00000D3B  B6 0D		    mov dh,13
 00000D3D  E8 00000000 E	    call Gotoxy
 00000D42  E8 00000151		    call LevelDisplayer1

 00000D47  BE 0000083C R	    mov esi,offset [l1_r09]
 00000D4C  B9 00000027		    mov ecx,lengthof l1_r09
 00000D51  B2 00		    mov dl,0
 00000D53  B6 0E		    mov dh,14
 00000D55  E8 00000000 E	    call Gotoxy
 00000D5A  E8 00000139		    call LevelDisplayer1
				    
 00000D5F  BE 00000863 R	    mov esi,offset [l1_r10]
 00000D64  B9 00000027		    mov ecx,lengthof l1_r10
 00000D69  B2 00		    mov dl,0
 00000D6B  B6 0F		    mov dh,15
 00000D6D  E8 00000000 E	    call Gotoxy
 00000D72  E8 00000121		    call LevelDisplayer1
				    
 00000D77  BE 0000088A R	    mov esi,offset [l1_r11]
 00000D7C  B9 00000027		    mov ecx,lengthof l1_r11
 00000D81  B2 00		    mov dl,0
 00000D83  B6 10		    mov dh,16
 00000D85  E8 00000000 E	    call Gotoxy
 00000D8A  E8 00000109		    call LevelDisplayer1
				    
 00000D8F  BE 000008B1 R	    mov esi,offset [l1_r12]
 00000D94  B9 00000027		    mov ecx,lengthof l1_r12
 00000D99  B2 00		    mov dl,0
 00000D9B  B6 11		    mov dh,17
 00000D9D  E8 00000000 E	    call Gotoxy
 00000DA2  E8 000000F1		    call LevelDisplayer1
				    
 00000DA7  BE 000008D8 R	    mov esi,offset [l1_r13]
 00000DAC  B9 00000027		    mov ecx,lengthof l1_r13
 00000DB1  B2 00		    mov dl,0
 00000DB3  B6 12		    mov dh,18
 00000DB5  E8 00000000 E	    call Gotoxy
 00000DBA  E8 000000D9		    call LevelDisplayer1

 00000DBF  BE 000008FF R	    mov esi,offset [l1_r14]
 00000DC4  B9 00000027		    mov ecx,lengthof l1_r14
 00000DC9  B2 00		    mov dl,0
 00000DCB  B6 13		    mov dh,19
 00000DCD  E8 00000000 E	    call Gotoxy
 00000DD2  E8 000000C1		    call LevelDisplayer1

 00000DD7  BE 00000926 R	    mov esi,offset [l1_r15]
 00000DDC  B9 00000027		    mov ecx,lengthof l1_r15
 00000DE1  B2 00		    mov dl,0
 00000DE3  B6 14		    mov dh,20
 00000DE5  E8 00000000 E	    call Gotoxy
 00000DEA  E8 000000A9		    call LevelDisplayer1
				    
 00000DEF  BE 0000094D R	    mov esi,offset [l1_r16]
 00000DF4  B9 00000027		    mov ecx,lengthof l1_r16
 00000DF9  B2 00		    mov dl,0
 00000DFB  B6 15		    mov dh,21
 00000DFD  E8 00000000 E	    call Gotoxy
 00000E02  E8 00000091		    call LevelDisplayer1

 00000E07  BE 00000974 R	    mov esi,offset [l1_r17]
 00000E0C  B9 00000027		    mov ecx,lengthof l1_r17
 00000E11  B2 00		    mov dl,0
 00000E13  B6 16		    mov dh,22
 00000E15  E8 00000000 E	    call Gotoxy
 00000E1A  E8 00000079		    call LevelDisplayer1
				    
 00000E1F  BE 0000099B R	    mov esi,offset [l1_r18]
 00000E24  B9 00000027		    mov ecx,lengthof l1_r18
 00000E29  B2 00		    mov dl,0
 00000E2B  B6 17		    mov dh,23
 00000E2D  E8 00000000 E	    call Gotoxy
 00000E32  E8 00000061		    call LevelDisplayer1
				    
 00000E37  BE 000009C2 R	    mov esi,offset [l1_r19]
 00000E3C  B9 00000027		    mov ecx,lengthof l1_r19
 00000E41  B2 00		    mov dl,0
 00000E43  B6 18		    mov dh,24
 00000E45  E8 00000000 E	    call Gotoxy
 00000E4A  E8 00000049		    call LevelDisplayer1
				    
 00000E4F  BE 000009E9 R	    mov esi,offset [l1_r20]
 00000E54  B9 00000027		    mov ecx,lengthof l1_r20
 00000E59  B2 00		    mov dl,0
 00000E5B  B6 19		    mov dh,25
 00000E5D  E8 00000000 E	    call Gotoxy
 00000E62  E8 00000031		    call LevelDisplayer1
				    
 00000E67  BE 00000A10 R	    mov esi,offset [l1_r21]
 00000E6C  B9 00000027		    mov ecx,lengthof l1_r21
 00000E71  B2 00		    mov dl,0
 00000E73  B6 1A		    mov dh,26
 00000E75  E8 00000000 E	    call Gotoxy
 00000E7A  E8 00000019		    call LevelDisplayer1
				    
 00000E7F  BE 00000A37 R	    mov esi,offset [l1_r22]
 00000E84  B9 00000027		    mov ecx,lengthof l1_r22
 00000E89  B2 00		    mov dl,0
 00000E8B  B6 1B		    mov dh,27
 00000E8D  E8 00000000 E	    call Gotoxy
 00000E92  E8 00000001		    call LevelDisplayer1
 00000E97  C3			    ret 
 00000E98			DrawLevel1 ENDP 
 00000E98			LevelDisplayer1 PROC 
 00000E98  49			    dec ecx
 00000E99			    ld1:
 00000E99  8B 1E		        mov ebx,[esi]
 00000E9B  80 FB 20		        cmp bl,' '
 00000E9E  74 15		        jz C1
 00000EA0  3A 1D 000002B2 R	        cmp bl,coin
 00000EA6  74 14		        jz C2
 00000EA8  3A 1D 000002B1 R	        cmp bl,wall
 00000EAE  74 13		        jz C3
 00000EB0  E8 000004E7		        call DrawWall
 00000EB5  E8 000004BA		    C1: call DrawSpace
 00000EBA  EB 0E		        jmp ld_excape
 00000EBC  E8 000004C7		    C2: call DrawCoin
 00000EC1  EB 07		        jmp ld_excape
 00000EC3  E8 000004D4		    C3: call DrawWall
 00000EC8  EB 00		        jmp ld_excape
 00000ECA			    ld_excape:
 00000ECA  46			    inc esi
 00000ECB  E2 CC		    loop ld1

 00000ECD  C3			    ret
 00000ECE			LevelDisplayer1 ENDP 
				;--------------------------------------------(Level 2)-----------------------------------------------
				;--------------------------------------------(Level 1)-----------------------------------------------
 00000ECE			DrawLevel2 PROC 

 00000ECE  BE 00000A5E R	    mov esi,offset [l2_r01]
 00000ED3  B9 00000033		    mov ecx,lengthof l2_r01
 00000ED8  B2 00		    mov dl,0
 00000EDA  B6 06		    mov dh,6
 00000EDC  E8 00000000 E	    call Gotoxy
 00000EE1  E8 000001F9		    call LevelDisplayer2

 00000EE6  BE 00000A91 R	    mov esi,offset [l2_r02]
 00000EEB  B9 00000033		    mov ecx,lengthof l2_r02
 00000EF0  B2 00		    mov dl,0
 00000EF2  B6 07		    mov dh,7
 00000EF4  E8 00000000 E	    call Gotoxy
 00000EF9  E8 000001E1		    call LevelDisplayer2
				    
 00000EFE  BE 00000AC4 R	    mov esi,offset [l2_r03]
 00000F03  B9 00000033		    mov ecx,lengthof l2_r03
 00000F08  B2 00		    mov dl,0
 00000F0A  B6 08		    mov dh,8
 00000F0C  E8 00000000 E	    call Gotoxy
 00000F11  E8 000001C9		    call LevelDisplayer2
				    
 00000F16  BE 00000AF7 R	    mov esi,offset [l2_r04]
 00000F1B  B9 00000033		    mov ecx,lengthof l2_r04
 00000F20  B2 00		    mov dl,0
 00000F22  B6 09		    mov dh,9
 00000F24  E8 00000000 E	    call Gotoxy
 00000F29  E8 000001B1		    call LevelDisplayer2
				    
 00000F2E  BE 00000B2A R	    mov esi,offset [l2_r05]
 00000F33  B9 00000033		    mov ecx,lengthof l2_r05
 00000F38  B2 00		    mov dl,0
 00000F3A  B6 0A		    mov dh,10
 00000F3C  E8 00000000 E	    call Gotoxy
 00000F41  E8 00000199		    call LevelDisplayer2
				    
 00000F46  BE 00000B5D R	    mov esi,offset [l2_r06]
 00000F4B  B9 00000033		    mov ecx,lengthof l2_r06
 00000F50  B2 00		    mov dl,0
 00000F52  B6 0B		    mov dh,11
 00000F54  E8 00000000 E	    call Gotoxy
 00000F59  E8 00000181		    call LevelDisplayer2
				    
 00000F5E  BE 00000B90 R	    mov esi,offset [l2_r07]
 00000F63  B9 00000033		    mov ecx,lengthof l2_r07
 00000F68  B2 00		    mov dl,0
 00000F6A  B6 0C		    mov dh,12
 00000F6C  E8 00000000 E	    call Gotoxy
 00000F71  E8 00000169		    call LevelDisplayer2
				    
 00000F76  BE 00000BC3 R	    mov esi,offset [l2_r08]
 00000F7B  B9 00000033		    mov ecx,lengthof l2_r08
 00000F80  B2 00		    mov dl,0
 00000F82  B6 0D		    mov dh,13
 00000F84  E8 00000000 E	    call Gotoxy
 00000F89  E8 00000151		    call LevelDisplayer2

 00000F8E  BE 00000BF6 R	    mov esi,offset [l2_r09]
 00000F93  B9 00000033		    mov ecx,lengthof l2_r09
 00000F98  B2 00		    mov dl,0
 00000F9A  B6 0E		    mov dh,14
 00000F9C  E8 00000000 E	    call Gotoxy
 00000FA1  E8 00000139		    call LevelDisplayer2
				    
 00000FA6  BE 00000C29 R	    mov esi,offset [l2_r10]
 00000FAB  B9 00000033		    mov ecx,lengthof l2_r10
 00000FB0  B2 00		    mov dl,0
 00000FB2  B6 0F		    mov dh,15
 00000FB4  E8 00000000 E	    call Gotoxy
 00000FB9  E8 00000121		    call LevelDisplayer2
				    
 00000FBE  BE 00000C5C R	    mov esi,offset [l2_r11]
 00000FC3  B9 00000033		    mov ecx,lengthof l2_r11
 00000FC8  B2 00		    mov dl,0
 00000FCA  B6 10		    mov dh,16
 00000FCC  E8 00000000 E	    call Gotoxy
 00000FD1  E8 00000109		    call LevelDisplayer2
				    
 00000FD6  BE 00000C8F R	    mov esi,offset [l2_r12]
 00000FDB  B9 00000033		    mov ecx,lengthof l2_r12
 00000FE0  B2 00		    mov dl,0
 00000FE2  B6 11		    mov dh,17
 00000FE4  E8 00000000 E	    call Gotoxy
 00000FE9  E8 000000F1		    call LevelDisplayer2
				    
 00000FEE  BE 00000CC2 R	    mov esi,offset [l2_r13]
 00000FF3  B9 00000033		    mov ecx,lengthof l2_r13
 00000FF8  B2 00		    mov dl,0
 00000FFA  B6 12		    mov dh,18
 00000FFC  E8 00000000 E	    call Gotoxy
 00001001  E8 000000D9		    call LevelDisplayer2

 00001006  BE 00000CF5 R	    mov esi,offset [l2_r14]
 0000100B  B9 00000033		    mov ecx,lengthof l2_r14
 00001010  B2 00		    mov dl,0
 00001012  B6 13		    mov dh,19
 00001014  E8 00000000 E	    call Gotoxy
 00001019  E8 000000C1		    call LevelDisplayer2

 0000101E  BE 00000D28 R	    mov esi,offset [l2_r15]
 00001023  B9 00000033		    mov ecx,lengthof l2_r15
 00001028  B2 00		    mov dl,0
 0000102A  B6 14		    mov dh,20
 0000102C  E8 00000000 E	    call Gotoxy
 00001031  E8 000000A9		    call LevelDisplayer2
				    
 00001036  BE 00000D5B R	    mov esi,offset [l2_r16]
 0000103B  B9 00000033		    mov ecx,lengthof l2_r16
 00001040  B2 00		    mov dl,0
 00001042  B6 15		    mov dh,21
 00001044  E8 00000000 E	    call Gotoxy
 00001049  E8 00000091		    call LevelDisplayer2

 0000104E  BE 00000D8E R	    mov esi,offset [l2_r17]
 00001053  B9 00000033		    mov ecx,lengthof l2_r17
 00001058  B2 00		    mov dl,0
 0000105A  B6 16		    mov dh,22
 0000105C  E8 00000000 E	    call Gotoxy
 00001061  E8 00000079		    call LevelDisplayer2
				    
 00001066  BE 00000DC1 R	    mov esi,offset [l2_r18]
 0000106B  B9 00000033		    mov ecx,lengthof l2_r18
 00001070  B2 00		    mov dl,0
 00001072  B6 17		    mov dh,23
 00001074  E8 00000000 E	    call Gotoxy
 00001079  E8 00000061		    call LevelDisplayer2
				    
 0000107E  BE 00000DF4 R	    mov esi,offset [l2_r19]
 00001083  B9 00000033		    mov ecx,lengthof l2_r19
 00001088  B2 00		    mov dl,0
 0000108A  B6 18		    mov dh,24
 0000108C  E8 00000000 E	    call Gotoxy
 00001091  E8 00000049		    call LevelDisplayer2
				    
 00001096  BE 00000E27 R	    mov esi,offset [l2_r20]
 0000109B  B9 00000033		    mov ecx,lengthof l2_r20
 000010A0  B2 00		    mov dl,0
 000010A2  B6 19		    mov dh,25
 000010A4  E8 00000000 E	    call Gotoxy
 000010A9  E8 00000031		    call LevelDisplayer2
				    
 000010AE  BE 00000E5A R	    mov esi,offset [l2_r21]
 000010B3  B9 00000033		    mov ecx,lengthof l2_r21
 000010B8  B2 00		    mov dl,0
 000010BA  B6 1A		    mov dh,26
 000010BC  E8 00000000 E	    call Gotoxy
 000010C1  E8 00000019		    call LevelDisplayer2
				    
 000010C6  BE 00000E8D R	    mov esi,offset [l2_r22]
 000010CB  B9 00000033		    mov ecx,lengthof l2_r22
 000010D0  B2 00		    mov dl,0
 000010D2  B6 1B		    mov dh,27
 000010D4  E8 00000000 E	    call Gotoxy
 000010D9  E8 00000001		    call LevelDisplayer2
 000010DE  C3			    ret 
 000010DF			DrawLevel2 ENDP 
 000010DF			LevelDisplayer2 PROC 
 000010DF  49			    dec ecx
 000010E0			    ld1:
 000010E0  8B 1E		        mov ebx,[esi]
 000010E2  80 FB 20		        cmp bl,' '
 000010E5  74 1A		        jz C1
 000010E7  3A 1D 000002B2 R	        cmp bl,coin
 000010ED  74 19		        jz C2
 000010EF  3A 1D 000002B1 R	        cmp bl,wall
 000010F5  74 18		        jz C3
 000010F7  80 FB 2A		        cmp bl,'*'
 000010FA  74 1A		        jz C4
 000010FC  E8 0000029B		        call DrawWall
 00001101  E8 0000026E		    C1: call DrawSpace
 00001106  EB 15		        jmp ld_excape
 00001108  E8 0000027B		    C2: call DrawCoin
 0000110D  EB 0E		        jmp ld_excape
 0000110F  E8 00000288		    C3: call DrawWall
 00001114  EB 07		        jmp ld_excape
 00001116  E8 0000029B		    C4: call DrawFruit
 0000111B  EB 00		        jmp ld_excape
 0000111D			    ld_excape:
 0000111D  46			    inc esi
 0000111E  E2 C0		    loop ld1

 00001120  C3			    ret
 00001121			LevelDisplayer2 ENDP 
				;--------------------------------------------(Level 3)-----------------------------------------------
				;--------------------------------------------(Level 3)-----------------------------------------------
 00001121			DrawLevel3 PROC 

 00001121  BE 00000EC0 R	    mov esi,offset [l3_r01]
 00001126  B9 00000047		    mov ecx,lengthof l3_r01
 0000112B  B2 00		    mov dl,0
 0000112D  B6 06		    mov dh,6
 0000112F  E8 00000000 E	    call Gotoxy
 00001134  E8 000001F9		    call LevelDisplayer3

 00001139  BE 00000F07 R	    mov esi,offset [l3_r02]
 0000113E  B9 00000047		    mov ecx,lengthof l3_r02
 00001143  B2 00		    mov dl,0
 00001145  B6 07		    mov dh,7
 00001147  E8 00000000 E	    call Gotoxy
 0000114C  E8 000001E1		    call LevelDisplayer3
				    
 00001151  BE 00000F4E R	    mov esi,offset [l3_r03]
 00001156  B9 00000047		    mov ecx,lengthof l3_r03
 0000115B  B2 00		    mov dl,0
 0000115D  B6 08		    mov dh,8
 0000115F  E8 00000000 E	    call Gotoxy
 00001164  E8 000001C9		    call LevelDisplayer3
				    
 00001169  BE 00000F95 R	    mov esi,offset [l3_r04]
 0000116E  B9 00000047		    mov ecx,lengthof l3_r04
 00001173  B2 00		    mov dl,0
 00001175  B6 09		    mov dh,9
 00001177  E8 00000000 E	    call Gotoxy
 0000117C  E8 000001B1		    call LevelDisplayer3
				    
 00001181  BE 00000FDC R	    mov esi,offset [l3_r05]
 00001186  B9 00000047		    mov ecx,lengthof l3_r05
 0000118B  B2 00		    mov dl,0
 0000118D  B6 0A		    mov dh,10
 0000118F  E8 00000000 E	    call Gotoxy
 00001194  E8 00000199		    call LevelDisplayer3
				    
 00001199  BE 00001023 R	    mov esi,offset [l3_r06]
 0000119E  B9 00000047		    mov ecx,lengthof l3_r06
 000011A3  B2 00		    mov dl,0
 000011A5  B6 0B		    mov dh,11
 000011A7  E8 00000000 E	    call Gotoxy
 000011AC  E8 00000181		    call LevelDisplayer3
				    
 000011B1  BE 0000106A R	    mov esi,offset [l3_r07]
 000011B6  B9 00000047		    mov ecx,lengthof l3_r07
 000011BB  B2 00		    mov dl,0
 000011BD  B6 0C		    mov dh,12
 000011BF  E8 00000000 E	    call Gotoxy
 000011C4  E8 00000169		    call LevelDisplayer3
				    
 000011C9  BE 000010B1 R	    mov esi,offset [l3_r08]
 000011CE  B9 00000047		    mov ecx,lengthof l3_r08
 000011D3  B2 00		    mov dl,0
 000011D5  B6 0D		    mov dh,13
 000011D7  E8 00000000 E	    call Gotoxy
 000011DC  E8 00000151		    call LevelDisplayer3

 000011E1  BE 000010F8 R	    mov esi,offset [l3_r09]
 000011E6  B9 00000047		    mov ecx,lengthof l3_r09
 000011EB  B2 00		    mov dl,0
 000011ED  B6 0E		    mov dh,14
 000011EF  E8 00000000 E	    call Gotoxy
 000011F4  E8 00000139		    call LevelDisplayer3
				    
 000011F9  BE 0000113F R	    mov esi,offset [l3_r10]
 000011FE  B9 00000047		    mov ecx,lengthof l3_r10
 00001203  B2 00		    mov dl,0
 00001205  B6 0F		    mov dh,15
 00001207  E8 00000000 E	    call Gotoxy
 0000120C  E8 00000121		    call LevelDisplayer3
				    
 00001211  BE 00001186 R	    mov esi,offset [l3_r11]
 00001216  B9 00000047		    mov ecx,lengthof l3_r11
 0000121B  B2 00		    mov dl,0
 0000121D  B6 10		    mov dh,16
 0000121F  E8 00000000 E	    call Gotoxy
 00001224  E8 00000109		    call LevelDisplayer3
				    
 00001229  BE 000011CD R	    mov esi,offset [l3_r12]
 0000122E  B9 00000047		    mov ecx,lengthof l3_r12
 00001233  B2 00		    mov dl,0
 00001235  B6 11		    mov dh,17
 00001237  E8 00000000 E	    call Gotoxy
 0000123C  E8 000000F1		    call LevelDisplayer3
				    
 00001241  BE 00001214 R	    mov esi,offset [l3_r13]
 00001246  B9 00000047		    mov ecx,lengthof l3_r13
 0000124B  B2 00		    mov dl,0
 0000124D  B6 12		    mov dh,18
 0000124F  E8 00000000 E	    call Gotoxy
 00001254  E8 000000D9		    call LevelDisplayer3

 00001259  BE 0000125B R	    mov esi,offset [l3_r14]
 0000125E  B9 00000047		    mov ecx,lengthof l3_r14
 00001263  B2 00		    mov dl,0
 00001265  B6 13		    mov dh,19
 00001267  E8 00000000 E	    call Gotoxy
 0000126C  E8 000000C1		    call LevelDisplayer3

 00001271  BE 000012A2 R	    mov esi,offset [l3_r15]
 00001276  B9 00000047		    mov ecx,lengthof l3_r15
 0000127B  B2 00		    mov dl,0
 0000127D  B6 14		    mov dh,20
 0000127F  E8 00000000 E	    call Gotoxy
 00001284  E8 000000A9		    call LevelDisplayer3
				    
 00001289  BE 000012E9 R	    mov esi,offset [l3_r16]
 0000128E  B9 00000047		    mov ecx,lengthof l3_r16
 00001293  B2 00		    mov dl,0
 00001295  B6 15		    mov dh,21
 00001297  E8 00000000 E	    call Gotoxy
 0000129C  E8 00000091		    call LevelDisplayer3

 000012A1  BE 00001330 R	    mov esi,offset [l3_r17]
 000012A6  B9 00000047		    mov ecx,lengthof l3_r17
 000012AB  B2 00		    mov dl,0
 000012AD  B6 16		    mov dh,22
 000012AF  E8 00000000 E	    call Gotoxy
 000012B4  E8 00000079		    call LevelDisplayer3
				    
 000012B9  BE 00001377 R	    mov esi,offset [l3_r18]
 000012BE  B9 00000047		    mov ecx,lengthof l3_r18
 000012C3  B2 00		    mov dl,0
 000012C5  B6 17		    mov dh,23
 000012C7  E8 00000000 E	    call Gotoxy
 000012CC  E8 00000061		    call LevelDisplayer3
				    
 000012D1  BE 000013BE R	    mov esi,offset [l3_r19]
 000012D6  B9 00000047		    mov ecx,lengthof l3_r19
 000012DB  B2 00		    mov dl,0
 000012DD  B6 18		    mov dh,24
 000012DF  E8 00000000 E	    call Gotoxy
 000012E4  E8 00000049		    call LevelDisplayer3
				    
 000012E9  BE 00001405 R	    mov esi,offset [l3_r20]
 000012EE  B9 00000047		    mov ecx,lengthof l3_r20
 000012F3  B2 00		    mov dl,0
 000012F5  B6 19		    mov dh,25
 000012F7  E8 00000000 E	    call Gotoxy
 000012FC  E8 00000031		    call LevelDisplayer3
				    
 00001301  BE 0000144C R	    mov esi,offset [l3_r21]
 00001306  B9 00000047		    mov ecx,lengthof l3_r21
 0000130B  B2 00		    mov dl,0
 0000130D  B6 1A		    mov dh,26
 0000130F  E8 00000000 E	    call Gotoxy
 00001314  E8 00000019		    call LevelDisplayer3
				    
 00001319  BE 00001493 R	    mov esi,offset [l3_r22]
 0000131E  B9 00000047		    mov ecx,lengthof l3_r22
 00001323  B2 00		    mov dl,0
 00001325  B6 1B		    mov dh,27
 00001327  E8 00000000 E	    call Gotoxy
 0000132C  E8 00000001		    call LevelDisplayer3
 00001331  C3			    ret 
 00001332			DrawLevel3 ENDP 
 00001332			LevelDisplayer3 PROC 
 00001332  49			    dec ecx
 00001333			    ld1:
 00001333  8B 1E		        mov ebx,[esi]
 00001335  80 FB 20		        cmp bl,' '
 00001338  74 1A		        jz C1
 0000133A  3A 1D 000002B2 R	        cmp bl,coin
 00001340  74 19		        jz C2
 00001342  3A 1D 000002B1 R	        cmp bl,wall
 00001348  74 18		        jz C3
 0000134A  80 FB 2A		        cmp bl,'*'
 0000134D  74 1A		        jz C4
 0000134F  E8 00000048		        call DrawWall
 00001354  E8 0000001B		    C1: call DrawSpace
 00001359  EB 15		        jmp ld_excape
 0000135B  E8 00000028		    C2: call DrawCoin
 00001360  EB 0E		        jmp ld_excape
 00001362  E8 00000035		    C3: call DrawWall
 00001367  EB 07		        jmp ld_excape
 00001369  E8 00000048		    C4: call DrawFruit
 0000136E  EB 00		        jmp ld_excape
 00001370			    ld_excape:
 00001370  46			    inc esi
 00001371  E2 C0		    loop ld1

 00001373  C3			    ret
 00001374			LevelDisplayer3 ENDP 
				;-------------------------------------(Wall/Coin/Spcae Printers)-------------------------------------
				;-----------------------------------(Wall/Coin/Spcae Printers)---------------------------------------

 00001374			DrawSpace PROC
 00001374  B8 00000000		    mov eax,0
 00001379  B0 00		    mov al,black (black*16)
 0000137B  E8 00000000 E	    call SetTextColor
 00001380  B0 20		    mov al,' '
 00001382  E8 00000000 E	    call Writechar
 00001387  C3			    ret
 00001388			DrawSpace ENDP
 00001388			DrawCoin PROC
				   
 00001388  B8 00000000		    mov eax,0
 0000138D  B0 0F		    mov al,white (black*16)
 0000138F  E8 00000000 E	    call SetTextColor
 00001394  B0 6F		    mov al,'o'
 00001396  E8 00000000 E	    call WriteChar
 0000139B  C3			    ret
 0000139C			DrawCoin ENDP
 0000139C			DrawWall PROC
 0000139C  B8 00000000		    mov eax,0
 000013A1  B8 00000011		    mov eax,blue (blue *16)
 000013A6  E8 00000000 E	    call SetTextColor
 000013AB  A0 000002B1 R	    mov al,wall
 000013B0  E8 00000000 E	    call WriteChar
 000013B5  C3			    ret
 000013B6			DrawWall ENDP
 000013B6			DrawFruit PROC
 000013B6  B8 00000000		    mov eax,0
 000013BB  B8 0000000D		    mov eax,1101b
 000013C0  E8 00000000 E	    call SetTextColor
 000013C5  B0 2A		    mov al,'*'
 000013C7  E8 00000000 E	    call WriteChar
 000013CC  C3			    ret
 000013CD			DrawFruit ENDP
 000013CD			DrawRedWall PROC 
 000013CD  B8 00000000		    mov eax,0
 000013D2  B8 00000044		    mov eax,red (red *16)
 000013D7  E8 00000000 E	    call SetTextColor
 000013DC  A0 000002B1 R	    mov al,wall
 000013E1  E8 00000000 E	    call WriteChar
 000013E6  C3			    ret
 000013E7			DrawRedWall ENDP    
 000013E7			DrawBlueWall PROC 
 000013E7  B8 00000000		    mov eax,0
 000013EC  B8 00000011		    mov eax,blue (blue *16)
 000013F1  E8 00000000 E	    call SetTextColor
 000013F6  A0 000002B1 R	    mov al,wall
 000013FB  E8 00000000 E	    call WriteChar
 00001400  C3			    ret
 00001401			DrawBlueWall ENDP  
 00001401			DrawPinkWall PROC 
 00001401  B8 00000000		    mov eax,0
 00001406  B8 000000DD		    mov eax,1101b (1101b *16)
 0000140B  E8 00000000 E	    call SetTextColor
 00001410  A0 000002B1 R	    mov al,wall
 00001415  E8 00000000 E	    call WriteChar
 0000141A  C3			    ret
 0000141B			DrawPinkWall ENDP   
 0000141B			DrawWhiteWall PROC 
 0000141B  B8 00000000		    mov eax,0
 00001420  B8 000000FF		    mov eax,white (white *16)
 00001425  E8 00000000 E	    call SetTextColor
 0000142A  A0 000002B1 R	    mov al,wall
 0000142F  E8 00000000 E	    call WriteChar
 00001434  C3			    ret
 00001435			DrawWhiteWall ENDP  

				;---------------------------------(Game Status/level/lives Updator)----------------------------------
				;--------------------------------------------(Score Updator)-----------------------------------------
 00001435			DrawScore PROC 
				   
				    ; draw score:
 00001435  B8 0000000E		    mov eax,yellow (black * 16)
 0000143A  E8 00000000 E	    call SetTextColor
 0000143F  B2 07		    mov dl,7
 00001441  B6 03		    mov dh,3
 00001443  E8 00000000 E	    call Gotoxy
				    mwrite "Score : ",0
			     1	;
main.asm(1758) : warning A4006:too many arguments in macro call
 mWrite(1): Macro Called From
  main.asm(1758): Main Line Code
 000016AF		     1		.data		
 000016AF 53 63 6F 72 65     1		??0013 BYTE "Score : ",0	
	   20 3A 20 00
 00001448		     1		.code
 00001448  52		     1		push	edx
 00001449  BA 000016AF R     1		mov	edx,OFFSET ??0013
 0000144E  E8 00000000 E     1		call	WriteString
 00001453  5A		     1		pop	edx
 00001454  66| A1		    mov ax,score
	   0000005F R
 0000145A  E8 00000000 E	    call Writedec

 0000145F  B8 00000000		    mov eax,0
 00001464  B2 07		    mov dl,7
 00001466  B6 04		    mov dh,4
 00001468  E8 00000000 E	    call Gotoxy
				    mwrite "Lives : ",0
			     1	;
main.asm(1766) : warning A4006:too many arguments in macro call
 mWrite(1): Macro Called From
  main.asm(1766): Main Line Code
 000016B8		     1		.data		
 000016B8 4C 69 76 65 73     1		??0014 BYTE "Lives : ",0	
	   20 3A 20 00
 0000146D		     1		.code
 0000146D  52		     1		push	edx
 0000146E  BA 000016B8 R     1		mov	edx,OFFSET ??0014
 00001473  E8 00000000 E     1		call	WriteString
 00001478  5A		     1		pop	edx
 00001479  A0 0000005E R	    mov al,livesIndicator
 0000147E  E8 00000000 E	    call Writedec


 00001483  B8 00000000		    mov eax,0
 00001488  B2 1B		    mov dl,27
 0000148A  B6 04		    mov dh,4
 0000148C  E8 00000000 E	    call Gotoxy
				    mwrite "Level : ",0
			     1	;
main.asm(1775) : warning A4006:too many arguments in macro call
 mWrite(1): Macro Called From
  main.asm(1775): Main Line Code
 000016C1		     1		.data		
 000016C1 4C 65 76 65 6C     1		??0015 BYTE "Level : ",0	
	   20 3A 20 00
 00001491		     1		.code
 00001491  52		     1		push	edx
 00001492  BA 000016C1 R     1		mov	edx,OFFSET ??0015
 00001497  E8 00000000 E     1		call	WriteString
 0000149C  5A		     1		pop	edx
 0000149D  A0 0000005D R	    mov al,levelIndicator
 000014A2  E8 00000000 E	    call Writedec

 000014A7  C3			    ret

 000014A8			DrawScore ENDP 
				;---------------------------------------(Coordinate Getter)------------------------------------------
				;---------------------------------------(Coordinate Getter)------------------------------------------
 000014A8			CoordinaterUpdator PROC 
 000014A8  BB 00000000		    mov ebx,0
 000014AD  8A 3D 000002AF R	    mov bh,yPos
 000014B3  80 EF 06		    sub bh,6
 000014B6  8A 1D 000002AE R	    mov bl,xPos
 000014BC  C3			    ret
 000014BD			CoordinaterUpdator ENDP 
 000014BD			CoordinaterUpdatorGhost1 PROC 
 000014BD  BB 00000000		    mov ebx,0
 000014C2  8A 3D 000002BC R	    mov bh,yG1Pos
 000014C8  80 EF 06		    sub bh,6
 000014CB  8A 1D 000002BB R	    mov bl,xG1Pos
 000014D1  C3			    ret
 000014D2			CoordinaterUpdatorGhost1 ENDP 
 000014D2			CoordinaterUpdatorGhost2 PROC 
 000014D2  BB 00000000		    mov ebx,0
 000014D7  8A 3D 000002BE R	    mov bh,yG2Pos
 000014DD  80 EF 06		    sub bh,6
 000014E0  8A 1D 000002BD R	    mov bl,xG2Pos
 000014E6  C3			    ret
 000014E7			CoordinaterUpdatorGhost2 ENDP 
 000014E7			CoordinaterUpdatorGhost3 PROC 
 000014E7  BB 00000000		    mov ebx,0
 000014EC  8A 3D 000002C0 R	    mov bh,yG3Pos
 000014F2  80 EF 06		    sub bh,6
 000014F5  8A 1D 000002BF R	    mov bl,xG3Pos
 000014FB  C3			    ret
 000014FC			CoordinaterUpdatorGhost3 ENDP 
 000014FC			CoordinaterUpdatorGhost4 PROC 
 000014FC  BB 00000000		    mov ebx,0
 00001501  8A 3D 000002C2 R	    mov bh,yG4Pos
 00001507  80 EF 06		    sub bh,6
 0000150A  8A 1D 000002C1 R	    mov bl,xG4Pos
 00001510  C3			    ret
 00001511			CoordinaterUpdatorGhost4 ENDP 
 00001511			CoordinaterUpdatorGhost5 PROC 
 00001511  BB 00000000		    mov ebx,0
 00001516  8A 3D 000002C4 R	    mov bh,yG5Pos
 0000151C  80 EF 06		    sub bh,6
 0000151F  8A 1D 000002C3 R	    mov bl,xG5Pos
 00001525  C3			    ret
 00001526			CoordinaterUpdatorGhost5 ENDP 
 00001526			CoordinaterUpdatorGhost6 PROC 
 00001526  BB 00000000		    mov ebx,0
 0000152B  8A 3D 000002C6 R	    mov bh,yG6Pos
 00001531  80 EF 06		    sub bh,6
 00001534  8A 1D 000002C5 R	    mov bl,xG6Pos
 0000153A  C3			    ret
 0000153B			CoordinaterUpdatorGhost6 ENDP 
 0000153B			CoordinaterUpdatorGhost7 PROC 
 0000153B  BB 00000000		    mov ebx,0
 00001540  8A 3D 000002C8 R	    mov bh,yG7Pos
 00001546  80 EF 06		    sub bh,6
 00001549  8A 1D 000002C7 R	    mov bl,xG7Pos
 0000154F  C3			    ret
 00001550			CoordinaterUpdatorGhost7 ENDP 
				;----------------------------------------(Ghosts - Level 1)------------------------------------------
				;----------------------------------------(Ghosts - Level 1)------------------------------------------
 00001550			GetGhostRowl1 PROC
 00001550  80 FF 01		        cmp bh,1
 00001553  0F 84 000000B4	        je l1_r02_Handle  
 00001559  80 FF 02		        cmp bh,2
 0000155C  0F 84 000000B5	        je l1_r03_Handle
 00001562  80 FF 03		        cmp bh,3
 00001565  0F 84 000000B6	        je l1_r04_Handle
 0000156B  80 FF 04		        cmp bh,4
 0000156E  0F 84 000000B4	        je l1_r05_Handle
 00001574  80 FF 05		        cmp bh,5
 00001577  0F 84 000000B2	        je l1_r06_Handle
 0000157D  80 FF 06		        cmp bh,6
 00001580  0F 84 000000B0	        je l1_r07_Handle
 00001586  80 FF 07		        cmp bh,7
 00001589  0F 84 000000AE	        je l1_r08_Handle
 0000158F  80 FF 08		        cmp bh,8
 00001592  0F 84 000000AC	        je l1_r09_Handle
 00001598  80 FF 09		        cmp bh,9
 0000159B  0F 84 000000AA	        je l1_r10_Handle
 000015A1  80 FF 0A		        cmp bh,10
 000015A4  0F 84 000000A8	        je l1_r11_Handle
 000015AA  80 FF 0B		        cmp bh,11
 000015AD  0F 84 000000A6	        je l1_r12_Handle
 000015B3  80 FF 0C		        cmp bh,12
 000015B6  0F 84 000000A4	        je l1_r13_Handle
 000015BC  80 FF 0D		        cmp bh,13
 000015BF  0F 84 000000A2	        je l1_r14_Handle
 000015C5  80 FF 0E		        cmp bh,14
 000015C8  0F 84 000000A0	        je l1_r15_Handle
 000015CE  80 FF 0F		        cmp bh,15
 000015D1  0F 84 0000009E	        je l1_r16_Handle
 000015D7  80 FF 10		        cmp bh,16
 000015DA  0F 84 0000009C	        je l1_r17_Handle
 000015E0  80 FF 11		        cmp bh,17
 000015E3  0F 84 0000009A	        je l1_r18_Handle
 000015E9  80 FF 12		        cmp bh,18
 000015EC  0F 84 00000098	        je l1_r19_Handle
 000015F2  80 FF 13		        cmp bh,19
 000015F5  0F 84 00000096	        je l1_r20_Handle
 000015FB  80 FF 14		        cmp bh,20
 000015FE  0F 84 00000094	        je l1_r21_Handle
 00001604  80 FF 15		        cmp bh,21
 00001607  0F 84 00000092	        je l1_r22_Handle
				            
 0000160D  BE 0000072B R	        l1_r02_Handle:  mov esi,offset l1_r02
 00001612  E9 0000008F		                        jmp MovementChecker
 00001617  BE 00000752 R	        l1_r03_Handle:  mov esi,offset l1_r03
 0000161C  E9 00000085		                        jmp MovementChecker
 00001621  BE 00000779 R	        l1_r04_Handle:  mov esi,offset l1_r04
 00001626  EB 7E		                        jmp MovementChecker
 00001628  BE 000007A0 R	        l1_r05_Handle:  mov esi,offset l1_r05
 0000162D  EB 77		                        jmp MovementChecker
 0000162F  BE 000007C7 R	        l1_r06_Handle:  mov esi,offset l1_r06
 00001634  EB 70		                        jmp MovementChecker
 00001636  BE 000007EE R	        l1_r07_Handle:  mov esi,offset l1_r07
 0000163B  EB 69		                        jmp MovementChecker
 0000163D  BE 00000815 R	        l1_r08_Handle:  mov esi,offset l1_r08
 00001642  EB 62		                        jmp MovementChecker
 00001644  BE 0000083C R	        l1_r09_Handle:  mov esi,offset l1_r09
 00001649  EB 5B		                        jmp MovementChecker
 0000164B  BE 00000863 R	        l1_r10_Handle:  mov esi,offset l1_r10
 00001650  EB 54		                        jmp MovementChecker
 00001652  BE 0000088A R	        l1_r11_Handle:  mov esi,offset l1_r11
 00001657  EB 4D		                        jmp MovementChecker
 00001659  BE 000008B1 R	        l1_r12_Handle:  mov esi,offset l1_r12
 0000165E  EB 46		                        jmp MovementChecker
 00001660  BE 000008D8 R	        l1_r13_Handle:  mov esi,offset l1_r13
 00001665  EB 3F		                        jmp MovementChecker
 00001667  BE 000008FF R	        l1_r14_Handle:  mov esi,offset l1_r14
 0000166C  EB 38		                        jmp MovementChecker
 0000166E  BE 00000926 R	        l1_r15_Handle:  mov esi,offset l1_r15
 00001673  EB 31		                        jmp MovementChecker
 00001675  BE 0000094D R	        l1_r16_Handle:  mov esi,offset l1_r16
 0000167A  EB 2A		                        jmp MovementChecker
 0000167C  BE 00000974 R	        l1_r17_Handle:  mov esi,offset l1_r17
 00001681  EB 23		                        jmp MovementChecker
 00001683  BE 0000099B R	        l1_r18_Handle:  mov esi,offset l1_r18
 00001688  EB 1C		                        jmp MovementChecker
 0000168A  BE 000009C2 R	        l1_r19_Handle:  mov esi,offset l1_r19
 0000168F  EB 15		                        jmp MovementChecker
 00001691  BE 000009E9 R	        l1_r20_Handle:  mov esi,offset l1_r20
 00001696  EB 0E		                        jmp MovementChecker
 00001698  BE 00000A10 R	        l1_r21_Handle:  mov esi,offset l1_r21
 0000169D  EB 07		                        jmp MovementChecker
 0000169F  BE 00000A37 R	        l1_r22_Handle:  mov esi,offset l1_r22
 000016A4  EB 00		                        jmp MovementChecker

 000016A6			        MovementChecker:
 000016A6  C3			    ret
 000016A7			GetGhostRowl1 ENDP    
 000016A7			DrawGhost1 PROC 
 000016A7  B8 00000000		    mov eax,0
 000016AC  B0 DF		    mov al,white (16*1101b)
 000016AE  E8 00000000 E	    call SetTextColor
 000016B3  8A 15 000002BB R	    mov dl,xG1Pos
 000016B9  8A 35 000002BC R	    mov dh,yG1Pos
 000016BF  E8 00000000 E	    call Gotoxy
 000016C4  A0 000002B4 R	    mov al,G1
 000016C9  E8 00000000 E	    call WriteChar
 000016CE  B0 0F		    mov al,white (16*black)
 000016D0  E8 00000000 E	    call SetTextColor
 000016D5  C3			    ret
 000016D6			DrawGhost1 ENDP  
 000016D6			UpdateGhost1 PROC
 000016D6  8A 15 000002BB R	    mov dl,xG1Pos
 000016DC  8A 35 000002BC R	    mov dh,yG1Pos    
 000016E2  E8 00000000 E	    call Gotoxy
 000016E7  BB 00000000		    mov ebx,0
 000016EC  8A 3D 000002BC R	    mov bh,yG1Pos
 000016F2  80 EF 06		    sub bh,6
 000016F5  8A 1D 000002BB R	    mov bl,xG1Pos
 000016FB  E8 FFFFFE50		    call GetGhostRowl1
 00001700  8A CB		    mov cl,bl

 00001702  46			    l1: inc esi
 00001703  E2 FD		    loop l1

 00001705  BA 00000000		    mov edx,0
 0000170A  B6 2E		    mov dh,"."
 0000170C  38 36		    cmp [esi],dh
 0000170E  75 11		    jne next
 00001710  B8 0000000F		    mov eax,white (black*16)
 00001715  E8 00000000 E	    call settextcolor
 0000171A  B0 6F		    mov al,"o"
 0000171C  E8 00000000 E	    call Writechar
 00001721			    next:
 00001721  B0 20		    mov al," "
 00001723  E8 00000000 E	    call WriteChar
 00001728			    escape:      
 00001728  C3			    ret
 00001729			UpdateGhost1 ENDP   
 00001729			Ghost1Movement PROC 
 00001729  E8 000036C0		        call Level1Intersection 

 0000172E  C6 05 0000029A R	        mov Ghost1MovementPossibibly,1
	   01

 00001735  80 3D 00000299 R	        cmp Ghost1DirectionHandle,1
	   01
 0000173C  74 1B		        je L1moveRight
 0000173E  80 3D 00000299 R	        cmp Ghost1DirectionHandle,2
	   02
 00001745  74 36		        je L1moveLeft
 00001747  80 3D 00000299 R	        cmp Ghost1DirectionHandle,3
	   03
 0000174E  74 51		        je L1moveUp
 00001750  80 3D 00000299 R	        cmp Ghost1DirectionHandle,4
	   04
 00001757  74 66		        je L1MoveDown

 00001759			        L1moveRight:   
 00001759  E8 FFFFFF78		            call UpdateGhost1
 0000175E  FE 05 000002BB R	            inc xG1Pos
 00001764  FE 05 000002BB R	            inc xG1Pos
 0000176A  C6 05 00000299 R	            mov Ghost1DirectionHandle,1
	   01
 00001771  E8 FFFFFD47		            call CoordinaterUpdatorGhost1
 00001776  E8 000000CE		            call Level1MovementLeftRightGhost1 
 0000177B  EB 60		            jmp L1SkipLeftRight

 0000177D			        L1moveLeft: 
 0000177D  E8 FFFFFF54		            call UpdateGhost1
 00001782  FE 0D 000002BB R	            dec xG1Pos
 00001788  FE 0D 000002BB R	            dec xG1Pos
 0000178E  C6 05 00000299 R	            mov Ghost1DirectionHandle,2
	   02
 00001795  E8 FFFFFD23		            call CoordinaterUpdatorGhost1
 0000179A  E8 000000AA		            call Level1MovementLeftRightGhost1 
 0000179F  EB 3C		            jmp L1SkipLeftRight

 000017A1			        L1moveUp:
 000017A1  E8 FFFFFF30		            call UpdateGhost1
 000017A6  FE 0D 000002BC R	            dec yG1Pos
 000017AC  C6 05 00000299 R	            mov Ghost1DirectionHandle,3
	   03
 000017B3  E8 FFFFFD05		            call CoordinaterUpdatorGhost1
 000017B8  E8 00000264		            call Level1MovementUpGhost1
 000017BD  EB 1E		            jmp L1SkipLeftRight

 000017BF			        L1MoveDown:
 000017BF  E8 FFFFFF12		            call UpdateGhost1
 000017C4  FE 05 000002BC R	            inc yG1Pos
 000017CA  C6 05 00000299 R	            mov Ghost1DirectionHandle,4
	   04
 000017D1  E8 FFFFFCE7		            call CoordinaterUpdatorGhost1
 000017D6  E8 0000042D		            call Level1MovementDownGhost1
 000017DB  EB 00		            jmp L1SkipLeftRight

 000017DD			        L1SkipLeftRight:      

 000017DD  80 3D 0000029A R	        cmp Ghost1MovementPossibibly,0
	   00
 000017E4  74 02		        je GhostMovementFixer
 000017E6  EB 60		        jmp SkipMovementFixer

 000017E8			        GhostMovementFixer:
 000017E8  80 3D 00000299 R	        cmp Ghost1DirectionHandle,1
	   01
 000017EF  74 1D		        je RightFixer
 000017F1  80 3D 00000299 R	        cmp Ghost1DirectionHandle,2
	   02
 000017F8  74 22		        je LeftFixer
 000017FA  80 3D 00000299 R	        cmp Ghost1DirectionHandle,3
	   03
 00001801  74 27		        je UpFixer
 00001803  80 3D 00000299 R	        cmp Ghost1DirectionHandle,4
	   04
 0000180A  74 26		        je DownFixer
 0000180C  EB 3A		        jmp SkipMovementFixer

 0000180E  FE 0D 000002BB R	        RightFixer: dec xG1Pos
 00001814  FE 0D 000002BB R	                    dec xG1Pos
 0000181A  EB 1C		                    jmp NewDirector
 0000181C  FE 05 000002BB R	        LeftFixer:  inc xG1Pos
 00001822  FE 05 000002BB R	                    inc xG1Pos
 00001828  EB 0E		                    jmp NewDirector
 0000182A  FE 05 000002BC R	        UpFixer:    inc yG1Pos
 00001830  EB 06		                    jmp NewDirector
 00001832  FE 0D 000002BC R	        DownFixer:  dec yG1Pos

 00001838			        NewDirector:
 00001838  B8 00000004		        mov  eax,4     ;get random 0 to 99
 0000183D  E8 00000000 E	        call RandomRange ;
 00001842  40			        inc  eax         ;make range 1 to 100
 00001843  A2 00000299 R	        mov  Ghost1DirectionHandle,al  ;save random number
 00001848			        SkipMovementFixer:

 00001848  C3			    ret
 00001849			Ghost1Movement ENDP 

 00001849			Level1MovementLeftRightGhost1 PROC 

 00001849  80 FF 01		        cmp bh,1
 0000184C  0F 84 000000B4	        je l1_r02_Handle  
 00001852  80 FF 02		        cmp bh,2
 00001855  0F 84 000000BA	        je l1_r03_Handle
 0000185B  80 FF 03		        cmp bh,3
 0000185E  0F 84 000000C0	        je l1_r04_Handle
 00001864  80 FF 04		        cmp bh,4
 00001867  0F 84 000000C6	        je l1_r05_Handle
 0000186D  80 FF 05		        cmp bh,5
 00001870  0F 84 000000CC	        je l1_r06_Handle
 00001876  80 FF 06		        cmp bh,6
 00001879  0F 84 000000D2	        je l1_r07_Handle
 0000187F  80 FF 07		        cmp bh,7
 00001882  0F 84 000000D8	        je l1_r08_Handle
 00001888  80 FF 08		        cmp bh,8
 0000188B  0F 84 000000DE	        je l1_r09_Handle
 00001891  80 FF 09		        cmp bh,9
 00001894  0F 84 000000E4	        je l1_r10_Handle
 0000189A  80 FF 0A		        cmp bh,10
 0000189D  0F 84 000000EA	        je l1_r11_Handle
 000018A3  80 FF 0B		        cmp bh,11
 000018A6  0F 84 000000F0	        je l1_r12_Handle
 000018AC  80 FF 0C		        cmp bh,12
 000018AF  0F 84 000000F3	        je l1_r13_Handle
 000018B5  80 FF 0D		        cmp bh,13
 000018B8  0F 84 000000F6	        je l1_r14_Handle
 000018BE  80 FF 0E		        cmp bh,14
 000018C1  0F 84 000000F9	        je l1_r15_Handle
 000018C7  80 FF 0F		        cmp bh,15
 000018CA  0F 84 000000FC	        je l1_r16_Handle
 000018D0  80 FF 10		        cmp bh,16
 000018D3  0F 84 000000FF	        je l1_r17_Handle
 000018D9  80 FF 11		        cmp bh,17
 000018DC  0F 84 00000102	        je l1_r18_Handle
 000018E2  80 FF 12		        cmp bh,18
 000018E5  0F 84 00000105	        je l1_r19_Handle
 000018EB  80 FF 13		        cmp bh,19
 000018EE  0F 84 00000108	        je l1_r20_Handle
 000018F4  80 FF 14		        cmp bh,20
 000018F7  0F 84 0000010B	        je l1_r21_Handle
 000018FD  80 FF 15		        cmp bh,21
 00001900  0F 84 0000010E	        je l1_r22_Handle
				            
 00001906  BE 0000072B R	        l1_r02_Handle:  mov esi,offset l1_r02
 0000190B  E8 000004DF		                        call Ghost1WallChecker
 00001910  E9 0000010B		                        jmp MovementChecker
 00001915  BE 00000752 R	        l1_r03_Handle:  mov esi,offset l1_r03
 0000191A  E8 000004D0		                        call Ghost1WallChecker
 0000191F  E9 000000FC		                        jmp MovementChecker
 00001924  BE 00000779 R	        l1_r04_Handle:  mov esi,offset l1_r04
 00001929  E8 000004C1		                        call Ghost1WallChecker
 0000192E  E9 000000ED		                        jmp MovementChecker
 00001933  BE 000007A0 R	        l1_r05_Handle:  mov esi,offset l1_r05
 00001938  E8 000004B2		                        call Ghost1WallChecker
 0000193D  E9 000000DE		                        jmp MovementChecker
 00001942  BE 000007C7 R	        l1_r06_Handle:  mov esi,offset l1_r06
 00001947  E8 000004A3		                        call Ghost1WallChecker
 0000194C  E9 000000CF		                        jmp MovementChecker
 00001951  BE 000007EE R	        l1_r07_Handle:  mov esi,offset l1_r07
 00001956  E8 00000494		                        call Ghost1WallChecker
 0000195B  E9 000000C0		                        jmp MovementChecker
 00001960  BE 00000815 R	        l1_r08_Handle:  mov esi,offset l1_r08
 00001965  E8 00000485		                        call Ghost1WallChecker
 0000196A  E9 000000B1		                        jmp MovementChecker
 0000196F  BE 0000083C R	        l1_r09_Handle:  mov esi,offset l1_r09
 00001974  E8 00000476		                        call Ghost1WallChecker
 00001979  E9 000000A2		                        jmp MovementChecker
 0000197E  BE 00000863 R	        l1_r10_Handle:  mov esi,offset l1_r10
 00001983  E8 00000467		                        call Ghost1WallChecker
 00001988  E9 00000093		                        jmp MovementChecker
 0000198D  BE 0000088A R	        l1_r11_Handle:  mov esi,offset l1_r11
 00001992  E8 00000458		                        call Ghost1WallChecker
 00001997  E9 00000084		                        jmp MovementChecker
 0000199C  BE 000008B1 R	        l1_r12_Handle:  mov esi,offset l1_r12
 000019A1  E8 00000449		                        call Ghost1WallChecker
 000019A6  EB 78		                        jmp MovementChecker
 000019A8  BE 000008D8 R	        l1_r13_Handle:  mov esi,offset l1_r13
 000019AD  E8 0000043D		                        call Ghost1WallChecker
 000019B2  EB 6C		                        jmp MovementChecker
 000019B4  BE 000008FF R	        l1_r14_Handle:  mov esi,offset l1_r14
 000019B9  E8 00000431		                        call Ghost1WallChecker
 000019BE  EB 60		                        jmp MovementChecker
 000019C0  BE 00000926 R	        l1_r15_Handle:  mov esi,offset l1_r15
 000019C5  E8 00000425		                        call Ghost1WallChecker
 000019CA  EB 54		                        jmp MovementChecker
 000019CC  BE 0000094D R	        l1_r16_Handle:  mov esi,offset l1_r16
 000019D1  E8 00000419		                        call Ghost1WallChecker
 000019D6  EB 48		                        jmp MovementChecker
 000019D8  BE 00000974 R	        l1_r17_Handle:  mov esi,offset l1_r17
 000019DD  E8 0000040D		                        call Ghost1WallChecker
 000019E2  EB 3C		                        jmp MovementChecker
 000019E4  BE 0000099B R	        l1_r18_Handle:  mov esi,offset l1_r18
 000019E9  E8 00000401		                        call Ghost1WallChecker
 000019EE  EB 30		                        jmp MovementChecker
 000019F0  BE 000009C2 R	        l1_r19_Handle:  mov esi,offset l1_r19
 000019F5  E8 000003F5		                        call Ghost1WallChecker
 000019FA  EB 24		                        jmp MovementChecker
 000019FC  BE 000009E9 R	        l1_r20_Handle:  mov esi,offset l1_r20
 00001A01  E8 000003E9		                        call Ghost1WallChecker
 00001A06  EB 18		                        jmp MovementChecker
 00001A08  BE 00000A10 R	        l1_r21_Handle:  mov esi,offset l1_r21
 00001A0D  E8 000003DD		                        call Ghost1WallChecker
 00001A12  EB 0C		                        jmp MovementChecker
 00001A14  BE 00000A37 R	        l1_r22_Handle:  mov esi,offset l1_r22
 00001A19  E8 000003D1		                        call Ghost1WallChecker
 00001A1E  EB 00		                        jmp MovementChecker

 00001A20			        MovementChecker:
 00001A20  C3			    ret
 00001A21			Level1MovementLeftRightGhost1 ENDP    
 00001A21			Level1MovementUpGhost1 PROC   

 00001A21  80 FF 00		        cmp bh,0
 00001A24  0F 84 000000B4	        je l1_r01_Handle  
 00001A2A  80 FF 01		        cmp bh,1
 00001A2D  0F 84 000000BA	        je l1_r02_Handle
 00001A33  80 FF 02		        cmp bh,2
 00001A36  0F 84 000000C0	        je l1_r03_Handle
 00001A3C  80 FF 03		        cmp bh,3
 00001A3F  0F 84 000000C6	        je l1_r04_Handle
 00001A45  80 FF 04		        cmp bh,4
 00001A48  0F 84 000000CC	        je l1_r05_Handle
 00001A4E  80 FF 05		        cmp bh,5
 00001A51  0F 84 000000D2	        je l1_r06_Handle
 00001A57  80 FF 06		        cmp bh,6
 00001A5A  0F 84 000000D8	        je l1_r07_Handle
 00001A60  80 FF 07		        cmp bh,7
 00001A63  0F 84 000000DE	        je l1_r08_Handle
 00001A69  80 FF 08		        cmp bh,8
 00001A6C  0F 84 000000E4	        je l1_r09_Handle
 00001A72  80 FF 09		        cmp bh,9
 00001A75  0F 84 000000EA	        je l1_r10_Handle
 00001A7B  80 FF 0A		        cmp bh,10
 00001A7E  0F 84 000000F0	        je l1_r11_Handle
 00001A84  80 FF 0B		        cmp bh,11
 00001A87  0F 84 000000F6	        je l1_r12_Handle
 00001A8D  80 FF 0C		        cmp bh,12
 00001A90  0F 84 000000F9	        je l1_r13_Handle
 00001A96  80 FF 0D		        cmp bh,13
 00001A99  0F 84 000000FC	        je l1_r14_Handle
 00001A9F  80 FF 0E		        cmp bh,14
 00001AA2  0F 84 000000FF	        je l1_r15_Handle
 00001AA8  80 FF 0F		        cmp bh,15
 00001AAB  0F 84 00000102	        je l1_r16_Handle
 00001AB1  80 FF 10		        cmp bh,16
 00001AB4  0F 84 00000105	        je l1_r17_Handle
 00001ABA  80 FF 11		        cmp bh,17
 00001ABD  0F 84 00000108	        je l1_r18_Handle
 00001AC3  80 FF 12		        cmp bh,18
 00001AC6  0F 84 0000010B	        je l1_r19_Handle
 00001ACC  80 FF 13		        cmp bh,19
 00001ACF  0F 84 0000010E	        je l1_r20_Handle
 00001AD5  80 FF 14		        cmp bh,20
 00001AD8  0F 84 00000111	        je l1_r21_Handle

 00001ADE  BE 00000704 R	        l1_r01_Handle:  mov esi,offset l1_r01
 00001AE3  E8 00000307		                        call Ghost1WallChecker
 00001AE8  E9 0000011A		                        jmp MovementChecker            
 00001AED  BE 0000072B R	        l1_r02_Handle:  mov esi,offset l1_r02
 00001AF2  E8 000002F8		                        call Ghost1WallChecker
 00001AF7  E9 0000010B		                        jmp MovementChecker
 00001AFC  BE 00000752 R	        l1_r03_Handle:  mov esi,offset l1_r03
 00001B01  E8 000002E9		                        call Ghost1WallChecker
 00001B06  E9 000000FC		                        jmp MovementChecker
 00001B0B  BE 00000779 R	        l1_r04_Handle:  mov esi,offset l1_r04
 00001B10  E8 000002DA		                        call Ghost1WallChecker
 00001B15  E9 000000ED		                        jmp MovementChecker
 00001B1A  BE 000007A0 R	        l1_r05_Handle:  mov esi,offset l1_r05
 00001B1F  E8 000002CB		                        call Ghost1WallChecker
 00001B24  E9 000000DE		                        jmp MovementChecker
 00001B29  BE 000007C7 R	        l1_r06_Handle:  mov esi,offset l1_r06
 00001B2E  E8 000002BC		                        call Ghost1WallChecker
 00001B33  E9 000000CF		                        jmp MovementChecker
 00001B38  BE 000007EE R	        l1_r07_Handle:  mov esi,offset l1_r07
 00001B3D  E8 000002AD		                        call Ghost1WallChecker
 00001B42  E9 000000C0		                        jmp MovementChecker
 00001B47  BE 00000815 R	        l1_r08_Handle:  mov esi,offset l1_r08
 00001B4C  E8 0000029E		                        call Ghost1WallChecker
 00001B51  E9 000000B1		                        jmp MovementChecker
 00001B56  BE 0000083C R	        l1_r09_Handle:  mov esi,offset l1_r09
 00001B5B  E8 0000028F		                        call Ghost1WallChecker
 00001B60  E9 000000A2		                        jmp MovementChecker
 00001B65  BE 00000863 R	        l1_r10_Handle:  mov esi,offset l1_r10
 00001B6A  E8 00000280		                        call Ghost1WallChecker
 00001B6F  E9 00000093		                        jmp MovementChecker
 00001B74  BE 0000088A R	        l1_r11_Handle:  mov esi,offset l1_r11
 00001B79  E8 00000271		                        call Ghost1WallChecker
 00001B7E  E9 00000084		                        jmp MovementChecker
 00001B83  BE 000008B1 R	        l1_r12_Handle:  mov esi,offset l1_r12
 00001B88  E8 00000262		                        call Ghost1WallChecker
 00001B8D  EB 78		                        jmp MovementChecker
 00001B8F  BE 000008D8 R	        l1_r13_Handle:  mov esi,offset l1_r13
 00001B94  E8 00000256		                        call Ghost1WallChecker
 00001B99  EB 6C		                        jmp MovementChecker
 00001B9B  BE 000008FF R	        l1_r14_Handle:  mov esi,offset l1_r14
 00001BA0  E8 0000024A		                        call Ghost1WallChecker
 00001BA5  EB 60		                        jmp MovementChecker
 00001BA7  BE 00000926 R	        l1_r15_Handle:  mov esi,offset l1_r15
 00001BAC  E8 0000023E		                        call Ghost1WallChecker
 00001BB1  EB 54		                        jmp MovementChecker
 00001BB3  BE 0000094D R	        l1_r16_Handle:  mov esi,offset l1_r16
 00001BB8  E8 00000232		                        call Ghost1WallChecker
 00001BBD  EB 48		                        jmp MovementChecker
 00001BBF  BE 00000974 R	        l1_r17_Handle:  mov esi,offset l1_r17
 00001BC4  E8 00000226		                        call Ghost1WallChecker
 00001BC9  EB 3C		                        jmp MovementChecker
 00001BCB  BE 0000099B R	        l1_r18_Handle:  mov esi,offset l1_r18
 00001BD0  E8 0000021A		                        call Ghost1WallChecker
 00001BD5  EB 30		                        jmp MovementChecker
 00001BD7  BE 000009C2 R	        l1_r19_Handle:  mov esi,offset l1_r19
 00001BDC  E8 0000020E		                        call Ghost1WallChecker
 00001BE1  EB 24		                        jmp MovementChecker
 00001BE3  BE 000009E9 R	        l1_r20_Handle:  mov esi,offset l1_r20
 00001BE8  E8 00000202		                        call Ghost1WallChecker
 00001BED  EB 18		                        jmp MovementChecker
 00001BEF  BE 00000A10 R	        l1_r21_Handle:  mov esi,offset l1_r21
 00001BF4  E8 000001F6		                        call Ghost1WallChecker
 00001BF9  EB 0C		                        jmp MovementChecker
 00001BFB  BE 00000A37 R	        l1_r22_Handle:  mov esi,offset l1_r22
 00001C00  E8 000001EA		                        call Ghost1WallChecker
 00001C05  EB 00		                        jmp MovementChecker
 00001C07			        MovementChecker:
 00001C07  C3			    ret
 00001C08			Level1MovementUpGhost1 ENDP  
 00001C08			Level1MovementDownGhost1 PROC   

 00001C08  80 FF 00		        cmp bh,0
 00001C0B  0F 84 000000B4	        je l1_r01_Handle  
 00001C11  80 FF 01		        cmp bh,1
 00001C14  0F 84 000000BA	        je l1_r02_Handle
 00001C1A  80 FF 02		        cmp bh,2
 00001C1D  0F 84 000000C0	        je l1_r03_Handle
 00001C23  80 FF 03		        cmp bh,3
 00001C26  0F 84 000000C6	        je l1_r04_Handle
 00001C2C  80 FF 04		        cmp bh,4
 00001C2F  0F 84 000000CC	        je l1_r05_Handle
 00001C35  80 FF 05		        cmp bh,5
 00001C38  0F 84 000000D2	        je l1_r06_Handle
 00001C3E  80 FF 06		        cmp bh,6
 00001C41  0F 84 000000D8	        je l1_r07_Handle
 00001C47  80 FF 07		        cmp bh,7
 00001C4A  0F 84 000000DE	        je l1_r08_Handle
 00001C50  80 FF 08		        cmp bh,8
 00001C53  0F 84 000000E4	        je l1_r09_Handle
 00001C59  80 FF 09		        cmp bh,9
 00001C5C  0F 84 000000EA	        je l1_r10_Handle
 00001C62  80 FF 0A		        cmp bh,10
 00001C65  0F 84 000000F0	        je l1_r11_Handle
 00001C6B  80 FF 0B		        cmp bh,11
 00001C6E  0F 84 000000F6	        je l1_r12_Handle
 00001C74  80 FF 0C		        cmp bh,12
 00001C77  0F 84 000000F9	        je l1_r13_Handle
 00001C7D  80 FF 0D		        cmp bh,13
 00001C80  0F 84 000000FC	        je l1_r14_Handle
 00001C86  80 FF 0E		        cmp bh,14
 00001C89  0F 84 000000FF	        je l1_r15_Handle
 00001C8F  80 FF 0F		        cmp bh,15
 00001C92  0F 84 00000102	        je l1_r16_Handle
 00001C98  80 FF 10		        cmp bh,16
 00001C9B  0F 84 00000105	        je l1_r17_Handle
 00001CA1  80 FF 11		        cmp bh,17
 00001CA4  0F 84 00000108	        je l1_r18_Handle
 00001CAA  80 FF 12		        cmp bh,18
 00001CAD  0F 84 0000010B	        je l1_r19_Handle
 00001CB3  80 FF 13		        cmp bh,19
 00001CB6  0F 84 0000010E	        je l1_r20_Handle
 00001CBC  80 FF 14		        cmp bh,20
 00001CBF  0F 84 00000111	        je l1_r21_Handle

 00001CC5  BE 00000704 R	        l1_r01_Handle:  mov esi,offset l1_r01
 00001CCA  E8 00000120		                        call Ghost1WallChecker
 00001CCF  E9 0000011A		                        jmp MovementChecker            
 00001CD4  BE 0000072B R	        l1_r02_Handle:  mov esi,offset l1_r02
 00001CD9  E8 00000111		                        call Ghost1WallChecker
 00001CDE  E9 0000010B		                        jmp MovementChecker
 00001CE3  BE 00000752 R	        l1_r03_Handle:  mov esi,offset l1_r03
 00001CE8  E8 00000102		                        call Ghost1WallChecker
 00001CED  E9 000000FC		                        jmp MovementChecker
 00001CF2  BE 00000779 R	        l1_r04_Handle:  mov esi,offset l1_r04
 00001CF7  E8 000000F3		                        call Ghost1WallChecker
 00001CFC  E9 000000ED		                        jmp MovementChecker
 00001D01  BE 000007A0 R	        l1_r05_Handle:  mov esi,offset l1_r05
 00001D06  E8 000000E4		                        call Ghost1WallChecker
 00001D0B  E9 000000DE		                        jmp MovementChecker
 00001D10  BE 000007C7 R	        l1_r06_Handle:  mov esi,offset l1_r06
 00001D15  E8 000000D5		                        call Ghost1WallChecker
 00001D1A  E9 000000CF		                        jmp MovementChecker
 00001D1F  BE 000007EE R	        l1_r07_Handle:  mov esi,offset l1_r07
 00001D24  E8 000000C6		                        call Ghost1WallChecker
 00001D29  E9 000000C0		                        jmp MovementChecker
 00001D2E  BE 00000815 R	        l1_r08_Handle:  mov esi,offset l1_r08
 00001D33  E8 000000B7		                        call Ghost1WallChecker
 00001D38  E9 000000B1		                        jmp MovementChecker
 00001D3D  BE 0000083C R	        l1_r09_Handle:  mov esi,offset l1_r09
 00001D42  E8 000000A8		                        call Ghost1WallChecker
 00001D47  E9 000000A2		                        jmp MovementChecker
 00001D4C  BE 00000863 R	        l1_r10_Handle:  mov esi,offset l1_r10
 00001D51  E8 00000099		                        call Ghost1WallChecker
 00001D56  E9 00000093		                        jmp MovementChecker
 00001D5B  BE 0000088A R	        l1_r11_Handle:  mov esi,offset l1_r11
 00001D60  E8 0000008A		                        call Ghost1WallChecker
 00001D65  E9 00000084		                        jmp MovementChecker
 00001D6A  BE 000008B1 R	        l1_r12_Handle:  mov esi,offset l1_r12
 00001D6F  E8 0000007B		                        call Ghost1WallChecker
 00001D74  EB 78		                        jmp MovementChecker
 00001D76  BE 000008D8 R	        l1_r13_Handle:  mov esi,offset l1_r13
 00001D7B  E8 0000006F		                        call Ghost1WallChecker
 00001D80  EB 6C		                        jmp MovementChecker
 00001D82  BE 000008FF R	        l1_r14_Handle:  mov esi,offset l1_r14
 00001D87  E8 00000063		                        call Ghost1WallChecker
 00001D8C  EB 60		                        jmp MovementChecker
 00001D8E  BE 00000926 R	        l1_r15_Handle:  mov esi,offset l1_r15
 00001D93  E8 00000057		                        call Ghost1WallChecker
 00001D98  EB 54		                        jmp MovementChecker
 00001D9A  BE 0000094D R	        l1_r16_Handle:  mov esi,offset l1_r16
 00001D9F  E8 0000004B		                        call Ghost1WallChecker
 00001DA4  EB 48		                        jmp MovementChecker
 00001DA6  BE 00000974 R	        l1_r17_Handle:  mov esi,offset l1_r17
 00001DAB  E8 0000003F		                        call Ghost1WallChecker
 00001DB0  EB 3C		                        jmp MovementChecker
 00001DB2  BE 0000099B R	        l1_r18_Handle:  mov esi,offset l1_r18
 00001DB7  E8 00000033		                        call Ghost1WallChecker
 00001DBC  EB 30		                        jmp MovementChecker
 00001DBE  BE 000009C2 R	        l1_r19_Handle:  mov esi,offset l1_r19
 00001DC3  E8 00000027		                        call Ghost1WallChecker
 00001DC8  EB 24		                        jmp MovementChecker
 00001DCA  BE 000009E9 R	        l1_r20_Handle:  mov esi,offset l1_r20
 00001DCF  E8 0000001B		                        call Ghost1WallChecker
 00001DD4  EB 18		                        jmp MovementChecker
 00001DD6  BE 00000A10 R	        l1_r21_Handle:  mov esi,offset l1_r21
 00001DDB  E8 0000000F		                        call Ghost1WallChecker
 00001DE0  EB 0C		                        jmp MovementChecker
 00001DE2  BE 00000A37 R	        l1_r22_Handle:  mov esi,offset l1_r22
 00001DE7  E8 00000003		                        call Ghost1WallChecker
 00001DEC  EB 00		                        jmp MovementChecker
 00001DEE			        MovementChecker:
 00001DEE  C3			    ret
 00001DEF			Level1MovementDownGhost1 ENDP  
 00001DEF			Ghost1WallChecker PROC
 00001DEF  B9 00000000		    mov ecx,0
 00001DF4  8A CB		    mov cl,bl
 00001DF6			    l1loop1:
 00001DF6  46			    inc esi
 00001DF7  E2 FD		    loop l1loop1

 00001DF9  BA 00000000		    mov edx,0
 00001DFE  8A 15 000002B1 R	    mov dl,wall
 00001E04  38 16		    cmp [esi],dl
 00001E06  75 07		    jne Replacer 
 00001E08  C6 05 0000029A R	        mov Ghost1MovementPossibibly,0
	   00
 00001E0F			    Replacer:
 00001E0F			    EscapeReplacer:
 00001E0F  C3			    ret
 00001E10			Ghost1WallChecker ENDP
				;----------------------------------------(Ghosts - Level 2)------------------------------------------
				;----------------------------------------(Ghosts - Level 2)------------------------------------------

 00001E10			GetGhostRowl2 PROC
 00001E10  80 FF 01		        cmp bh,1
 00001E13  0F 84 000000B4	        je l2_r02_Handle  
 00001E19  80 FF 02		        cmp bh,2
 00001E1C  0F 84 000000B5	        je l2_r03_Handle
 00001E22  80 FF 03		        cmp bh,3
 00001E25  0F 84 000000B6	        je l2_r04_Handle
 00001E2B  80 FF 04		        cmp bh,4
 00001E2E  0F 84 000000B4	        je l2_r05_Handle
 00001E34  80 FF 05		        cmp bh,5
 00001E37  0F 84 000000B2	        je l2_r06_Handle
 00001E3D  80 FF 06		        cmp bh,6
 00001E40  0F 84 000000B0	        je l2_r07_Handle
 00001E46  80 FF 07		        cmp bh,7
 00001E49  0F 84 000000AE	        je l2_r08_Handle
 00001E4F  80 FF 08		        cmp bh,8
 00001E52  0F 84 000000AC	        je l2_r09_Handle
 00001E58  80 FF 09		        cmp bh,9
 00001E5B  0F 84 000000AA	        je l2_r10_Handle
 00001E61  80 FF 0A		        cmp bh,10
 00001E64  0F 84 000000A8	        je l2_r11_Handle
 00001E6A  80 FF 0B		        cmp bh,11
 00001E6D  0F 84 000000A6	        je l2_r12_Handle
 00001E73  80 FF 0C		        cmp bh,12
 00001E76  0F 84 000000A4	        je l2_r13_Handle
 00001E7C  80 FF 0D		        cmp bh,13
 00001E7F  0F 84 000000A2	        je l2_r14_Handle
 00001E85  80 FF 0E		        cmp bh,14
 00001E88  0F 84 000000A0	        je l2_r15_Handle
 00001E8E  80 FF 0F		        cmp bh,15
 00001E91  0F 84 0000009E	        je l2_r16_Handle
 00001E97  80 FF 10		        cmp bh,16
 00001E9A  0F 84 0000009C	        je l2_r17_Handle
 00001EA0  80 FF 11		        cmp bh,17
 00001EA3  0F 84 0000009A	        je l2_r18_Handle
 00001EA9  80 FF 12		        cmp bh,18
 00001EAC  0F 84 00000098	        je l2_r19_Handle
 00001EB2  80 FF 13		        cmp bh,19
 00001EB5  0F 84 00000096	        je l2_r20_Handle
 00001EBB  80 FF 14		        cmp bh,20
 00001EBE  0F 84 00000094	        je l2_r21_Handle
 00001EC4  80 FF 15		        cmp bh,21
 00001EC7  0F 84 00000092	        je l2_r22_Handle
				            
 00001ECD  BE 00000A91 R	        l2_r02_Handle:  mov esi,offset l2_r02
 00001ED2  E9 0000008F		                        jmp MovementChecker
 00001ED7  BE 00000AC4 R	        l2_r03_Handle:  mov esi,offset l2_r03
 00001EDC  E9 00000085		                        jmp MovementChecker
 00001EE1  BE 00000AF7 R	        l2_r04_Handle:  mov esi,offset l2_r04
 00001EE6  EB 7E		                        jmp MovementChecker
 00001EE8  BE 00000B2A R	        l2_r05_Handle:  mov esi,offset l2_r05
 00001EED  EB 77		                        jmp MovementChecker
 00001EEF  BE 00000B5D R	        l2_r06_Handle:  mov esi,offset l2_r06
 00001EF4  EB 70		                        jmp MovementChecker
 00001EF6  BE 00000B90 R	        l2_r07_Handle:  mov esi,offset l2_r07
 00001EFB  EB 69		                        jmp MovementChecker
 00001EFD  BE 00000BC3 R	        l2_r08_Handle:  mov esi,offset l2_r08
 00001F02  EB 62		                        jmp MovementChecker
 00001F04  BE 00000BF6 R	        l2_r09_Handle:  mov esi,offset l2_r09
 00001F09  EB 5B		                        jmp MovementChecker
 00001F0B  BE 00000C29 R	        l2_r10_Handle:  mov esi,offset l2_r10
 00001F10  EB 54		                        jmp MovementChecker
 00001F12  BE 00000C5C R	        l2_r11_Handle:  mov esi,offset l2_r11
 00001F17  EB 4D		                        jmp MovementChecker
 00001F19  BE 00000C8F R	        l2_r12_Handle:  mov esi,offset l2_r12
 00001F1E  EB 46		                        jmp MovementChecker
 00001F20  BE 00000CC2 R	        l2_r13_Handle:  mov esi,offset l2_r13
 00001F25  EB 3F		                        jmp MovementChecker
 00001F27  BE 00000CF5 R	        l2_r14_Handle:  mov esi,offset l2_r14
 00001F2C  EB 38		                        jmp MovementChecker
 00001F2E  BE 00000D28 R	        l2_r15_Handle:  mov esi,offset l2_r15
 00001F33  EB 31		                        jmp MovementChecker
 00001F35  BE 00000D5B R	        l2_r16_Handle:  mov esi,offset l2_r16
 00001F3A  EB 2A		                        jmp MovementChecker
 00001F3C  BE 00000D8E R	        l2_r17_Handle:  mov esi,offset l2_r17
 00001F41  EB 23		                        jmp MovementChecker
 00001F43  BE 00000DC1 R	        l2_r18_Handle:  mov esi,offset l2_r18
 00001F48  EB 1C		                        jmp MovementChecker
 00001F4A  BE 00000DF4 R	        l2_r19_Handle:  mov esi,offset l2_r19
 00001F4F  EB 15		                        jmp MovementChecker
 00001F51  BE 00000E27 R	        l2_r20_Handle:  mov esi,offset l2_r20
 00001F56  EB 0E		                        jmp MovementChecker
 00001F58  BE 00000E5A R	        l2_r21_Handle:  mov esi,offset l2_r21
 00001F5D  EB 07		                        jmp MovementChecker
 00001F5F  BE 00000E8D R	        l2_r22_Handle:  mov esi,offset l2_r22
 00001F64  EB 00		                        jmp MovementChecker
 00001F66			        MovementChecker:
 00001F66  C3			    ret
 00001F67			GetGhostRowl2 ENDP    
 00001F67			DrawGhost2 PROC 
 00001F67  B8 00000000		    mov eax,0
 00001F6C  B0 DF		    mov al,white (16*1101b)
 00001F6E  E8 00000000 E	    call SetTextColor
 00001F73  8A 15 000002BD R	    mov dl,xG2Pos
 00001F79  8A 35 000002BE R	    mov dh,yG2Pos
 00001F7F  E8 00000000 E	    call Gotoxy
 00001F84  A0 000002B5 R	    mov al,G2
 00001F89  E8 00000000 E	    call WriteChar
 00001F8E  B0 0F		    mov al,white (16*black)
 00001F90  E8 00000000 E	    call SetTextColor
 00001F95  C3			    ret
 00001F96			DrawGhost2 ENDP  
 00001F96			UpdateGhost2 PROC
 00001F96  8A 15 000002BD R	    mov dl,xG2Pos
 00001F9C  8A 35 000002BE R	    mov dh,yG2Pos    
 00001FA2  E8 00000000 E	    call Gotoxy
 00001FA7  BB 00000000		    mov ebx,0
 00001FAC  8A 3D 000002BE R	    mov bh,yG2Pos
 00001FB2  80 EF 06		    sub bh,6
 00001FB5  8A 1D 000002BD R	    mov bl,xG2Pos
 00001FBB  E8 FFFFFE50		    call GetGhostRowl2
 00001FC0  8A CB		    mov cl,bl

 00001FC2  46			    l2: inc esi
 00001FC3  E2 FD		    loop l2

 00001FC5  BA 00000000		    mov edx,0
 00001FCA  B2 2E		    mov dl,"."
 00001FCC  38 16		    cmp [esi],dl
 00001FCE  75 11		    jne next
 00001FD0  B8 0000000F		    mov eax,white (black*16)
 00001FD5  E8 00000000 E	    call settextcolor
 00001FDA  B0 6F		    mov al,"o"
 00001FDC  E8 00000000 E	    call Writechar
 00001FE1			    next:
 00001FE1  B2 2A		    mov dl,"*"
 00001FE3  38 16		    cmp [esi],dl
 00001FE5  75 11		    jne skip
 00001FE7  B8 0000000D		    mov eax,1101b (black*16)
 00001FEC  E8 00000000 E	    call settextcolor
 00001FF1  B0 2A		    mov al,"*"
 00001FF3  E8 00000000 E	    call Writechar
 00001FF8			    skip:
 00001FF8  B0 20		    mov al," "
 00001FFA  E8 00000000 E	    call WriteChar
 00001FFF			    escape:      
 00001FFF  C3			    ret
 00002000			UpdateGhost2 ENDP  
 00002000			Ghost2Movement PROC 
 00002000  E8 00002E3F		        call Level2Intersection 
				    
 00002005  C6 05 0000029C R	        mov Ghost2MovementPossibibly,1
	   01

 0000200C  80 3D 0000029B R	        cmp Ghost2DirectionHandle,1
	   01
 00002013  74 1B		        je l2moveRight
 00002015  80 3D 0000029B R	        cmp Ghost2DirectionHandle,2
	   02
 0000201C  74 36		        je l2moveLeft
 0000201E  80 3D 0000029B R	        cmp Ghost2DirectionHandle,3
	   03
 00002025  74 51		        je l2moveUp
 00002027  80 3D 0000029B R	        cmp Ghost2DirectionHandle,4
	   04
 0000202E  74 66		        je l2MoveDown

 00002030			        l2moveRight:   
 00002030  E8 FFFFFF61		            call UpdateGhost2
 00002035  FE 05 000002BD R	            inc xG2Pos
 0000203B  FE 05 000002BD R	            inc xG2Pos
 00002041  C6 05 0000029B R	            mov Ghost2DirectionHandle,1
	   01
 00002048  E8 FFFFF485		            call CoordinaterUpdatorGhost2
 0000204D  E8 00000287		            call Level2MovementLeftRightGhost2 
 00002052  EB 60		            jmp l2SkipLeftRight

 00002054			        l2moveLeft: 
 00002054  E8 FFFFFF3D		            call UpdateGhost2
 00002059  FE 0D 000002BD R	            dec xG2Pos
 0000205F  FE 0D 000002BD R	            dec xG2Pos
 00002065  C6 05 0000029B R	            mov Ghost2DirectionHandle,2
	   02
 0000206C  E8 FFFFF461		            call CoordinaterUpdatorGhost2
 00002071  E8 00000263		            call Level2MovementLeftRightGhost2 
 00002076  EB 3C		            jmp l2SkipLeftRight

 00002078			        l2moveUp:
 00002078  E8 FFFFFF19		            call UpdateGhost2
 0000207D  FE 0D 000002BE R	            dec yG2Pos
 00002083  C6 05 0000029B R	            mov Ghost2DirectionHandle,3
	   03
 0000208A  E8 FFFFF443		            call CoordinaterUpdatorGhost2
 0000208F  E8 0000041D		            call Level2MovementUpGhost2
 00002094  EB 1E		            jmp l2SkipLeftRight

 00002096			        l2MoveDown:
 00002096  E8 FFFFFEFB		            call UpdateGhost2
 0000209B  FE 05 000002BE R	            inc yG2Pos
 000020A1  C6 05 0000029B R	            mov Ghost2DirectionHandle,4
	   04
 000020A8  E8 FFFFF425		            call CoordinaterUpdatorGhost2
 000020AD  E8 000005E6		            call Level2MovementDownGhost2
 000020B2  EB 00		            jmp l2SkipLeftRight

 000020B4			        l2SkipLeftRight:      

 000020B4  80 3D 0000029C R	        cmp Ghost2MovementPossibibly,0
	   00
 000020BB  74 02		        je GhostMovementFixer
 000020BD  EB 60		        jmp SkipMovementFixer

 000020BF			        GhostMovementFixer:
 000020BF  80 3D 0000029B R	        cmp Ghost2DirectionHandle,1
	   01
 000020C6  74 1D		        je RightFixer
 000020C8  80 3D 0000029B R	        cmp Ghost2DirectionHandle,2
	   02
 000020CF  74 22		        je LeftFixer
 000020D1  80 3D 0000029B R	        cmp Ghost2DirectionHandle,3
	   03
 000020D8  74 27		        je UpFixer
 000020DA  80 3D 0000029B R	        cmp Ghost2DirectionHandle,4
	   04
 000020E1  74 26		        je DownFixer
 000020E3  EB 3A		        jmp SkipMovementFixer

 000020E5  FE 0D 000002BD R	        RightFixer: dec xG2Pos
 000020EB  FE 0D 000002BD R	                    dec xG2Pos
 000020F1  EB 1C		                    jmp NewDirector
 000020F3  FE 05 000002BD R	        LeftFixer:  inc xG2Pos
 000020F9  FE 05 000002BD R	                    inc xG2Pos
 000020FF  EB 0E		                    jmp NewDirector
 00002101  FE 05 000002BE R	        UpFixer:    inc yG2Pos
 00002107  EB 06		                    jmp NewDirector
 00002109  FE 0D 000002BE R	        DownFixer:  dec yG2Pos

 0000210F			        NewDirector:
 0000210F  B8 00000004		        mov  eax,4     ;get random 0 to 99
 00002114  E8 00000000 E	        call RandomRange ;
 00002119  40			        inc  eax         ;make range 1 to 100
 0000211A  A2 0000029B R	        mov  Ghost2DirectionHandle,al  ;save random number
 0000211F			        SkipMovementFixer:

 0000211F  C3			    ret
 00002120			Ghost2Movement ENDP 

 00002120			DrawGhost3 PROC 
 00002120  B8 00000000		    mov eax,0
 00002125  B0 3F		    mov al,white (16*cyan)
 00002127  E8 00000000 E	    call SetTextColor
 0000212C  8A 15 000002BF R	    mov dl,xG3Pos
 00002132  8A 35 000002C0 R	    mov dh,yG3Pos
 00002138  E8 00000000 E	    call Gotoxy
 0000213D  A0 000002B6 R	    mov al,G3
 00002142  E8 00000000 E	    call WriteChar
 00002147  B0 0F		    mov al,white (16*black)
 00002149  E8 00000000 E	    call SetTextColor
 0000214E  C3			    ret
 0000214F			DrawGhost3 ENDP  
 0000214F			UpdateGhost3 PROC
 0000214F  8A 15 000002BF R	    mov dl,xG3Pos
 00002155  8A 35 000002C0 R	    mov dh,yG3Pos    
 0000215B  E8 00000000 E	    call Gotoxy
 00002160  BB 00000000		    mov ebx,0
 00002165  8A 3D 000002C0 R	    mov bh,yG3Pos
 0000216B  80 EF 06		    sub bh,6
 0000216E  8A 1D 000002BF R	    mov bl,xG3Pos
 00002174  E8 FFFFFC97		    call GetGhostRowl2
 00002179  8A CB		    mov cl,bl

 0000217B  46			    l2: inc esi
 0000217C  E2 FD		    loop l2

 0000217E  BA 00000000		    mov edx,0
 00002183  B2 2E		    mov dl,"."
 00002185  38 16		    cmp [esi],dl
 00002187  75 11		    jne next
 00002189  B8 0000000F		    mov eax,white (black*16)
 0000218E  E8 00000000 E	    call settextcolor
 00002193  B0 6F		    mov al,"o"
 00002195  E8 00000000 E	    call Writechar
 0000219A			    next:
 0000219A  B2 2A		    mov dl,"*"
 0000219C  38 16		    cmp [esi],dl
 0000219E  75 11		    jne skip
 000021A0  B8 0000000D		    mov eax,1101b (black*16)
 000021A5  E8 00000000 E	    call settextcolor
 000021AA  B0 2A		    mov al,"*"
 000021AC  E8 00000000 E	    call Writechar
 000021B1			    skip:
 000021B1  B0 20		    mov al," "
 000021B3  E8 00000000 E	    call WriteChar
 000021B8			    escape:      
 000021B8  C3			    ret
 000021B9			UpdateGhost3 ENDP  
 000021B9			Ghost3Movement PROC 
 000021B9  E8 00002C86		        call Level2Intersection 

 000021BE  C6 05 0000029E R	        mov Ghost3MovementPossibibly,1
	   01

 000021C5  80 3D 0000029D R	        cmp Ghost3DirectionHandle,1
	   01
 000021CC  74 1B		        je l2moveRight
 000021CE  80 3D 0000029D R	        cmp Ghost3DirectionHandle,2
	   02
 000021D5  74 36		        je l2moveLeft
 000021D7  80 3D 0000029D R	        cmp Ghost3DirectionHandle,3
	   03
 000021DE  74 51		        je l2moveUp
 000021E0  80 3D 0000029D R	        cmp Ghost3DirectionHandle,4
	   04
 000021E7  74 66		        je l2MoveDown

 000021E9			        l2moveRight:   
 000021E9  E8 FFFFFF61		            call UpdateGhost3
 000021EE  FE 05 000002BF R	            inc xG3Pos
 000021F4  FE 05 000002BF R	            inc xG3Pos
 000021FA  C6 05 0000029D R	            mov Ghost3DirectionHandle,1
	   01
 00002201  E8 FFFFF2E1		            call CoordinaterUpdatorGhost3
 00002206  E8 00000695		            call Level2MovementLeftRightGhost3 
 0000220B  EB 60		            jmp l2SkipLeftRight

 0000220D			        l2moveLeft: 
 0000220D  E8 FFFFFF3D		            call UpdateGhost3
 00002212  FE 0D 000002BF R	            dec xG3Pos
 00002218  FE 0D 000002BF R	            dec xG3Pos
 0000221E  C6 05 0000029D R	            mov Ghost3DirectionHandle,2
	   02
 00002225  E8 FFFFF2BD		            call CoordinaterUpdatorGhost3
 0000222A  E8 00000671		            call Level2MovementLeftRightGhost3 
 0000222F  EB 3C		            jmp l2SkipLeftRight

 00002231			        l2moveUp:
 00002231  E8 FFFFFF19		            call UpdateGhost3
 00002236  FE 0D 000002C0 R	            dec yG3Pos
 0000223C  C6 05 0000029D R	            mov Ghost3DirectionHandle,3
	   03
 00002243  E8 FFFFF29F		            call CoordinaterUpdatorGhost3
 00002248  E8 0000082B		            call Level2MovementUpGhost3
 0000224D  EB 1E		            jmp l2SkipLeftRight

 0000224F			        l2MoveDown:
 0000224F  E8 FFFFFEFB		            call UpdateGhost3
 00002254  FE 05 000002C0 R	            inc yG3Pos
 0000225A  C6 05 0000029D R	            mov Ghost3DirectionHandle,4
	   04
 00002261  E8 FFFFF281		            call CoordinaterUpdatorGhost3
 00002266  E8 000009F4		            call Level2MovementDownGhost3
 0000226B  EB 00		            jmp l2SkipLeftRight

 0000226D			        l2SkipLeftRight:      

 0000226D  80 3D 0000029E R	        cmp Ghost3MovementPossibibly,0
	   00
 00002274  74 02		        je GhostMovementFixer
 00002276  EB 60		        jmp SkipMovementFixer

 00002278			        GhostMovementFixer:
 00002278  80 3D 0000029D R	        cmp Ghost3DirectionHandle,1
	   01
 0000227F  74 1D		        je RightFixer
 00002281  80 3D 0000029D R	        cmp Ghost3DirectionHandle,2
	   02
 00002288  74 22		        je LeftFixer
 0000228A  80 3D 0000029D R	        cmp Ghost3DirectionHandle,3
	   03
 00002291  74 27		        je UpFixer
 00002293  80 3D 0000029D R	        cmp Ghost3DirectionHandle,4
	   04
 0000229A  74 26		        je DownFixer
 0000229C  EB 3A		        jmp SkipMovementFixer

 0000229E  FE 0D 000002BF R	        RightFixer: dec xG3Pos
 000022A4  FE 0D 000002BF R	                    dec xG3Pos
 000022AA  EB 1C		                    jmp NewDirector
 000022AC  FE 05 000002BF R	        LeftFixer:  inc xG3Pos
 000022B2  FE 05 000002BF R	                    inc xG3Pos
 000022B8  EB 0E		                    jmp NewDirector
 000022BA  FE 05 000002C0 R	        UpFixer:    inc yG3Pos
 000022C0  EB 06		                    jmp NewDirector
 000022C2  FE 0D 000002C0 R	        DownFixer:  dec yG3Pos

 000022C8			        NewDirector:
 000022C8  B8 00000004		        mov  eax,4     ;get random 0 to 99
 000022CD  E8 00000000 E	        call RandomRange ;
 000022D2  40			        inc  eax         ;make range 1 to 100
 000022D3  A2 0000029D R	        mov  Ghost3DirectionHandle,al  ;save random number
 000022D8			        SkipMovementFixer:

 000022D8  C3			    ret
 000022D9			Ghost3Movement ENDP 

 000022D9			Level2MovementLeftRightGhost2 PROC 

 000022D9  80 FF 01		        cmp bh,1
 000022DC  0F 84 000000B4	        je l2_r02_Handle  
 000022E2  80 FF 02		        cmp bh,2
 000022E5  0F 84 000000BA	        je l2_r03_Handle
 000022EB  80 FF 03		        cmp bh,3
 000022EE  0F 84 000000C0	        je l2_r04_Handle
 000022F4  80 FF 04		        cmp bh,4
 000022F7  0F 84 000000C6	        je l2_r05_Handle
 000022FD  80 FF 05		        cmp bh,5
 00002300  0F 84 000000CC	        je l2_r06_Handle
 00002306  80 FF 06		        cmp bh,6
 00002309  0F 84 000000D2	        je l2_r07_Handle
 0000230F  80 FF 07		        cmp bh,7
 00002312  0F 84 000000D8	        je l2_r08_Handle
 00002318  80 FF 08		        cmp bh,8
 0000231B  0F 84 000000DE	        je l2_r09_Handle
 00002321  80 FF 09		        cmp bh,9
 00002324  0F 84 000000E4	        je l2_r10_Handle
 0000232A  80 FF 0A		        cmp bh,10
 0000232D  0F 84 000000EA	        je l2_r11_Handle
 00002333  80 FF 0B		        cmp bh,11
 00002336  0F 84 000000F0	        je l2_r12_Handle
 0000233C  80 FF 0C		        cmp bh,12
 0000233F  0F 84 000000F3	        je l2_r13_Handle
 00002345  80 FF 0D		        cmp bh,13
 00002348  0F 84 000000F6	        je l2_r14_Handle
 0000234E  80 FF 0E		        cmp bh,14
 00002351  0F 84 000000F9	        je l2_r15_Handle
 00002357  80 FF 0F		        cmp bh,15
 0000235A  0F 84 000000FC	        je l2_r16_Handle
 00002360  80 FF 10		        cmp bh,16
 00002363  0F 84 000000FF	        je l2_r17_Handle
 00002369  80 FF 11		        cmp bh,17
 0000236C  0F 84 00000102	        je l2_r18_Handle
 00002372  80 FF 12		        cmp bh,18
 00002375  0F 84 00000105	        je l2_r19_Handle
 0000237B  80 FF 13		        cmp bh,19
 0000237E  0F 84 00000108	        je l2_r20_Handle
 00002384  80 FF 14		        cmp bh,20
 00002387  0F 84 0000010B	        je l2_r21_Handle
 0000238D  80 FF 15		        cmp bh,21
 00002390  0F 84 0000010E	        je l2_r22_Handle
				            
 00002396  BE 00000A91 R	        l2_r02_Handle:  mov esi,offset l2_r02
 0000239B  E8 000004DF		                        call Ghost2WallChecker
 000023A0  E9 0000010B		                        jmp MovementChecker
 000023A5  BE 00000AC4 R	        l2_r03_Handle:  mov esi,offset l2_r03
 000023AA  E8 000004D0		                        call Ghost2WallChecker
 000023AF  E9 000000FC		                        jmp MovementChecker
 000023B4  BE 00000AF7 R	        l2_r04_Handle:  mov esi,offset l2_r04
 000023B9  E8 000004C1		                        call Ghost2WallChecker
 000023BE  E9 000000ED		                        jmp MovementChecker
 000023C3  BE 00000B2A R	        l2_r05_Handle:  mov esi,offset l2_r05
 000023C8  E8 000004B2		                        call Ghost2WallChecker
 000023CD  E9 000000DE		                        jmp MovementChecker
 000023D2  BE 00000B5D R	        l2_r06_Handle:  mov esi,offset l2_r06
 000023D7  E8 000004A3		                        call Ghost2WallChecker
 000023DC  E9 000000CF		                        jmp MovementChecker
 000023E1  BE 00000B90 R	        l2_r07_Handle:  mov esi,offset l2_r07
 000023E6  E8 00000494		                        call Ghost2WallChecker
 000023EB  E9 000000C0		                        jmp MovementChecker
 000023F0  BE 00000BC3 R	        l2_r08_Handle:  mov esi,offset l2_r08
 000023F5  E8 00000485		                        call Ghost2WallChecker
 000023FA  E9 000000B1		                        jmp MovementChecker
 000023FF  BE 00000BF6 R	        l2_r09_Handle:  mov esi,offset l2_r09
 00002404  E8 00000476		                        call Ghost2WallChecker
 00002409  E9 000000A2		                        jmp MovementChecker
 0000240E  BE 00000C29 R	        l2_r10_Handle:  mov esi,offset l2_r10
 00002413  E8 00000467		                        call Ghost2WallChecker
 00002418  E9 00000093		                        jmp MovementChecker
 0000241D  BE 00000C5C R	        l2_r11_Handle:  mov esi,offset l2_r11
 00002422  E8 00000458		                        call Ghost2WallChecker
 00002427  E9 00000084		                        jmp MovementChecker
 0000242C  BE 00000C8F R	        l2_r12_Handle:  mov esi,offset l2_r12
 00002431  E8 00000449		                        call Ghost2WallChecker
 00002436  EB 78		                        jmp MovementChecker
 00002438  BE 00000CC2 R	        l2_r13_Handle:  mov esi,offset l2_r13
 0000243D  E8 0000043D		                        call Ghost2WallChecker
 00002442  EB 6C		                        jmp MovementChecker
 00002444  BE 00000CF5 R	        l2_r14_Handle:  mov esi,offset l2_r14
 00002449  E8 00000431		                        call Ghost2WallChecker
 0000244E  EB 60		                        jmp MovementChecker
 00002450  BE 00000D28 R	        l2_r15_Handle:  mov esi,offset l2_r15
 00002455  E8 00000425		                        call Ghost2WallChecker
 0000245A  EB 54		                        jmp MovementChecker
 0000245C  BE 00000D5B R	        l2_r16_Handle:  mov esi,offset l2_r16
 00002461  E8 00000419		                        call Ghost2WallChecker
 00002466  EB 48		                        jmp MovementChecker
 00002468  BE 00000D8E R	        l2_r17_Handle:  mov esi,offset l2_r17
 0000246D  E8 0000040D		                        call Ghost2WallChecker
 00002472  EB 3C		                        jmp MovementChecker
 00002474  BE 00000DC1 R	        l2_r18_Handle:  mov esi,offset l2_r18
 00002479  E8 00000401		                        call Ghost2WallChecker
 0000247E  EB 30		                        jmp MovementChecker
 00002480  BE 00000DF4 R	        l2_r19_Handle:  mov esi,offset l2_r19
 00002485  E8 000003F5		                        call Ghost2WallChecker
 0000248A  EB 24		                        jmp MovementChecker
 0000248C  BE 00000E27 R	        l2_r20_Handle:  mov esi,offset l2_r20
 00002491  E8 000003E9		                        call Ghost2WallChecker
 00002496  EB 18		                        jmp MovementChecker
 00002498  BE 00000E5A R	        l2_r21_Handle:  mov esi,offset l2_r21
 0000249D  E8 000003DD		                        call Ghost2WallChecker
 000024A2  EB 0C		                        jmp MovementChecker
 000024A4  BE 00000E8D R	        l2_r22_Handle:  mov esi,offset l2_r22
 000024A9  E8 000003D1		                        call Ghost2WallChecker
 000024AE  EB 00		                        jmp MovementChecker

 000024B0			        MovementChecker:
 000024B0  C3			    ret
 000024B1			Level2MovementLeftRightGhost2 ENDP    
 000024B1			Level2MovementUpGhost2 PROC   

 000024B1  80 FF 00		        cmp bh,0
 000024B4  0F 84 000000B4	        je l2_r01_Handle  
 000024BA  80 FF 01		        cmp bh,1
 000024BD  0F 84 000000BA	        je l2_r02_Handle
 000024C3  80 FF 02		        cmp bh,2
 000024C6  0F 84 000000C0	        je l2_r03_Handle
 000024CC  80 FF 03		        cmp bh,3
 000024CF  0F 84 000000C6	        je l2_r04_Handle
 000024D5  80 FF 04		        cmp bh,4
 000024D8  0F 84 000000CC	        je l2_r05_Handle
 000024DE  80 FF 05		        cmp bh,5
 000024E1  0F 84 000000D2	        je l2_r06_Handle
 000024E7  80 FF 06		        cmp bh,6
 000024EA  0F 84 000000D8	        je l2_r07_Handle
 000024F0  80 FF 07		        cmp bh,7
 000024F3  0F 84 000000DE	        je l2_r08_Handle
 000024F9  80 FF 08		        cmp bh,8
 000024FC  0F 84 000000E4	        je l2_r09_Handle
 00002502  80 FF 09		        cmp bh,9
 00002505  0F 84 000000EA	        je l2_r10_Handle
 0000250B  80 FF 0A		        cmp bh,10
 0000250E  0F 84 000000F0	        je l2_r11_Handle
 00002514  80 FF 0B		        cmp bh,11
 00002517  0F 84 000000F6	        je l2_r12_Handle
 0000251D  80 FF 0C		        cmp bh,12
 00002520  0F 84 000000F9	        je l2_r13_Handle
 00002526  80 FF 0D		        cmp bh,13
 00002529  0F 84 000000FC	        je l2_r14_Handle
 0000252F  80 FF 0E		        cmp bh,14
 00002532  0F 84 000000FF	        je l2_r15_Handle
 00002538  80 FF 0F		        cmp bh,15
 0000253B  0F 84 00000102	        je l2_r16_Handle
 00002541  80 FF 10		        cmp bh,16
 00002544  0F 84 00000105	        je l2_r17_Handle
 0000254A  80 FF 11		        cmp bh,17
 0000254D  0F 84 00000108	        je l2_r18_Handle
 00002553  80 FF 12		        cmp bh,18
 00002556  0F 84 0000010B	        je l2_r19_Handle
 0000255C  80 FF 13		        cmp bh,19
 0000255F  0F 84 0000010E	        je l2_r20_Handle
 00002565  80 FF 14		        cmp bh,20
 00002568  0F 84 00000111	        je l2_r21_Handle

 0000256E  BE 00000A5E R	        l2_r01_Handle:  mov esi,offset l2_r01
 00002573  E8 00000307		                        call Ghost2WallChecker
 00002578  E9 0000011A		                        jmp MovementChecker            
 0000257D  BE 00000A91 R	        l2_r02_Handle:  mov esi,offset l2_r02
 00002582  E8 000002F8		                        call Ghost2WallChecker
 00002587  E9 0000010B		                        jmp MovementChecker
 0000258C  BE 00000AC4 R	        l2_r03_Handle:  mov esi,offset l2_r03
 00002591  E8 000002E9		                        call Ghost2WallChecker
 00002596  E9 000000FC		                        jmp MovementChecker
 0000259B  BE 00000AF7 R	        l2_r04_Handle:  mov esi,offset l2_r04
 000025A0  E8 000002DA		                        call Ghost2WallChecker
 000025A5  E9 000000ED		                        jmp MovementChecker
 000025AA  BE 00000B2A R	        l2_r05_Handle:  mov esi,offset l2_r05
 000025AF  E8 000002CB		                        call Ghost2WallChecker
 000025B4  E9 000000DE		                        jmp MovementChecker
 000025B9  BE 00000B5D R	        l2_r06_Handle:  mov esi,offset l2_r06
 000025BE  E8 000002BC		                        call Ghost2WallChecker
 000025C3  E9 000000CF		                        jmp MovementChecker
 000025C8  BE 00000B90 R	        l2_r07_Handle:  mov esi,offset l2_r07
 000025CD  E8 000002AD		                        call Ghost2WallChecker
 000025D2  E9 000000C0		                        jmp MovementChecker
 000025D7  BE 00000BC3 R	        l2_r08_Handle:  mov esi,offset l2_r08
 000025DC  E8 0000029E		                        call Ghost2WallChecker
 000025E1  E9 000000B1		                        jmp MovementChecker
 000025E6  BE 00000BF6 R	        l2_r09_Handle:  mov esi,offset l2_r09
 000025EB  E8 0000028F		                        call Ghost2WallChecker
 000025F0  E9 000000A2		                        jmp MovementChecker
 000025F5  BE 00000C29 R	        l2_r10_Handle:  mov esi,offset l2_r10
 000025FA  E8 00000280		                        call Ghost2WallChecker
 000025FF  E9 00000093		                        jmp MovementChecker
 00002604  BE 00000C5C R	        l2_r11_Handle:  mov esi,offset l2_r11
 00002609  E8 00000271		                        call Ghost2WallChecker
 0000260E  E9 00000084		                        jmp MovementChecker
 00002613  BE 00000C8F R	        l2_r12_Handle:  mov esi,offset l2_r12
 00002618  E8 00000262		                        call Ghost2WallChecker
 0000261D  EB 78		                        jmp MovementChecker
 0000261F  BE 00000CC2 R	        l2_r13_Handle:  mov esi,offset l2_r13
 00002624  E8 00000256		                        call Ghost2WallChecker
 00002629  EB 6C		                        jmp MovementChecker
 0000262B  BE 00000CF5 R	        l2_r14_Handle:  mov esi,offset l2_r14
 00002630  E8 0000024A		                        call Ghost2WallChecker
 00002635  EB 60		                        jmp MovementChecker
 00002637  BE 00000D28 R	        l2_r15_Handle:  mov esi,offset l2_r15
 0000263C  E8 0000023E		                        call Ghost2WallChecker
 00002641  EB 54		                        jmp MovementChecker
 00002643  BE 00000D5B R	        l2_r16_Handle:  mov esi,offset l2_r16
 00002648  E8 00000232		                        call Ghost2WallChecker
 0000264D  EB 48		                        jmp MovementChecker
 0000264F  BE 00000D8E R	        l2_r17_Handle:  mov esi,offset l2_r17
 00002654  E8 00000226		                        call Ghost2WallChecker
 00002659  EB 3C		                        jmp MovementChecker
 0000265B  BE 00000DC1 R	        l2_r18_Handle:  mov esi,offset l2_r18
 00002660  E8 0000021A		                        call Ghost2WallChecker
 00002665  EB 30		                        jmp MovementChecker
 00002667  BE 00000DF4 R	        l2_r19_Handle:  mov esi,offset l2_r19
 0000266C  E8 0000020E		                        call Ghost2WallChecker
 00002671  EB 24		                        jmp MovementChecker
 00002673  BE 00000E27 R	        l2_r20_Handle:  mov esi,offset l2_r20
 00002678  E8 00000202		                        call Ghost2WallChecker
 0000267D  EB 18		                        jmp MovementChecker
 0000267F  BE 00000E5A R	        l2_r21_Handle:  mov esi,offset l2_r21
 00002684  E8 000001F6		                        call Ghost2WallChecker
 00002689  EB 0C		                        jmp MovementChecker
 0000268B  BE 00000E8D R	        l2_r22_Handle:  mov esi,offset l2_r22
 00002690  E8 000001EA		                        call Ghost2WallChecker
 00002695  EB 00		                        jmp MovementChecker
 00002697			        MovementChecker:
 00002697  C3			    ret
 00002698			Level2MovementUpGhost2 ENDP  
 00002698			Level2MovementDownGhost2 PROC   

 00002698  80 FF 00		        cmp bh,0
 0000269B  0F 84 000000B4	        je l2_r01_Handle  
 000026A1  80 FF 01		        cmp bh,1
 000026A4  0F 84 000000BA	        je l2_r02_Handle
 000026AA  80 FF 02		        cmp bh,2
 000026AD  0F 84 000000C0	        je l2_r03_Handle
 000026B3  80 FF 03		        cmp bh,3
 000026B6  0F 84 000000C6	        je l2_r04_Handle
 000026BC  80 FF 04		        cmp bh,4
 000026BF  0F 84 000000CC	        je l2_r05_Handle
 000026C5  80 FF 05		        cmp bh,5
 000026C8  0F 84 000000D2	        je l2_r06_Handle
 000026CE  80 FF 06		        cmp bh,6
 000026D1  0F 84 000000D8	        je l2_r07_Handle
 000026D7  80 FF 07		        cmp bh,7
 000026DA  0F 84 000000DE	        je l2_r08_Handle
 000026E0  80 FF 08		        cmp bh,8
 000026E3  0F 84 000000E4	        je l2_r09_Handle
 000026E9  80 FF 09		        cmp bh,9
 000026EC  0F 84 000000EA	        je l2_r10_Handle
 000026F2  80 FF 0A		        cmp bh,10
 000026F5  0F 84 000000F0	        je l2_r11_Handle
 000026FB  80 FF 0B		        cmp bh,11
 000026FE  0F 84 000000F6	        je l2_r12_Handle
 00002704  80 FF 0C		        cmp bh,12
 00002707  0F 84 000000F9	        je l2_r13_Handle
 0000270D  80 FF 0D		        cmp bh,13
 00002710  0F 84 000000FC	        je l2_r14_Handle
 00002716  80 FF 0E		        cmp bh,14
 00002719  0F 84 000000FF	        je l2_r15_Handle
 0000271F  80 FF 0F		        cmp bh,15
 00002722  0F 84 00000102	        je l2_r16_Handle
 00002728  80 FF 10		        cmp bh,16
 0000272B  0F 84 00000105	        je l2_r17_Handle
 00002731  80 FF 11		        cmp bh,17
 00002734  0F 84 00000108	        je l2_r18_Handle
 0000273A  80 FF 12		        cmp bh,18
 0000273D  0F 84 0000010B	        je l2_r19_Handle
 00002743  80 FF 13		        cmp bh,19
 00002746  0F 84 0000010E	        je l2_r20_Handle
 0000274C  80 FF 14		        cmp bh,20
 0000274F  0F 84 00000111	        je l2_r21_Handle

 00002755  BE 00000A5E R	        l2_r01_Handle:  mov esi,offset l2_r01
 0000275A  E8 00000120		                        call Ghost2WallChecker
 0000275F  E9 0000011A		                        jmp MovementChecker            
 00002764  BE 00000A91 R	        l2_r02_Handle:  mov esi,offset l2_r02
 00002769  E8 00000111		                        call Ghost2WallChecker
 0000276E  E9 0000010B		                        jmp MovementChecker
 00002773  BE 00000AC4 R	        l2_r03_Handle:  mov esi,offset l2_r03
 00002778  E8 00000102		                        call Ghost2WallChecker
 0000277D  E9 000000FC		                        jmp MovementChecker
 00002782  BE 00000AF7 R	        l2_r04_Handle:  mov esi,offset l2_r04
 00002787  E8 000000F3		                        call Ghost2WallChecker
 0000278C  E9 000000ED		                        jmp MovementChecker
 00002791  BE 00000B2A R	        l2_r05_Handle:  mov esi,offset l2_r05
 00002796  E8 000000E4		                        call Ghost2WallChecker
 0000279B  E9 000000DE		                        jmp MovementChecker
 000027A0  BE 00000B5D R	        l2_r06_Handle:  mov esi,offset l2_r06
 000027A5  E8 000000D5		                        call Ghost2WallChecker
 000027AA  E9 000000CF		                        jmp MovementChecker
 000027AF  BE 00000B90 R	        l2_r07_Handle:  mov esi,offset l2_r07
 000027B4  E8 000000C6		                        call Ghost2WallChecker
 000027B9  E9 000000C0		                        jmp MovementChecker
 000027BE  BE 00000BC3 R	        l2_r08_Handle:  mov esi,offset l2_r08
 000027C3  E8 000000B7		                        call Ghost2WallChecker
 000027C8  E9 000000B1		                        jmp MovementChecker
 000027CD  BE 00000BF6 R	        l2_r09_Handle:  mov esi,offset l2_r09
 000027D2  E8 000000A8		                        call Ghost2WallChecker
 000027D7  E9 000000A2		                        jmp MovementChecker
 000027DC  BE 00000C29 R	        l2_r10_Handle:  mov esi,offset l2_r10
 000027E1  E8 00000099		                        call Ghost2WallChecker
 000027E6  E9 00000093		                        jmp MovementChecker
 000027EB  BE 00000C5C R	        l2_r11_Handle:  mov esi,offset l2_r11
 000027F0  E8 0000008A		                        call Ghost2WallChecker
 000027F5  E9 00000084		                        jmp MovementChecker
 000027FA  BE 00000C8F R	        l2_r12_Handle:  mov esi,offset l2_r12
 000027FF  E8 0000007B		                        call Ghost2WallChecker
 00002804  EB 78		                        jmp MovementChecker
 00002806  BE 00000CC2 R	        l2_r13_Handle:  mov esi,offset l2_r13
 0000280B  E8 0000006F		                        call Ghost2WallChecker
 00002810  EB 6C		                        jmp MovementChecker
 00002812  BE 00000CF5 R	        l2_r14_Handle:  mov esi,offset l2_r14
 00002817  E8 00000063		                        call Ghost2WallChecker
 0000281C  EB 60		                        jmp MovementChecker
 0000281E  BE 00000D28 R	        l2_r15_Handle:  mov esi,offset l2_r15
 00002823  E8 00000057		                        call Ghost2WallChecker
 00002828  EB 54		                        jmp MovementChecker
 0000282A  BE 00000D5B R	        l2_r16_Handle:  mov esi,offset l2_r16
 0000282F  E8 0000004B		                        call Ghost2WallChecker
 00002834  EB 48		                        jmp MovementChecker
 00002836  BE 00000D8E R	        l2_r17_Handle:  mov esi,offset l2_r17
 0000283B  E8 0000003F		                        call Ghost2WallChecker
 00002840  EB 3C		                        jmp MovementChecker
 00002842  BE 00000DC1 R	        l2_r18_Handle:  mov esi,offset l2_r18
 00002847  E8 00000033		                        call Ghost2WallChecker
 0000284C  EB 30		                        jmp MovementChecker
 0000284E  BE 00000DF4 R	        l2_r19_Handle:  mov esi,offset l2_r19
 00002853  E8 00000027		                        call Ghost2WallChecker
 00002858  EB 24		                        jmp MovementChecker
 0000285A  BE 00000E27 R	        l2_r20_Handle:  mov esi,offset l2_r20
 0000285F  E8 0000001B		                        call Ghost2WallChecker
 00002864  EB 18		                        jmp MovementChecker
 00002866  BE 00000E5A R	        l2_r21_Handle:  mov esi,offset l2_r21
 0000286B  E8 0000000F		                        call Ghost2WallChecker
 00002870  EB 0C		                        jmp MovementChecker
 00002872  BE 00000E8D R	        l2_r22_Handle:  mov esi,offset l2_r22
 00002877  E8 00000003		                        call Ghost2WallChecker
 0000287C  EB 00		                        jmp MovementChecker
 0000287E			        MovementChecker:
 0000287E  C3			    ret
 0000287F			Level2MovementDownGhost2 ENDP  
 0000287F			Ghost2WallChecker PROC
 0000287F  B9 00000000		    mov ecx,0
 00002884  8A CB		    mov cl,bl
 00002886			    l2loop1:
 00002886  46			    inc esi
 00002887  E2 FD		    loop l2loop1

 00002889  BA 00000000		    mov edx,0
 0000288E  8A 15 000002B1 R	    mov dl,wall
 00002894  38 16		    cmp [esi],dl
 00002896  75 07		    jne Replacer 
 00002898  C6 05 0000029C R	        mov Ghost2MovementPossibibly,0
	   00
 0000289F			    Replacer:
 0000289F			    EscapeReplacer:
 0000289F  C3			    ret
 000028A0			Ghost2WallChecker ENDP

 000028A0			Level2MovementLeftRightGhost3 PROC 

 000028A0  80 FF 01		        cmp bh,1
 000028A3  0F 84 000000B4	        je l2_r02_Handle  
 000028A9  80 FF 02		        cmp bh,2
 000028AC  0F 84 000000BA	        je l2_r03_Handle
 000028B2  80 FF 03		        cmp bh,3
 000028B5  0F 84 000000C0	        je l2_r04_Handle
 000028BB  80 FF 04		        cmp bh,4
 000028BE  0F 84 000000C6	        je l2_r05_Handle
 000028C4  80 FF 05		        cmp bh,5
 000028C7  0F 84 000000CC	        je l2_r06_Handle
 000028CD  80 FF 06		        cmp bh,6
 000028D0  0F 84 000000D2	        je l2_r07_Handle
 000028D6  80 FF 07		        cmp bh,7
 000028D9  0F 84 000000D8	        je l2_r08_Handle
 000028DF  80 FF 08		        cmp bh,8
 000028E2  0F 84 000000DE	        je l2_r09_Handle
 000028E8  80 FF 09		        cmp bh,9
 000028EB  0F 84 000000E4	        je l2_r10_Handle
 000028F1  80 FF 0A		        cmp bh,10
 000028F4  0F 84 000000EA	        je l2_r11_Handle
 000028FA  80 FF 0B		        cmp bh,11
 000028FD  0F 84 000000F0	        je l2_r12_Handle
 00002903  80 FF 0C		        cmp bh,12
 00002906  0F 84 000000F3	        je l2_r13_Handle
 0000290C  80 FF 0D		        cmp bh,13
 0000290F  0F 84 000000F6	        je l2_r14_Handle
 00002915  80 FF 0E		        cmp bh,14
 00002918  0F 84 000000F9	        je l2_r15_Handle
 0000291E  80 FF 0F		        cmp bh,15
 00002921  0F 84 000000FC	        je l2_r16_Handle
 00002927  80 FF 10		        cmp bh,16
 0000292A  0F 84 000000FF	        je l2_r17_Handle
 00002930  80 FF 11		        cmp bh,17
 00002933  0F 84 00000102	        je l2_r18_Handle
 00002939  80 FF 12		        cmp bh,18
 0000293C  0F 84 00000105	        je l2_r19_Handle
 00002942  80 FF 13		        cmp bh,19
 00002945  0F 84 00000108	        je l2_r20_Handle
 0000294B  80 FF 14		        cmp bh,20
 0000294E  0F 84 0000010B	        je l2_r21_Handle
 00002954  80 FF 15		        cmp bh,21
 00002957  0F 84 0000010E	        je l2_r22_Handle
				            
 0000295D  BE 00000A91 R	        l2_r02_Handle:  mov esi,offset l2_r02
 00002962  E8 000004DF		                        call Ghost3WallChecker
 00002967  E9 0000010B		                        jmp MovementChecker
 0000296C  BE 00000AC4 R	        l2_r03_Handle:  mov esi,offset l2_r03
 00002971  E8 000004D0		                        call Ghost3WallChecker
 00002976  E9 000000FC		                        jmp MovementChecker
 0000297B  BE 00000AF7 R	        l2_r04_Handle:  mov esi,offset l2_r04
 00002980  E8 000004C1		                        call Ghost3WallChecker
 00002985  E9 000000ED		                        jmp MovementChecker
 0000298A  BE 00000B2A R	        l2_r05_Handle:  mov esi,offset l2_r05
 0000298F  E8 000004B2		                        call Ghost3WallChecker
 00002994  E9 000000DE		                        jmp MovementChecker
 00002999  BE 00000B5D R	        l2_r06_Handle:  mov esi,offset l2_r06
 0000299E  E8 000004A3		                        call Ghost3WallChecker
 000029A3  E9 000000CF		                        jmp MovementChecker
 000029A8  BE 00000B90 R	        l2_r07_Handle:  mov esi,offset l2_r07
 000029AD  E8 00000494		                        call Ghost3WallChecker
 000029B2  E9 000000C0		                        jmp MovementChecker
 000029B7  BE 00000BC3 R	        l2_r08_Handle:  mov esi,offset l2_r08
 000029BC  E8 00000485		                        call Ghost3WallChecker
 000029C1  E9 000000B1		                        jmp MovementChecker
 000029C6  BE 00000BF6 R	        l2_r09_Handle:  mov esi,offset l2_r09
 000029CB  E8 00000476		                        call Ghost3WallChecker
 000029D0  E9 000000A2		                        jmp MovementChecker
 000029D5  BE 00000C29 R	        l2_r10_Handle:  mov esi,offset l2_r10
 000029DA  E8 00000467		                        call Ghost3WallChecker
 000029DF  E9 00000093		                        jmp MovementChecker
 000029E4  BE 00000C5C R	        l2_r11_Handle:  mov esi,offset l2_r11
 000029E9  E8 00000458		                        call Ghost3WallChecker
 000029EE  E9 00000084		                        jmp MovementChecker
 000029F3  BE 00000C8F R	        l2_r12_Handle:  mov esi,offset l2_r12
 000029F8  E8 00000449		                        call Ghost3WallChecker
 000029FD  EB 78		                        jmp MovementChecker
 000029FF  BE 00000CC2 R	        l2_r13_Handle:  mov esi,offset l2_r13
 00002A04  E8 0000043D		                        call Ghost3WallChecker
 00002A09  EB 6C		                        jmp MovementChecker
 00002A0B  BE 00000CF5 R	        l2_r14_Handle:  mov esi,offset l2_r14
 00002A10  E8 00000431		                        call Ghost3WallChecker
 00002A15  EB 60		                        jmp MovementChecker
 00002A17  BE 00000D28 R	        l2_r15_Handle:  mov esi,offset l2_r15
 00002A1C  E8 00000425		                        call Ghost3WallChecker
 00002A21  EB 54		                        jmp MovementChecker
 00002A23  BE 00000D5B R	        l2_r16_Handle:  mov esi,offset l2_r16
 00002A28  E8 00000419		                        call Ghost3WallChecker
 00002A2D  EB 48		                        jmp MovementChecker
 00002A2F  BE 00000D8E R	        l2_r17_Handle:  mov esi,offset l2_r17
 00002A34  E8 0000040D		                        call Ghost3WallChecker
 00002A39  EB 3C		                        jmp MovementChecker
 00002A3B  BE 00000DC1 R	        l2_r18_Handle:  mov esi,offset l2_r18
 00002A40  E8 00000401		                        call Ghost3WallChecker
 00002A45  EB 30		                        jmp MovementChecker
 00002A47  BE 00000DF4 R	        l2_r19_Handle:  mov esi,offset l2_r19
 00002A4C  E8 000003F5		                        call Ghost3WallChecker
 00002A51  EB 24		                        jmp MovementChecker
 00002A53  BE 00000E27 R	        l2_r20_Handle:  mov esi,offset l2_r20
 00002A58  E8 000003E9		                        call Ghost3WallChecker
 00002A5D  EB 18		                        jmp MovementChecker
 00002A5F  BE 00000E5A R	        l2_r21_Handle:  mov esi,offset l2_r21
 00002A64  E8 000003DD		                        call Ghost3WallChecker
 00002A69  EB 0C		                        jmp MovementChecker
 00002A6B  BE 00000E8D R	        l2_r22_Handle:  mov esi,offset l2_r22
 00002A70  E8 000003D1		                        call Ghost3WallChecker
 00002A75  EB 00		                        jmp MovementChecker

 00002A77			        MovementChecker:
 00002A77  C3			    ret
 00002A78			Level2MovementLeftRightGhost3 ENDP    
 00002A78			Level2MovementUpGhost3 PROC   

 00002A78  80 FF 00		        cmp bh,0
 00002A7B  0F 84 000000B4	        je l2_r01_Handle  
 00002A81  80 FF 01		        cmp bh,1
 00002A84  0F 84 000000BA	        je l2_r02_Handle
 00002A8A  80 FF 02		        cmp bh,2
 00002A8D  0F 84 000000C0	        je l2_r03_Handle
 00002A93  80 FF 03		        cmp bh,3
 00002A96  0F 84 000000C6	        je l2_r04_Handle
 00002A9C  80 FF 04		        cmp bh,4
 00002A9F  0F 84 000000CC	        je l2_r05_Handle
 00002AA5  80 FF 05		        cmp bh,5
 00002AA8  0F 84 000000D2	        je l2_r06_Handle
 00002AAE  80 FF 06		        cmp bh,6
 00002AB1  0F 84 000000D8	        je l2_r07_Handle
 00002AB7  80 FF 07		        cmp bh,7
 00002ABA  0F 84 000000DE	        je l2_r08_Handle
 00002AC0  80 FF 08		        cmp bh,8
 00002AC3  0F 84 000000E4	        je l2_r09_Handle
 00002AC9  80 FF 09		        cmp bh,9
 00002ACC  0F 84 000000EA	        je l2_r10_Handle
 00002AD2  80 FF 0A		        cmp bh,10
 00002AD5  0F 84 000000F0	        je l2_r11_Handle
 00002ADB  80 FF 0B		        cmp bh,11
 00002ADE  0F 84 000000F6	        je l2_r12_Handle
 00002AE4  80 FF 0C		        cmp bh,12
 00002AE7  0F 84 000000F9	        je l2_r13_Handle
 00002AED  80 FF 0D		        cmp bh,13
 00002AF0  0F 84 000000FC	        je l2_r14_Handle
 00002AF6  80 FF 0E		        cmp bh,14
 00002AF9  0F 84 000000FF	        je l2_r15_Handle
 00002AFF  80 FF 0F		        cmp bh,15
 00002B02  0F 84 00000102	        je l2_r16_Handle
 00002B08  80 FF 10		        cmp bh,16
 00002B0B  0F 84 00000105	        je l2_r17_Handle
 00002B11  80 FF 11		        cmp bh,17
 00002B14  0F 84 00000108	        je l2_r18_Handle
 00002B1A  80 FF 12		        cmp bh,18
 00002B1D  0F 84 0000010B	        je l2_r19_Handle
 00002B23  80 FF 13		        cmp bh,19
 00002B26  0F 84 0000010E	        je l2_r20_Handle
 00002B2C  80 FF 14		        cmp bh,20
 00002B2F  0F 84 00000111	        je l2_r21_Handle

 00002B35  BE 00000A5E R	        l2_r01_Handle:  mov esi,offset l2_r01
 00002B3A  E8 00000307		                        call Ghost3WallChecker
 00002B3F  E9 0000011A		                        jmp MovementChecker            
 00002B44  BE 00000A91 R	        l2_r02_Handle:  mov esi,offset l2_r02
 00002B49  E8 000002F8		                        call Ghost3WallChecker
 00002B4E  E9 0000010B		                        jmp MovementChecker
 00002B53  BE 00000AC4 R	        l2_r03_Handle:  mov esi,offset l2_r03
 00002B58  E8 000002E9		                        call Ghost3WallChecker
 00002B5D  E9 000000FC		                        jmp MovementChecker
 00002B62  BE 00000AF7 R	        l2_r04_Handle:  mov esi,offset l2_r04
 00002B67  E8 000002DA		                        call Ghost3WallChecker
 00002B6C  E9 000000ED		                        jmp MovementChecker
 00002B71  BE 00000B2A R	        l2_r05_Handle:  mov esi,offset l2_r05
 00002B76  E8 000002CB		                        call Ghost3WallChecker
 00002B7B  E9 000000DE		                        jmp MovementChecker
 00002B80  BE 00000B5D R	        l2_r06_Handle:  mov esi,offset l2_r06
 00002B85  E8 000002BC		                        call Ghost3WallChecker
 00002B8A  E9 000000CF		                        jmp MovementChecker
 00002B8F  BE 00000B90 R	        l2_r07_Handle:  mov esi,offset l2_r07
 00002B94  E8 000002AD		                        call Ghost3WallChecker
 00002B99  E9 000000C0		                        jmp MovementChecker
 00002B9E  BE 00000BC3 R	        l2_r08_Handle:  mov esi,offset l2_r08
 00002BA3  E8 0000029E		                        call Ghost3WallChecker
 00002BA8  E9 000000B1		                        jmp MovementChecker
 00002BAD  BE 00000BF6 R	        l2_r09_Handle:  mov esi,offset l2_r09
 00002BB2  E8 0000028F		                        call Ghost3WallChecker
 00002BB7  E9 000000A2		                        jmp MovementChecker
 00002BBC  BE 00000C29 R	        l2_r10_Handle:  mov esi,offset l2_r10
 00002BC1  E8 00000280		                        call Ghost3WallChecker
 00002BC6  E9 00000093		                        jmp MovementChecker
 00002BCB  BE 00000C5C R	        l2_r11_Handle:  mov esi,offset l2_r11
 00002BD0  E8 00000271		                        call Ghost3WallChecker
 00002BD5  E9 00000084		                        jmp MovementChecker
 00002BDA  BE 00000C8F R	        l2_r12_Handle:  mov esi,offset l2_r12
 00002BDF  E8 00000262		                        call Ghost3WallChecker
 00002BE4  EB 78		                        jmp MovementChecker
 00002BE6  BE 00000CC2 R	        l2_r13_Handle:  mov esi,offset l2_r13
 00002BEB  E8 00000256		                        call Ghost3WallChecker
 00002BF0  EB 6C		                        jmp MovementChecker
 00002BF2  BE 00000CF5 R	        l2_r14_Handle:  mov esi,offset l2_r14
 00002BF7  E8 0000024A		                        call Ghost3WallChecker
 00002BFC  EB 60		                        jmp MovementChecker
 00002BFE  BE 00000D28 R	        l2_r15_Handle:  mov esi,offset l2_r15
 00002C03  E8 0000023E		                        call Ghost3WallChecker
 00002C08  EB 54		                        jmp MovementChecker
 00002C0A  BE 00000D5B R	        l2_r16_Handle:  mov esi,offset l2_r16
 00002C0F  E8 00000232		                        call Ghost3WallChecker
 00002C14  EB 48		                        jmp MovementChecker
 00002C16  BE 00000D8E R	        l2_r17_Handle:  mov esi,offset l2_r17
 00002C1B  E8 00000226		                        call Ghost3WallChecker
 00002C20  EB 3C		                        jmp MovementChecker
 00002C22  BE 00000DC1 R	        l2_r18_Handle:  mov esi,offset l2_r18
 00002C27  E8 0000021A		                        call Ghost3WallChecker
 00002C2C  EB 30		                        jmp MovementChecker
 00002C2E  BE 00000DF4 R	        l2_r19_Handle:  mov esi,offset l2_r19
 00002C33  E8 0000020E		                        call Ghost3WallChecker
 00002C38  EB 24		                        jmp MovementChecker
 00002C3A  BE 00000E27 R	        l2_r20_Handle:  mov esi,offset l2_r20
 00002C3F  E8 00000202		                        call Ghost3WallChecker
 00002C44  EB 18		                        jmp MovementChecker
 00002C46  BE 00000E5A R	        l2_r21_Handle:  mov esi,offset l2_r21
 00002C4B  E8 000001F6		                        call Ghost3WallChecker
 00002C50  EB 0C		                        jmp MovementChecker
 00002C52  BE 00000E8D R	        l2_r22_Handle:  mov esi,offset l2_r22
 00002C57  E8 000001EA		                        call Ghost3WallChecker
 00002C5C  EB 00		                        jmp MovementChecker
 00002C5E			        MovementChecker:
 00002C5E  C3			    ret
 00002C5F			Level2MovementUpGhost3 ENDP  
 00002C5F			Level2MovementDownGhost3 PROC   

 00002C5F  80 FF 00		        cmp bh,0
 00002C62  0F 84 000000B4	        je l2_r01_Handle  
 00002C68  80 FF 01		        cmp bh,1
 00002C6B  0F 84 000000BA	        je l2_r02_Handle
 00002C71  80 FF 02		        cmp bh,2
 00002C74  0F 84 000000C0	        je l2_r03_Handle
 00002C7A  80 FF 03		        cmp bh,3
 00002C7D  0F 84 000000C6	        je l2_r04_Handle
 00002C83  80 FF 04		        cmp bh,4
 00002C86  0F 84 000000CC	        je l2_r05_Handle
 00002C8C  80 FF 05		        cmp bh,5
 00002C8F  0F 84 000000D2	        je l2_r06_Handle
 00002C95  80 FF 06		        cmp bh,6
 00002C98  0F 84 000000D8	        je l2_r07_Handle
 00002C9E  80 FF 07		        cmp bh,7
 00002CA1  0F 84 000000DE	        je l2_r08_Handle
 00002CA7  80 FF 08		        cmp bh,8
 00002CAA  0F 84 000000E4	        je l2_r09_Handle
 00002CB0  80 FF 09		        cmp bh,9
 00002CB3  0F 84 000000EA	        je l2_r10_Handle
 00002CB9  80 FF 0A		        cmp bh,10
 00002CBC  0F 84 000000F0	        je l2_r11_Handle
 00002CC2  80 FF 0B		        cmp bh,11
 00002CC5  0F 84 000000F6	        je l2_r12_Handle
 00002CCB  80 FF 0C		        cmp bh,12
 00002CCE  0F 84 000000F9	        je l2_r13_Handle
 00002CD4  80 FF 0D		        cmp bh,13
 00002CD7  0F 84 000000FC	        je l2_r14_Handle
 00002CDD  80 FF 0E		        cmp bh,14
 00002CE0  0F 84 000000FF	        je l2_r15_Handle
 00002CE6  80 FF 0F		        cmp bh,15
 00002CE9  0F 84 00000102	        je l2_r16_Handle
 00002CEF  80 FF 10		        cmp bh,16
 00002CF2  0F 84 00000105	        je l2_r17_Handle
 00002CF8  80 FF 11		        cmp bh,17
 00002CFB  0F 84 00000108	        je l2_r18_Handle
 00002D01  80 FF 12		        cmp bh,18
 00002D04  0F 84 0000010B	        je l2_r19_Handle
 00002D0A  80 FF 13		        cmp bh,19
 00002D0D  0F 84 0000010E	        je l2_r20_Handle
 00002D13  80 FF 14		        cmp bh,20
 00002D16  0F 84 00000111	        je l2_r21_Handle

 00002D1C  BE 00000A5E R	        l2_r01_Handle:  mov esi,offset l2_r01
 00002D21  E8 00000120		                        call Ghost3WallChecker
 00002D26  E9 0000011A		                        jmp MovementChecker            
 00002D2B  BE 00000A91 R	        l2_r02_Handle:  mov esi,offset l2_r02
 00002D30  E8 00000111		                        call Ghost3WallChecker
 00002D35  E9 0000010B		                        jmp MovementChecker
 00002D3A  BE 00000AC4 R	        l2_r03_Handle:  mov esi,offset l2_r03
 00002D3F  E8 00000102		                        call Ghost3WallChecker
 00002D44  E9 000000FC		                        jmp MovementChecker
 00002D49  BE 00000AF7 R	        l2_r04_Handle:  mov esi,offset l2_r04
 00002D4E  E8 000000F3		                        call Ghost3WallChecker
 00002D53  E9 000000ED		                        jmp MovementChecker
 00002D58  BE 00000B2A R	        l2_r05_Handle:  mov esi,offset l2_r05
 00002D5D  E8 000000E4		                        call Ghost3WallChecker
 00002D62  E9 000000DE		                        jmp MovementChecker
 00002D67  BE 00000B5D R	        l2_r06_Handle:  mov esi,offset l2_r06
 00002D6C  E8 000000D5		                        call Ghost3WallChecker
 00002D71  E9 000000CF		                        jmp MovementChecker
 00002D76  BE 00000B90 R	        l2_r07_Handle:  mov esi,offset l2_r07
 00002D7B  E8 000000C6		                        call Ghost3WallChecker
 00002D80  E9 000000C0		                        jmp MovementChecker
 00002D85  BE 00000BC3 R	        l2_r08_Handle:  mov esi,offset l2_r08
 00002D8A  E8 000000B7		                        call Ghost3WallChecker
 00002D8F  E9 000000B1		                        jmp MovementChecker
 00002D94  BE 00000BF6 R	        l2_r09_Handle:  mov esi,offset l2_r09
 00002D99  E8 000000A8		                        call Ghost3WallChecker
 00002D9E  E9 000000A2		                        jmp MovementChecker
 00002DA3  BE 00000C29 R	        l2_r10_Handle:  mov esi,offset l2_r10
 00002DA8  E8 00000099		                        call Ghost3WallChecker
 00002DAD  E9 00000093		                        jmp MovementChecker
 00002DB2  BE 00000C5C R	        l2_r11_Handle:  mov esi,offset l2_r11
 00002DB7  E8 0000008A		                        call Ghost3WallChecker
 00002DBC  E9 00000084		                        jmp MovementChecker
 00002DC1  BE 00000C8F R	        l2_r12_Handle:  mov esi,offset l2_r12
 00002DC6  E8 0000007B		                        call Ghost3WallChecker
 00002DCB  EB 78		                        jmp MovementChecker
 00002DCD  BE 00000CC2 R	        l2_r13_Handle:  mov esi,offset l2_r13
 00002DD2  E8 0000006F		                        call Ghost3WallChecker
 00002DD7  EB 6C		                        jmp MovementChecker
 00002DD9  BE 00000CF5 R	        l2_r14_Handle:  mov esi,offset l2_r14
 00002DDE  E8 00000063		                        call Ghost3WallChecker
 00002DE3  EB 60		                        jmp MovementChecker
 00002DE5  BE 00000D28 R	        l2_r15_Handle:  mov esi,offset l2_r15
 00002DEA  E8 00000057		                        call Ghost3WallChecker
 00002DEF  EB 54		                        jmp MovementChecker
 00002DF1  BE 00000D5B R	        l2_r16_Handle:  mov esi,offset l2_r16
 00002DF6  E8 0000004B		                        call Ghost3WallChecker
 00002DFB  EB 48		                        jmp MovementChecker
 00002DFD  BE 00000D8E R	        l2_r17_Handle:  mov esi,offset l2_r17
 00002E02  E8 0000003F		                        call Ghost3WallChecker
 00002E07  EB 3C		                        jmp MovementChecker
 00002E09  BE 00000DC1 R	        l2_r18_Handle:  mov esi,offset l2_r18
 00002E0E  E8 00000033		                        call Ghost3WallChecker
 00002E13  EB 30		                        jmp MovementChecker
 00002E15  BE 00000DF4 R	        l2_r19_Handle:  mov esi,offset l2_r19
 00002E1A  E8 00000027		                        call Ghost3WallChecker
 00002E1F  EB 24		                        jmp MovementChecker
 00002E21  BE 00000E27 R	        l2_r20_Handle:  mov esi,offset l2_r20
 00002E26  E8 0000001B		                        call Ghost3WallChecker
 00002E2B  EB 18		                        jmp MovementChecker
 00002E2D  BE 00000E5A R	        l2_r21_Handle:  mov esi,offset l2_r21
 00002E32  E8 0000000F		                        call Ghost3WallChecker
 00002E37  EB 0C		                        jmp MovementChecker
 00002E39  BE 00000E8D R	        l2_r22_Handle:  mov esi,offset l2_r22
 00002E3E  E8 00000003		                        call Ghost3WallChecker
 00002E43  EB 00		                        jmp MovementChecker
 00002E45			        MovementChecker:
 00002E45  C3			    ret
 00002E46			Level2MovementDownGhost3 ENDP  
 00002E46			Ghost3WallChecker PROC
 00002E46  B9 00000000		    mov ecx,0
 00002E4B  8A CB		    mov cl,bl
 00002E4D			    l2loop1:
 00002E4D  46			    inc esi
 00002E4E  E2 FD		    loop l2loop1

 00002E50  BA 00000000		    mov edx,0
 00002E55  8A 15 000002B1 R	    mov dl,wall
 00002E5B  38 16		    cmp [esi],dl
 00002E5D  75 07		    jne Replacer 
 00002E5F  C6 05 0000029E R	        mov Ghost3MovementPossibibly,0
	   00
 00002E66			    Replacer:
 00002E66			    EscapeReplacer:
 00002E66  C3			    ret
 00002E67			Ghost3WallChecker ENDP

				;----------------------------------------(Ghosts - Level 3)------------------------------------------
				;----------------------------------------(Ghosts - Level 2)------------------------------------------
 00002E67			GetGhostRowl3 PROC
 00002E67  80 FF 01		        cmp bh,1
 00002E6A  0F 84 000000B4	        je l3_r02_Handle  
 00002E70  80 FF 02		        cmp bh,2
 00002E73  0F 84 000000B5	        je l3_r03_Handle
 00002E79  80 FF 03		        cmp bh,3
 00002E7C  0F 84 000000B6	        je l3_r04_Handle
 00002E82  80 FF 04		        cmp bh,4
 00002E85  0F 84 000000B4	        je l3_r05_Handle
 00002E8B  80 FF 05		        cmp bh,5
 00002E8E  0F 84 000000B2	        je l3_r06_Handle
 00002E94  80 FF 06		        cmp bh,6
 00002E97  0F 84 000000B0	        je l3_r07_Handle
 00002E9D  80 FF 07		        cmp bh,7
 00002EA0  0F 84 000000AE	        je l3_r08_Handle
 00002EA6  80 FF 08		        cmp bh,8
 00002EA9  0F 84 000000AC	        je l3_r09_Handle
 00002EAF  80 FF 09		        cmp bh,9
 00002EB2  0F 84 000000AA	        je l3_r10_Handle
 00002EB8  80 FF 0A		        cmp bh,10
 00002EBB  0F 84 000000A8	        je l3_r11_Handle
 00002EC1  80 FF 0B		        cmp bh,11
 00002EC4  0F 84 000000A6	        je l3_r12_Handle
 00002ECA  80 FF 0C		        cmp bh,12
 00002ECD  0F 84 000000A4	        je l3_r13_Handle
 00002ED3  80 FF 0D		        cmp bh,13
 00002ED6  0F 84 000000A2	        je l3_r14_Handle
 00002EDC  80 FF 0E		        cmp bh,14
 00002EDF  0F 84 000000A0	        je l3_r15_Handle
 00002EE5  80 FF 0F		        cmp bh,15
 00002EE8  0F 84 0000009E	        je l3_r16_Handle
 00002EEE  80 FF 10		        cmp bh,16
 00002EF1  0F 84 0000009C	        je l3_r17_Handle
 00002EF7  80 FF 11		        cmp bh,17
 00002EFA  0F 84 0000009A	        je l3_r18_Handle
 00002F00  80 FF 12		        cmp bh,18
 00002F03  0F 84 00000098	        je l3_r19_Handle
 00002F09  80 FF 13		        cmp bh,19
 00002F0C  0F 84 00000096	        je l3_r20_Handle
 00002F12  80 FF 14		        cmp bh,20
 00002F15  0F 84 00000094	        je l3_r21_Handle
 00002F1B  80 FF 15		        cmp bh,21
 00002F1E  0F 84 00000092	        je l3_r22_Handle
				            
 00002F24  BE 00000F07 R	        l3_r02_Handle:  mov esi,offset l3_r02
 00002F29  E9 0000008F		                        jmp MovementChecker
 00002F2E  BE 00000F4E R	        l3_r03_Handle:  mov esi,offset l3_r03
 00002F33  E9 00000085		                        jmp MovementChecker
 00002F38  BE 00000F95 R	        l3_r04_Handle:  mov esi,offset l3_r04
 00002F3D  EB 7E		                        jmp MovementChecker
 00002F3F  BE 00000FDC R	        l3_r05_Handle:  mov esi,offset l3_r05
 00002F44  EB 77		                        jmp MovementChecker
 00002F46  BE 00001023 R	        l3_r06_Handle:  mov esi,offset l3_r06
 00002F4B  EB 70		                        jmp MovementChecker
 00002F4D  BE 0000106A R	        l3_r07_Handle:  mov esi,offset l3_r07
 00002F52  EB 69		                        jmp MovementChecker
 00002F54  BE 000010B1 R	        l3_r08_Handle:  mov esi,offset l3_r08
 00002F59  EB 62		                        jmp MovementChecker
 00002F5B  BE 000010F8 R	        l3_r09_Handle:  mov esi,offset l3_r09
 00002F60  EB 5B		                        jmp MovementChecker
 00002F62  BE 0000113F R	        l3_r10_Handle:  mov esi,offset l3_r10
 00002F67  EB 54		                        jmp MovementChecker
 00002F69  BE 00001186 R	        l3_r11_Handle:  mov esi,offset l3_r11
 00002F6E  EB 4D		                        jmp MovementChecker
 00002F70  BE 000011CD R	        l3_r12_Handle:  mov esi,offset l3_r12
 00002F75  EB 46		                        jmp MovementChecker
 00002F77  BE 00001214 R	        l3_r13_Handle:  mov esi,offset l3_r13
 00002F7C  EB 3F		                        jmp MovementChecker
 00002F7E  BE 0000125B R	        l3_r14_Handle:  mov esi,offset l3_r14
 00002F83  EB 38		                        jmp MovementChecker
 00002F85  BE 000012A2 R	        l3_r15_Handle:  mov esi,offset l3_r15
 00002F8A  EB 31		                        jmp MovementChecker
 00002F8C  BE 000012E9 R	        l3_r16_Handle:  mov esi,offset l3_r16
 00002F91  EB 2A		                        jmp MovementChecker
 00002F93  BE 00001330 R	        l3_r17_Handle:  mov esi,offset l3_r17
 00002F98  EB 23		                        jmp MovementChecker
 00002F9A  BE 00001377 R	        l3_r18_Handle:  mov esi,offset l3_r18
 00002F9F  EB 1C		                        jmp MovementChecker
 00002FA1  BE 000013BE R	        l3_r19_Handle:  mov esi,offset l3_r19
 00002FA6  EB 15		                        jmp MovementChecker
 00002FA8  BE 00001405 R	        l3_r20_Handle:  mov esi,offset l3_r20
 00002FAD  EB 0E		                        jmp MovementChecker
 00002FAF  BE 0000144C R	        l3_r21_Handle:  mov esi,offset l3_r21
 00002FB4  EB 07		                        jmp MovementChecker
 00002FB6  BE 00001493 R	        l3_r22_Handle:  mov esi,offset l3_r22
 00002FBB  EB 00		                        jmp MovementChecker
 00002FBD			        MovementChecker:
 00002FBD  C3			    ret
 00002FBE			GetGhostRowl3 ENDP 

 00002FBE			DrawGhost4 PROC 
 00002FBE  B8 00000000		    mov eax,0
 00002FC3  B0 6F		    mov al,white (110b*16)
 00002FC5  E8 00000000 E	    call SetTextColor
 00002FCA  8A 15 000002C1 R	    mov dl,xG4Pos
 00002FD0  8A 35 000002C2 R	    mov dh,yG4Pos
 00002FD6  E8 00000000 E	    call Gotoxy
 00002FDB  A0 000002B7 R	    mov al,G4
 00002FE0  E8 00000000 E	    call WriteChar
 00002FE5  B0 00		    mov al,black (black*16)
 00002FE7  E8 00000000 E	    call SetTextColor
 00002FEC  C3			    ret
 00002FED			DrawGhost4 ENDP  
 00002FED			UpdateGhost4 PROC
 00002FED  8A 15 000002C1 R	    mov dl,xG4Pos
 00002FF3  8A 35 000002C2 R	    mov dh,yG4Pos    
 00002FF9  E8 00000000 E	    call Gotoxy
 00002FFE  BB 00000000		    mov ebx,0
 00003003  8A 3D 000002C2 R	    mov bh,yG4Pos
 00003009  80 EF 06		    sub bh,6
 0000300C  8A 1D 000002C1 R	    mov bl,xG4Pos
 00003012  E8 FFFFFE50		    call GetGhostRowl3
 00003017  8A CB		    mov cl,bl

 00003019  46			    l3: inc esi
 0000301A  E2 FD		    loop l3

 0000301C  BA 00000000		    mov edx,0
 00003021  B2 2E		    mov dl,"."
 00003023  38 16		    cmp [esi],dl
 00003025  75 11		    jne next
 00003027  B8 0000000F		    mov eax,white (black*16)
 0000302C  E8 00000000 E	    call settextcolor
 00003031  B0 6F		    mov al,"o"
 00003033  E8 00000000 E	    call Writechar
 00003038			    next:
 00003038  B2 2A		    mov dl,"*"
 0000303A  38 16		    cmp [esi],dl
 0000303C  75 11		    jne skip
 0000303E  B8 0000000D		    mov eax,1101b (black*16)
 00003043  E8 00000000 E	    call settextcolor
 00003048  B0 2A		    mov al,"*"
 0000304A  E8 00000000 E	    call Writechar
 0000304F			    skip:
 0000304F  B0 20		    mov al," "
 00003051  E8 00000000 E	    call WriteChar
 00003056			    escape:      
 00003056  C3			    ret
 00003057			UpdateGhost4 ENDP  
 00003057			Ghost4Movement PROC 
 00003057  E8 00001E6A		        call Level3Intersection 

 0000305C  C6 05 000002A0 R	        mov Ghost4MovementPossibibly,1
	   01

 00003063  80 3D 0000029F R	        cmp Ghost4DirectionHandle,1
	   01
 0000306A  74 1B		        je l3moveRight
 0000306C  80 3D 0000029F R	        cmp Ghost4DirectionHandle,2
	   02
 00003073  74 36		        je l3moveLeft
 00003075  80 3D 0000029F R	        cmp Ghost4DirectionHandle,3
	   03
 0000307C  74 51		        je l3moveUp
 0000307E  80 3D 0000029F R	        cmp Ghost4DirectionHandle,4
	   04
 00003085  74 66		        je l3MoveDown

 00003087			        l3moveRight:   
 00003087  E8 FFFFFF61		            call UpdateGhost4
 0000308C  FE 05 000002C1 R	            inc xG4Pos
 00003092  FE 05 000002C1 R	            inc xG4Pos
 00003098  C6 05 0000029F R	            mov Ghost4DirectionHandle,1
	   01
 0000309F  E8 FFFFE458		            call CoordinaterUpdatorGhost4
 000030A4  E8 000005E4		            call Level3MovementLeftRightGhost4 
 000030A9  EB 60		            jmp l3SkipLeftRight

 000030AB			        l3moveLeft: 
 000030AB  E8 FFFFFF3D		            call UpdateGhost4
 000030B0  FE 0D 000002C1 R	            dec xG4Pos
 000030B6  FE 0D 000002C1 R	            dec xG4Pos
 000030BC  C6 05 0000029F R	            mov Ghost4DirectionHandle,2
	   02
 000030C3  E8 FFFFE434		            call CoordinaterUpdatorGhost4
 000030C8  E8 000005C0		            call Level3MovementLeftRightGhost4 
 000030CD  EB 3C		            jmp l3SkipLeftRight

 000030CF			        l3moveUp:
 000030CF  E8 FFFFFF19		            call UpdateGhost4
 000030D4  FE 0D 000002C2 R	            dec yG4Pos
 000030DA  C6 05 0000029F R	            mov Ghost4DirectionHandle,3
	   03
 000030E1  E8 FFFFE416		            call CoordinaterUpdatorGhost4
 000030E6  E8 0000077A		            call Level3MovementUpGhost4
 000030EB  EB 1E		            jmp l3SkipLeftRight

 000030ED			        l3MoveDown:
 000030ED  E8 FFFFFEFB		            call UpdateGhost4
 000030F2  FE 05 000002C2 R	            inc yG4Pos
 000030F8  C6 05 0000029F R	            mov Ghost4DirectionHandle,4
	   04
 000030FF  E8 FFFFE3F8		            call CoordinaterUpdatorGhost4
 00003104  E8 00000943		            call Level3MovementDownGhost4
 00003109  EB 00		            jmp l3SkipLeftRight

 0000310B			        l3SkipLeftRight:      

 0000310B  80 3D 000002A0 R	        cmp Ghost4MovementPossibibly,0
	   00
 00003112  74 02		        je GhostMovementFixer
 00003114  EB 60		        jmp SkipMovementFixer

 00003116			        GhostMovementFixer:
 00003116  80 3D 0000029F R	        cmp Ghost4DirectionHandle,1
	   01
 0000311D  74 1D		        je RightFixer
 0000311F  80 3D 0000029F R	        cmp Ghost4DirectionHandle,2
	   02
 00003126  74 22		        je LeftFixer
 00003128  80 3D 0000029F R	        cmp Ghost4DirectionHandle,3
	   03
 0000312F  74 27		        je UpFixer
 00003131  80 3D 0000029F R	        cmp Ghost4DirectionHandle,4
	   04
 00003138  74 26		        je DownFixer
 0000313A  EB 3A		        jmp SkipMovementFixer

 0000313C  FE 0D 000002C1 R	        RightFixer: dec xG4Pos
 00003142  FE 0D 000002C1 R	                    dec xG4Pos
 00003148  EB 1C		                    jmp NewDirector
 0000314A  FE 05 000002C1 R	        LeftFixer:  inc xG4Pos
 00003150  FE 05 000002C1 R	                    inc xG4Pos
 00003156  EB 0E		                    jmp NewDirector
 00003158  FE 05 000002C2 R	        UpFixer:    inc yG4Pos
 0000315E  EB 06		                    jmp NewDirector
 00003160  FE 0D 000002C2 R	        DownFixer:  dec yG4Pos

 00003166			        NewDirector:
 00003166  B8 00000004		        mov  eax,4     ;get random 0 to 99
 0000316B  E8 00000000 E	        call RandomRange ;
 00003170  40			        inc  eax         ;make range 1 to 100
 00003171  A2 0000029F R	        mov  Ghost4DirectionHandle,al  ;save random number
 00003176			        SkipMovementFixer:

 00003176  C3			    ret
 00003177			Ghost4Movement ENDP 

 00003177			DrawGhost5 PROC 
 00003177  B8 00000000		    mov eax,0
 0000317C  B0 BF		    mov al,white (1011b * 16)
 0000317E  E8 00000000 E	    call SetTextColor
 00003183  8A 15 000002C3 R	    mov dl,xG5Pos
 00003189  8A 35 000002C4 R	    mov dh,yG5Pos
 0000318F  E8 00000000 E	    call Gotoxy
 00003194  A0 000002B8 R	    mov al,G5
 00003199  E8 00000000 E	    call WriteChar
 0000319E  C3			    ret
 0000319F			DrawGhost5 ENDP  
 0000319F			UpdateGhost5 PROC
 0000319F  8A 15 000002C3 R	    mov dl,xG5Pos
 000031A5  8A 35 000002C4 R	    mov dh,yG5Pos    
 000031AB  E8 00000000 E	    call Gotoxy
 000031B0  BB 00000000		    mov ebx,0
 000031B5  8A 3D 000002C4 R	    mov bh,yG5Pos
 000031BB  80 EF 06		    sub bh,6
 000031BE  8A 1D 000002C3 R	    mov bl,xG5Pos
 000031C4  E8 FFFFFC9E		    call GetGhostRowl3
 000031C9  8A CB		    mov cl,bl

 000031CB  46			    l3: inc esi
 000031CC  E2 FD		    loop l3

 000031CE  BA 00000000		    mov edx,0
 000031D3  B2 2E		    mov dl,"."
 000031D5  38 16		    cmp [esi],dl
 000031D7  75 11		    jne next
 000031D9  B8 0000000F		    mov eax,white (black*16)
 000031DE  E8 00000000 E	    call settextcolor
 000031E3  B0 6F		    mov al,"o"
 000031E5  E8 00000000 E	    call Writechar
 000031EA			    next:
 000031EA  B2 2A		    mov dl,"*"
 000031EC  38 16		    cmp [esi],dl
 000031EE  75 11		    jne skip
 000031F0  B8 0000000D		    mov eax,1101b (black*16)
 000031F5  E8 00000000 E	    call settextcolor
 000031FA  B0 2A		    mov al,"*"
 000031FC  E8 00000000 E	    call Writechar
 00003201			    skip:
 00003201  B0 20		    mov al," "
 00003203  E8 00000000 E	    call WriteChar
 00003208			    escape:      
 00003208  C3			    ret
 00003209			UpdateGhost5 ENDP  
 00003209			Ghost5Movement PROC 
 00003209  E8 00001CB8		        call Level3Intersection 

 0000320E  C6 05 000002A2 R	        mov Ghost5MovementPossibibly,1
	   01

 00003215  80 3D 000002A1 R	        cmp Ghost5DirectionHandle,1
	   01
 0000321C  74 1B		        je l3moveRight
 0000321E  80 3D 000002A1 R	        cmp Ghost5DirectionHandle,2
	   02
 00003225  74 36		        je l3moveLeft
 00003227  80 3D 000002A1 R	        cmp Ghost5DirectionHandle,3
	   03
 0000322E  74 51		        je l3moveUp
 00003230  80 3D 000002A1 R	        cmp Ghost5DirectionHandle,4
	   04
 00003237  74 66		        je l3MoveDown

 00003239			        l3moveRight:   
 00003239  E8 FFFFFF61		            call UpdateGhost5
 0000323E  FE 05 000002C3 R	            inc xG5Pos
 00003244  FE 05 000002C3 R	            inc xG5Pos
 0000324A  C6 05 000002A1 R	            mov Ghost5DirectionHandle,1
	   01
 00003251  E8 FFFFE2BB		            call CoordinaterUpdatorGhost5
 00003256  E8 000009F9		            call Level3MovementLeftRightGhost5 
 0000325B  EB 60		            jmp l3SkipLeftRight

 0000325D			        l3moveLeft: 
 0000325D  E8 FFFFFF3D		            call UpdateGhost5
 00003262  FE 0D 000002C3 R	            dec xG5Pos
 00003268  FE 0D 000002C3 R	            dec xG5Pos
 0000326E  C6 05 000002A1 R	            mov Ghost5DirectionHandle,2
	   02
 00003275  E8 FFFFE297		            call CoordinaterUpdatorGhost5
 0000327A  E8 000009D5		            call Level3MovementLeftRightGhost5 
 0000327F  EB 3C		            jmp l3SkipLeftRight

 00003281			        l3moveUp:
 00003281  E8 FFFFFF19		            call UpdateGhost5
 00003286  FE 0D 000002C4 R	            dec yG5Pos
 0000328C  C6 05 000002A1 R	            mov Ghost5DirectionHandle,3
	   03
 00003293  E8 FFFFE279		            call CoordinaterUpdatorGhost5
 00003298  E8 00000B8F		            call Level3MovementUpGhost5
 0000329D  EB 1E		            jmp l3SkipLeftRight

 0000329F			        l3MoveDown:
 0000329F  E8 FFFFFEFB		            call UpdateGhost5
 000032A4  FE 05 000002C4 R	            inc yG5Pos
 000032AA  C6 05 000002A1 R	            mov Ghost5DirectionHandle,4
	   04
 000032B1  E8 FFFFE25B		            call CoordinaterUpdatorGhost5
 000032B6  E8 00000D58		            call Level3MovementDownGhost5
 000032BB  EB 00		            jmp l3SkipLeftRight

 000032BD			        l3SkipLeftRight:      

 000032BD  80 3D 000002A2 R	        cmp Ghost5MovementPossibibly,0
	   00
 000032C4  74 02		        je GhostMovementFixer
 000032C6  EB 60		        jmp SkipMovementFixer

 000032C8			        GhostMovementFixer:
 000032C8  80 3D 000002A1 R	        cmp Ghost5DirectionHandle,1
	   01
 000032CF  74 1D		        je RightFixer
 000032D1  80 3D 000002A1 R	        cmp Ghost5DirectionHandle,2
	   02
 000032D8  74 22		        je LeftFixer
 000032DA  80 3D 000002A1 R	        cmp Ghost5DirectionHandle,3
	   03
 000032E1  74 27		        je UpFixer
 000032E3  80 3D 000002A1 R	        cmp Ghost5DirectionHandle,4
	   04
 000032EA  74 26		        je DownFixer
 000032EC  EB 3A		        jmp SkipMovementFixer

 000032EE  FE 0D 000002C3 R	        RightFixer: dec xG5Pos
 000032F4  FE 0D 000002C3 R	                    dec xG5Pos
 000032FA  EB 1C		                    jmp NewDirector
 000032FC  FE 05 000002C3 R	        LeftFixer:  inc xG5Pos
 00003302  FE 05 000002C3 R	                    inc xG5Pos
 00003308  EB 0E		                    jmp NewDirector
 0000330A  FE 05 000002C4 R	        UpFixer:    inc yG5Pos
 00003310  EB 06		                    jmp NewDirector
 00003312  FE 0D 000002C4 R	        DownFixer:  dec yG5Pos

 00003318			        NewDirector:
 00003318  B8 00000004		        mov  eax,4     ;get random 0 to 99
 0000331D  E8 00000000 E	        call RandomRange ;
 00003322  40			        inc  eax         ;make range 1 to 100
 00003323  A2 000002A1 R	        mov  Ghost5DirectionHandle,al  ;save random number
 00003328			        SkipMovementFixer:

 00003328  C3			    ret
 00003329			Ghost5Movement ENDP 

 00003329			DrawGhost6 PROC 
 00003329  B8 00000000		    mov eax,0
 0000332E  B0 CF		    mov al,white (1100b * 16)
 00003330  E8 00000000 E	    call SetTextColor
 00003335  8A 15 000002C5 R	    mov dl,xG6Pos
 0000333B  8A 35 000002C6 R	    mov dh,yG6Pos
 00003341  E8 00000000 E	    call Gotoxy
 00003346  A0 000002B9 R	    mov al,G6
 0000334B  E8 00000000 E	    call WriteChar
 00003350  C3			    ret
 00003351			DrawGhost6 ENDP  
 00003351			UpdateGhost6 PROC
 00003351  8A 15 000002C5 R	    mov dl,xG6Pos
 00003357  8A 35 000002C6 R	    mov dh,yG6Pos    
 0000335D  E8 00000000 E	    call Gotoxy
 00003362  BB 00000000		    mov ebx,0
 00003367  8A 3D 000002C6 R	    mov bh,yG6Pos
 0000336D  80 EF 06		    sub bh,6
 00003370  8A 1D 000002C5 R	    mov bl,xG6Pos
 00003376  E8 FFFFFAEC		    call GetGhostRowl3
 0000337B  8A CB		    mov cl,bl

 0000337D  46			    l3: inc esi
 0000337E  E2 FD		    loop l3

 00003380  BA 00000000		    mov edx,0
 00003385  B2 2E		    mov dl,"."
 00003387  38 16		    cmp [esi],dl
 00003389  75 11		    jne next
 0000338B  B8 0000000F		    mov eax,white (black*16)
 00003390  E8 00000000 E	    call settextcolor
 00003395  B0 6F		    mov al,"o"
 00003397  E8 00000000 E	    call Writechar
 0000339C			    next:
 0000339C  B2 2A		    mov dl,"*"
 0000339E  38 16		    cmp [esi],dl
 000033A0  75 11		    jne skip
 000033A2  B8 0000000D		    mov eax,1101b (black*16)
 000033A7  E8 00000000 E	    call settextcolor
 000033AC  B0 2A		    mov al,"*"
 000033AE  E8 00000000 E	    call Writechar
 000033B3			    skip:
 000033B3  B0 20		    mov al," "
 000033B5  E8 00000000 E	    call WriteChar
 000033BA			    escape:      
 000033BA  C3			    ret
 000033BB			UpdateGhost6 ENDP  
 000033BB			Ghost6Movement PROC 
 000033BB  E8 00001B06		        call Level3Intersection 
				    
 000033C0  C6 05 000002A4 R	        mov Ghost6MovementPossibibly,1
	   01

 000033C7  80 3D 000002A3 R	        cmp Ghost6DirectionHandle,1
	   01
 000033CE  74 1B		        je l3moveRight
 000033D0  80 3D 000002A3 R	        cmp Ghost6DirectionHandle,2
	   02
 000033D7  74 36		        je l3moveLeft
 000033D9  80 3D 000002A3 R	        cmp Ghost6DirectionHandle,3
	   03
 000033E0  74 51		        je l3moveUp
 000033E2  80 3D 000002A3 R	        cmp Ghost6DirectionHandle,4
	   04
 000033E9  74 66		        je l3MoveDown

 000033EB			        l3moveRight:   
 000033EB  E8 FFFFFF61		            call UpdateGhost6
 000033F0  FE 05 000002C5 R	            inc xG6Pos
 000033F6  FE 05 000002C5 R	            inc xG6Pos
 000033FC  C6 05 000002A3 R	            mov Ghost6DirectionHandle,1
	   01
 00003403  E8 FFFFE11E		            call CoordinaterUpdatorGhost6
 00003408  E8 00000E0E		            call Level3MovementLeftRightGhost6 
 0000340D  EB 60		            jmp l3SkipLeftRight

 0000340F			        l3moveLeft: 
 0000340F  E8 FFFFFF3D		            call UpdateGhost6
 00003414  FE 0D 000002C5 R	            dec xG6Pos
 0000341A  FE 0D 000002C5 R	            dec xG6Pos
 00003420  C6 05 000002A3 R	            mov Ghost6DirectionHandle,2
	   02
 00003427  E8 FFFFE0FA		            call CoordinaterUpdatorGhost6
 0000342C  E8 00000DEA		            call Level3MovementLeftRightGhost6 
 00003431  EB 3C		            jmp l3SkipLeftRight

 00003433			        l3moveUp:
 00003433  E8 FFFFFF19		            call UpdateGhost6
 00003438  FE 0D 000002C6 R	            dec yG6Pos
 0000343E  C6 05 000002A3 R	            mov Ghost6DirectionHandle,3
	   03
 00003445  E8 FFFFE0DC		            call CoordinaterUpdatorGhost6
 0000344A  E8 00000FA4		            call Level3MovementUpGhost6
 0000344F  EB 1E		            jmp l3SkipLeftRight

 00003451			        l3MoveDown:
 00003451  E8 FFFFFEFB		            call UpdateGhost6
 00003456  FE 05 000002C6 R	            inc yG6Pos
 0000345C  C6 05 000002A3 R	            mov Ghost6DirectionHandle,4
	   04
 00003463  E8 FFFFE0BE		            call CoordinaterUpdatorGhost6
 00003468  E8 0000116D		            call Level3MovementDownGhost6
 0000346D  EB 00		            jmp l3SkipLeftRight

 0000346F			        l3SkipLeftRight:      

 0000346F  80 3D 000002A4 R	        cmp Ghost6MovementPossibibly,0
	   00
 00003476  74 02		        je GhostMovementFixer
 00003478  EB 60		        jmp SkipMovementFixer

 0000347A			        GhostMovementFixer:
 0000347A  80 3D 000002A3 R	        cmp Ghost6DirectionHandle,1
	   01
 00003481  74 1D		        je RightFixer
 00003483  80 3D 000002A3 R	        cmp Ghost6DirectionHandle,2
	   02
 0000348A  74 22		        je LeftFixer
 0000348C  80 3D 000002A3 R	        cmp Ghost6DirectionHandle,3
	   03
 00003493  74 27		        je UpFixer
 00003495  80 3D 000002A3 R	        cmp Ghost6DirectionHandle,4
	   04
 0000349C  74 26		        je DownFixer
 0000349E  EB 3A		        jmp SkipMovementFixer

 000034A0  FE 0D 000002C5 R	        RightFixer: dec xG6Pos
 000034A6  FE 0D 000002C5 R	                    dec xG6Pos
 000034AC  EB 1C		                    jmp NewDirector
 000034AE  FE 05 000002C5 R	        LeftFixer:  inc xG6Pos
 000034B4  FE 05 000002C5 R	                    inc xG6Pos
 000034BA  EB 0E		                    jmp NewDirector
 000034BC  FE 05 000002C6 R	        UpFixer:    inc yG6Pos
 000034C2  EB 06		                    jmp NewDirector
 000034C4  FE 0D 000002C6 R	        DownFixer:  dec yG6Pos

 000034CA			        NewDirector:
 000034CA  B8 00000004		        mov  eax,4     ;get random 0 to 99
 000034CF  E8 00000000 E	        call RandomRange ;
 000034D4  40			        inc  eax         ;make range 1 to 100
 000034D5  A2 000002A3 R	        mov  Ghost6DirectionHandle,al  ;save random number
 000034DA			        SkipMovementFixer:

 000034DA  C3			    ret
 000034DB			Ghost6Movement ENDP 

 000034DB			DrawGhost7 PROC 
 000034DB  B8 00000000		    mov eax,0
 000034E0  B0 DF		    mov al,white (1101b*16)
 000034E2  E8 00000000 E	    call SetTextColor
 000034E7  8A 15 000002C7 R	    mov dl,xG7Pos
 000034ED  8A 35 000002C8 R	    mov dh,yG7Pos
 000034F3  E8 00000000 E	    call Gotoxy
 000034F8  A0 000002BA R	    mov al,G7
 000034FD  E8 00000000 E	    call WriteChar
 00003502  C3			    ret
 00003503			DrawGhost7 ENDP  
 00003503			UpdateGhost7 PROC
 00003503  8A 15 000002C7 R	    mov dl,xG7Pos
 00003509  8A 35 000002C8 R	    mov dh,yG7Pos    
 0000350F  E8 00000000 E	    call Gotoxy
 00003514  BB 00000000		    mov ebx,0
 00003519  8A 3D 000002C8 R	    mov bh,yG7Pos
 0000351F  80 EF 06		    sub bh,6
 00003522  8A 1D 000002C7 R	    mov bl,xG7Pos
 00003528  E8 FFFFF93A		    call GetGhostRowl3
 0000352D  8A CB		    mov cl,bl

 0000352F  46			    l3: inc esi
 00003530  E2 FD		    loop l3

 00003532  BA 00000000		    mov edx,0
 00003537  B2 2E		    mov dl,"."
 00003539  38 16		    cmp [esi],dl
 0000353B  75 11		    jne next
 0000353D  B8 0000000F		    mov eax,white (black*16)
 00003542  E8 00000000 E	    call settextcolor
 00003547  B0 6F		    mov al,"o"
 00003549  E8 00000000 E	    call Writechar
 0000354E			    next:
 0000354E  B2 2A		    mov dl,"*"
 00003550  38 16		    cmp [esi],dl
 00003552  75 11		    jne skip
 00003554  B8 0000000D		    mov eax,1101b (black*16)
 00003559  E8 00000000 E	    call settextcolor
 0000355E  B0 2A		    mov al,"*"
 00003560  E8 00000000 E	    call Writechar
 00003565			    skip:
 00003565  B0 20		    mov al," "
 00003567  E8 00000000 E	    call WriteChar
 0000356C			    escape:      
 0000356C  C3			    ret
 0000356D			UpdateGhost7 ENDP  
 0000356D			Ghost7Movement PROC 
 0000356D  E8 00001954		        call Level3Intersection 
				        
 00003572  C6 05 000002A6 R	        mov Ghost7MovementPossibibly,1
	   01

 00003579  80 3D 000002A5 R	        cmp Ghost7DirectionHandle,1
	   01
 00003580  74 1B		        je l3moveRight
 00003582  80 3D 000002A5 R	        cmp Ghost7DirectionHandle,2
	   02
 00003589  74 36		        je l3moveLeft
 0000358B  80 3D 000002A5 R	        cmp Ghost7DirectionHandle,3
	   03
 00003592  74 51		        je l3moveUp
 00003594  80 3D 000002A5 R	        cmp Ghost7DirectionHandle,4
	   04
 0000359B  74 66		        je l3MoveDown

 0000359D			        l3moveRight:   
 0000359D  E8 FFFFFF61		            call UpdateGhost7
 000035A2  FE 05 000002C7 R	            inc xG7Pos
 000035A8  FE 05 000002C7 R	            inc xG7Pos
 000035AE  C6 05 000002A5 R	            mov Ghost7DirectionHandle,1
	   01
 000035B5  E8 FFFFDF81		            call CoordinaterUpdatorGhost7
 000035BA  E8 00001223		            call Level3MovementLeftRightGhost7 
 000035BF  EB 60		            jmp l3SkipLeftRight

 000035C1			        l3moveLeft: 
 000035C1  E8 FFFFFF3D		            call UpdateGhost7
 000035C6  FE 0D 000002C7 R	            dec xG7Pos
 000035CC  FE 0D 000002C7 R	            dec xG7Pos
 000035D2  C6 05 000002A5 R	            mov Ghost7DirectionHandle,2
	   02
 000035D9  E8 FFFFDF5D		            call CoordinaterUpdatorGhost7
 000035DE  E8 000011FF		            call Level3MovementLeftRightGhost7 
 000035E3  EB 3C		            jmp l3SkipLeftRight

 000035E5			        l3moveUp:
 000035E5  E8 FFFFFF19		            call UpdateGhost7
 000035EA  FE 0D 000002C8 R	            dec yG7Pos
 000035F0  C6 05 000002A5 R	            mov Ghost7DirectionHandle,3
	   03
 000035F7  E8 FFFFDF3F		            call CoordinaterUpdatorGhost7
 000035FC  E8 000013B9		            call Level3MovementUpGhost7
 00003601  EB 1E		            jmp l3SkipLeftRight

 00003603			        l3MoveDown:
 00003603  E8 FFFFFEFB		            call UpdateGhost7
 00003608  FE 05 000002C8 R	            inc yG7Pos
 0000360E  C6 05 000002A5 R	            mov Ghost7DirectionHandle,4
	   04
 00003615  E8 FFFFDF21		            call CoordinaterUpdatorGhost7
 0000361A  E8 00001582		            call Level3MovementDownGhost7
 0000361F  EB 00		            jmp l3SkipLeftRight

 00003621			        l3SkipLeftRight:      

 00003621  80 3D 000002A6 R	        cmp Ghost7MovementPossibibly,0
	   00
 00003628  74 02		        je GhostMovementFixer
 0000362A  EB 60		        jmp SkipMovementFixer

 0000362C			        GhostMovementFixer:
 0000362C  80 3D 000002A5 R	        cmp Ghost7DirectionHandle,1
	   01
 00003633  74 1D		        je RightFixer
 00003635  80 3D 000002A5 R	        cmp Ghost7DirectionHandle,2
	   02
 0000363C  74 22		        je LeftFixer
 0000363E  80 3D 000002A5 R	        cmp Ghost7DirectionHandle,3
	   03
 00003645  74 27		        je UpFixer
 00003647  80 3D 000002A5 R	        cmp Ghost7DirectionHandle,4
	   04
 0000364E  74 26		        je DownFixer
 00003650  EB 3A		        jmp SkipMovementFixer

 00003652  FE 0D 000002C7 R	        RightFixer: dec xG7Pos
 00003658  FE 0D 000002C7 R	                    dec xG7Pos
 0000365E  EB 1C		                    jmp NewDirector
 00003660  FE 05 000002C7 R	        LeftFixer:  inc xG7Pos
 00003666  FE 05 000002C7 R	                    inc xG7Pos
 0000366C  EB 0E		                    jmp NewDirector
 0000366E  FE 05 000002C8 R	        UpFixer:    inc yG7Pos
 00003674  EB 06		                    jmp NewDirector
 00003676  FE 0D 000002C8 R	        DownFixer:  dec yG7Pos
				       
 0000367C			        NewDirector:
 0000367C  B8 00000004		        mov  eax,4     ;get random 0 to 99
 00003681  E8 00000000 E	        call RandomRange ;
 00003686  40			        inc  eax         ;make range 1 to 100
 00003687  A2 000002A5 R	        mov  Ghost7DirectionHandle,al  ;save random number
 0000368C			        SkipMovementFixer:

 0000368C  C3			    ret
 0000368D			Ghost7Movement ENDP 

 0000368D			Level3MovementLeftRightGhost4 PROC 

 0000368D  80 FF 01		        cmp bh,1
 00003690  0F 84 000000B4	        je l3_r02_Handle  
 00003696  80 FF 02		        cmp bh,2
 00003699  0F 84 000000BA	        je l3_r03_Handle
 0000369F  80 FF 03		        cmp bh,3
 000036A2  0F 84 000000C0	        je l3_r04_Handle
 000036A8  80 FF 04		        cmp bh,4
 000036AB  0F 84 000000C6	        je l3_r05_Handle
 000036B1  80 FF 05		        cmp bh,5
 000036B4  0F 84 000000CC	        je l3_r06_Handle
 000036BA  80 FF 06		        cmp bh,6
 000036BD  0F 84 000000D2	        je l3_r07_Handle
 000036C3  80 FF 07		        cmp bh,7
 000036C6  0F 84 000000D8	        je l3_r08_Handle
 000036CC  80 FF 08		        cmp bh,8
 000036CF  0F 84 000000DE	        je l3_r09_Handle
 000036D5  80 FF 09		        cmp bh,9
 000036D8  0F 84 000000E4	        je l3_r10_Handle
 000036DE  80 FF 0A		        cmp bh,10
 000036E1  0F 84 000000EA	        je l3_r11_Handle
 000036E7  80 FF 0B		        cmp bh,11
 000036EA  0F 84 000000F0	        je l3_r12_Handle
 000036F0  80 FF 0C		        cmp bh,12
 000036F3  0F 84 000000F3	        je l3_r13_Handle
 000036F9  80 FF 0D		        cmp bh,13
 000036FC  0F 84 000000F6	        je l3_r14_Handle
 00003702  80 FF 0E		        cmp bh,14
 00003705  0F 84 000000F9	        je l3_r15_Handle
 0000370B  80 FF 0F		        cmp bh,15
 0000370E  0F 84 000000FC	        je l3_r16_Handle
 00003714  80 FF 10		        cmp bh,16
 00003717  0F 84 000000FF	        je l3_r17_Handle
 0000371D  80 FF 11		        cmp bh,17
 00003720  0F 84 00000102	        je l3_r18_Handle
 00003726  80 FF 12		        cmp bh,18
 00003729  0F 84 00000105	        je l3_r19_Handle
 0000372F  80 FF 13		        cmp bh,19
 00003732  0F 84 00000108	        je l3_r20_Handle
 00003738  80 FF 14		        cmp bh,20
 0000373B  0F 84 0000010B	        je l3_r21_Handle
 00003741  80 FF 15		        cmp bh,21
 00003744  0F 84 0000010E	        je l3_r22_Handle
				            
 0000374A  BE 00000F07 R	        l3_r02_Handle:  mov esi,offset l3_r02
 0000374F  E8 000004DF		                        call Ghost4WallChecker
 00003754  E9 0000010B		                        jmp MovementChecker
 00003759  BE 00000F4E R	        l3_r03_Handle:  mov esi,offset l3_r03
 0000375E  E8 000004D0		                        call Ghost4WallChecker
 00003763  E9 000000FC		                        jmp MovementChecker
 00003768  BE 00000F95 R	        l3_r04_Handle:  mov esi,offset l3_r04
 0000376D  E8 000004C1		                        call Ghost4WallChecker
 00003772  E9 000000ED		                        jmp MovementChecker
 00003777  BE 00000FDC R	        l3_r05_Handle:  mov esi,offset l3_r05
 0000377C  E8 000004B2		                        call Ghost4WallChecker
 00003781  E9 000000DE		                        jmp MovementChecker
 00003786  BE 00001023 R	        l3_r06_Handle:  mov esi,offset l3_r06
 0000378B  E8 000004A3		                        call Ghost4WallChecker
 00003790  E9 000000CF		                        jmp MovementChecker
 00003795  BE 0000106A R	        l3_r07_Handle:  mov esi,offset l3_r07
 0000379A  E8 00000494		                        call Ghost4WallChecker
 0000379F  E9 000000C0		                        jmp MovementChecker
 000037A4  BE 000010B1 R	        l3_r08_Handle:  mov esi,offset l3_r08
 000037A9  E8 00000485		                        call Ghost4WallChecker
 000037AE  E9 000000B1		                        jmp MovementChecker
 000037B3  BE 000010F8 R	        l3_r09_Handle:  mov esi,offset l3_r09
 000037B8  E8 00000476		                        call Ghost4WallChecker
 000037BD  E9 000000A2		                        jmp MovementChecker
 000037C2  BE 0000113F R	        l3_r10_Handle:  mov esi,offset l3_r10
 000037C7  E8 00000467		                        call Ghost4WallChecker
 000037CC  E9 00000093		                        jmp MovementChecker
 000037D1  BE 00001186 R	        l3_r11_Handle:  mov esi,offset l3_r11
 000037D6  E8 00000458		                        call Ghost4WallChecker
 000037DB  E9 00000084		                        jmp MovementChecker
 000037E0  BE 000011CD R	        l3_r12_Handle:  mov esi,offset l3_r12
 000037E5  E8 00000449		                        call Ghost4WallChecker
 000037EA  EB 78		                        jmp MovementChecker
 000037EC  BE 00001214 R	        l3_r13_Handle:  mov esi,offset l3_r13
 000037F1  E8 0000043D		                        call Ghost4WallChecker
 000037F6  EB 6C		                        jmp MovementChecker
 000037F8  BE 0000125B R	        l3_r14_Handle:  mov esi,offset l3_r14
 000037FD  E8 00000431		                        call Ghost4WallChecker
 00003802  EB 60		                        jmp MovementChecker
 00003804  BE 000012A2 R	        l3_r15_Handle:  mov esi,offset l3_r15
 00003809  E8 00000425		                        call Ghost4WallChecker
 0000380E  EB 54		                        jmp MovementChecker
 00003810  BE 000012E9 R	        l3_r16_Handle:  mov esi,offset l3_r16
 00003815  E8 00000419		                        call Ghost4WallChecker
 0000381A  EB 48		                        jmp MovementChecker
 0000381C  BE 00001330 R	        l3_r17_Handle:  mov esi,offset l3_r17
 00003821  E8 0000040D		                        call Ghost4WallChecker
 00003826  EB 3C		                        jmp MovementChecker
 00003828  BE 00001377 R	        l3_r18_Handle:  mov esi,offset l3_r18
 0000382D  E8 00000401		                        call Ghost4WallChecker
 00003832  EB 30		                        jmp MovementChecker
 00003834  BE 000013BE R	        l3_r19_Handle:  mov esi,offset l3_r19
 00003839  E8 000003F5		                        call Ghost4WallChecker
 0000383E  EB 24		                        jmp MovementChecker
 00003840  BE 00001405 R	        l3_r20_Handle:  mov esi,offset l3_r20
 00003845  E8 000003E9		                        call Ghost4WallChecker
 0000384A  EB 18		                        jmp MovementChecker
 0000384C  BE 0000144C R	        l3_r21_Handle:  mov esi,offset l3_r21
 00003851  E8 000003DD		                        call Ghost4WallChecker
 00003856  EB 0C		                        jmp MovementChecker
 00003858  BE 00001493 R	        l3_r22_Handle:  mov esi,offset l3_r22
 0000385D  E8 000003D1		                        call Ghost4WallChecker
 00003862  EB 00		                        jmp MovementChecker

 00003864			        MovementChecker:
 00003864  C3			    ret
 00003865			Level3MovementLeftRightGhost4 ENDP    
 00003865			Level3MovementUpGhost4 PROC   

 00003865  80 FF 00		        cmp bh,0
 00003868  0F 84 000000B4	        je l3_r01_Handle  
 0000386E  80 FF 01		        cmp bh,1
 00003871  0F 84 000000BA	        je l3_r02_Handle
 00003877  80 FF 02		        cmp bh,2
 0000387A  0F 84 000000C0	        je l3_r03_Handle
 00003880  80 FF 03		        cmp bh,3
 00003883  0F 84 000000C6	        je l3_r04_Handle
 00003889  80 FF 04		        cmp bh,4
 0000388C  0F 84 000000CC	        je l3_r05_Handle
 00003892  80 FF 05		        cmp bh,5
 00003895  0F 84 000000D2	        je l3_r06_Handle
 0000389B  80 FF 06		        cmp bh,6
 0000389E  0F 84 000000D8	        je l3_r07_Handle
 000038A4  80 FF 07		        cmp bh,7
 000038A7  0F 84 000000DE	        je l3_r08_Handle
 000038AD  80 FF 08		        cmp bh,8
 000038B0  0F 84 000000E4	        je l3_r09_Handle
 000038B6  80 FF 09		        cmp bh,9
 000038B9  0F 84 000000EA	        je l3_r10_Handle
 000038BF  80 FF 0A		        cmp bh,10
 000038C2  0F 84 000000F0	        je l3_r11_Handle
 000038C8  80 FF 0B		        cmp bh,11
 000038CB  0F 84 000000F6	        je l3_r12_Handle
 000038D1  80 FF 0C		        cmp bh,12
 000038D4  0F 84 000000F9	        je l3_r13_Handle
 000038DA  80 FF 0D		        cmp bh,13
 000038DD  0F 84 000000FC	        je l3_r14_Handle
 000038E3  80 FF 0E		        cmp bh,14
 000038E6  0F 84 000000FF	        je l3_r15_Handle
 000038EC  80 FF 0F		        cmp bh,15
 000038EF  0F 84 00000102	        je l3_r16_Handle
 000038F5  80 FF 10		        cmp bh,16
 000038F8  0F 84 00000105	        je l3_r17_Handle
 000038FE  80 FF 11		        cmp bh,17
 00003901  0F 84 00000108	        je l3_r18_Handle
 00003907  80 FF 12		        cmp bh,18
 0000390A  0F 84 0000010B	        je l3_r19_Handle
 00003910  80 FF 13		        cmp bh,19
 00003913  0F 84 0000010E	        je l3_r20_Handle
 00003919  80 FF 14		        cmp bh,20
 0000391C  0F 84 00000111	        je l3_r21_Handle

 00003922  BE 00000EC0 R	        l3_r01_Handle:  mov esi,offset l3_r01
 00003927  E8 00000307		                        call Ghost4WallChecker
 0000392C  E9 0000011A		                        jmp MovementChecker            
 00003931  BE 00000F07 R	        l3_r02_Handle:  mov esi,offset l3_r02
 00003936  E8 000002F8		                        call Ghost4WallChecker
 0000393B  E9 0000010B		                        jmp MovementChecker
 00003940  BE 00000F4E R	        l3_r03_Handle:  mov esi,offset l3_r03
 00003945  E8 000002E9		                        call Ghost4WallChecker
 0000394A  E9 000000FC		                        jmp MovementChecker
 0000394F  BE 00000F95 R	        l3_r04_Handle:  mov esi,offset l3_r04
 00003954  E8 000002DA		                        call Ghost4WallChecker
 00003959  E9 000000ED		                        jmp MovementChecker
 0000395E  BE 00000FDC R	        l3_r05_Handle:  mov esi,offset l3_r05
 00003963  E8 000002CB		                        call Ghost4WallChecker
 00003968  E9 000000DE		                        jmp MovementChecker
 0000396D  BE 00001023 R	        l3_r06_Handle:  mov esi,offset l3_r06
 00003972  E8 000002BC		                        call Ghost4WallChecker
 00003977  E9 000000CF		                        jmp MovementChecker
 0000397C  BE 0000106A R	        l3_r07_Handle:  mov esi,offset l3_r07
 00003981  E8 000002AD		                        call Ghost4WallChecker
 00003986  E9 000000C0		                        jmp MovementChecker
 0000398B  BE 000010B1 R	        l3_r08_Handle:  mov esi,offset l3_r08
 00003990  E8 0000029E		                        call Ghost4WallChecker
 00003995  E9 000000B1		                        jmp MovementChecker
 0000399A  BE 000010F8 R	        l3_r09_Handle:  mov esi,offset l3_r09
 0000399F  E8 0000028F		                        call Ghost4WallChecker
 000039A4  E9 000000A2		                        jmp MovementChecker
 000039A9  BE 0000113F R	        l3_r10_Handle:  mov esi,offset l3_r10
 000039AE  E8 00000280		                        call Ghost4WallChecker
 000039B3  E9 00000093		                        jmp MovementChecker
 000039B8  BE 00001186 R	        l3_r11_Handle:  mov esi,offset l3_r11
 000039BD  E8 00000271		                        call Ghost4WallChecker
 000039C2  E9 00000084		                        jmp MovementChecker
 000039C7  BE 000011CD R	        l3_r12_Handle:  mov esi,offset l3_r12
 000039CC  E8 00000262		                        call Ghost4WallChecker
 000039D1  EB 78		                        jmp MovementChecker
 000039D3  BE 00001214 R	        l3_r13_Handle:  mov esi,offset l3_r13
 000039D8  E8 00000256		                        call Ghost4WallChecker
 000039DD  EB 6C		                        jmp MovementChecker
 000039DF  BE 0000125B R	        l3_r14_Handle:  mov esi,offset l3_r14
 000039E4  E8 0000024A		                        call Ghost4WallChecker
 000039E9  EB 60		                        jmp MovementChecker
 000039EB  BE 000012A2 R	        l3_r15_Handle:  mov esi,offset l3_r15
 000039F0  E8 0000023E		                        call Ghost4WallChecker
 000039F5  EB 54		                        jmp MovementChecker
 000039F7  BE 000012E9 R	        l3_r16_Handle:  mov esi,offset l3_r16
 000039FC  E8 00000232		                        call Ghost4WallChecker
 00003A01  EB 48		                        jmp MovementChecker
 00003A03  BE 00001330 R	        l3_r17_Handle:  mov esi,offset l3_r17
 00003A08  E8 00000226		                        call Ghost4WallChecker
 00003A0D  EB 3C		                        jmp MovementChecker
 00003A0F  BE 00001377 R	        l3_r18_Handle:  mov esi,offset l3_r18
 00003A14  E8 0000021A		                        call Ghost4WallChecker
 00003A19  EB 30		                        jmp MovementChecker
 00003A1B  BE 000013BE R	        l3_r19_Handle:  mov esi,offset l3_r19
 00003A20  E8 0000020E		                        call Ghost4WallChecker
 00003A25  EB 24		                        jmp MovementChecker
 00003A27  BE 00001405 R	        l3_r20_Handle:  mov esi,offset l3_r20
 00003A2C  E8 00000202		                        call Ghost4WallChecker
 00003A31  EB 18		                        jmp MovementChecker
 00003A33  BE 0000144C R	        l3_r21_Handle:  mov esi,offset l3_r21
 00003A38  E8 000001F6		                        call Ghost4WallChecker
 00003A3D  EB 0C		                        jmp MovementChecker
 00003A3F  BE 00001493 R	        l3_r22_Handle:  mov esi,offset l3_r22
 00003A44  E8 000001EA		                        call Ghost4WallChecker
 00003A49  EB 00		                        jmp MovementChecker
 00003A4B			        MovementChecker:
 00003A4B  C3			    ret
 00003A4C			Level3MovementUpGhost4 ENDP  
 00003A4C			Level3MovementDownGhost4 PROC   

 00003A4C  80 FF 00		        cmp bh,0
 00003A4F  0F 84 000000B4	        je l3_r01_Handle  
 00003A55  80 FF 01		        cmp bh,1
 00003A58  0F 84 000000BA	        je l3_r02_Handle
 00003A5E  80 FF 02		        cmp bh,2
 00003A61  0F 84 000000C0	        je l3_r03_Handle
 00003A67  80 FF 03		        cmp bh,3
 00003A6A  0F 84 000000C6	        je l3_r04_Handle
 00003A70  80 FF 04		        cmp bh,4
 00003A73  0F 84 000000CC	        je l3_r05_Handle
 00003A79  80 FF 05		        cmp bh,5
 00003A7C  0F 84 000000D2	        je l3_r06_Handle
 00003A82  80 FF 06		        cmp bh,6
 00003A85  0F 84 000000D8	        je l3_r07_Handle
 00003A8B  80 FF 07		        cmp bh,7
 00003A8E  0F 84 000000DE	        je l3_r08_Handle
 00003A94  80 FF 08		        cmp bh,8
 00003A97  0F 84 000000E4	        je l3_r09_Handle
 00003A9D  80 FF 09		        cmp bh,9
 00003AA0  0F 84 000000EA	        je l3_r10_Handle
 00003AA6  80 FF 0A		        cmp bh,10
 00003AA9  0F 84 000000F0	        je l3_r11_Handle
 00003AAF  80 FF 0B		        cmp bh,11
 00003AB2  0F 84 000000F6	        je l3_r12_Handle
 00003AB8  80 FF 0C		        cmp bh,12
 00003ABB  0F 84 000000F9	        je l3_r13_Handle
 00003AC1  80 FF 0D		        cmp bh,13
 00003AC4  0F 84 000000FC	        je l3_r14_Handle
 00003ACA  80 FF 0E		        cmp bh,14
 00003ACD  0F 84 000000FF	        je l3_r15_Handle
 00003AD3  80 FF 0F		        cmp bh,15
 00003AD6  0F 84 00000102	        je l3_r16_Handle
 00003ADC  80 FF 10		        cmp bh,16
 00003ADF  0F 84 00000105	        je l3_r17_Handle
 00003AE5  80 FF 11		        cmp bh,17
 00003AE8  0F 84 00000108	        je l3_r18_Handle
 00003AEE  80 FF 12		        cmp bh,18
 00003AF1  0F 84 0000010B	        je l3_r19_Handle
 00003AF7  80 FF 13		        cmp bh,19
 00003AFA  0F 84 0000010E	        je l3_r20_Handle
 00003B00  80 FF 14		        cmp bh,20
 00003B03  0F 84 00000111	        je l3_r21_Handle

 00003B09  BE 00000EC0 R	        l3_r01_Handle:  mov esi,offset l3_r01
 00003B0E  E8 00000120		                        call Ghost4WallChecker
 00003B13  E9 0000011A		                        jmp MovementChecker            
 00003B18  BE 00000F07 R	        l3_r02_Handle:  mov esi,offset l3_r02
 00003B1D  E8 00000111		                        call Ghost4WallChecker
 00003B22  E9 0000010B		                        jmp MovementChecker
 00003B27  BE 00000F4E R	        l3_r03_Handle:  mov esi,offset l3_r03
 00003B2C  E8 00000102		                        call Ghost4WallChecker
 00003B31  E9 000000FC		                        jmp MovementChecker
 00003B36  BE 00000F95 R	        l3_r04_Handle:  mov esi,offset l3_r04
 00003B3B  E8 000000F3		                        call Ghost4WallChecker
 00003B40  E9 000000ED		                        jmp MovementChecker
 00003B45  BE 00000FDC R	        l3_r05_Handle:  mov esi,offset l3_r05
 00003B4A  E8 000000E4		                        call Ghost4WallChecker
 00003B4F  E9 000000DE		                        jmp MovementChecker
 00003B54  BE 00001023 R	        l3_r06_Handle:  mov esi,offset l3_r06
 00003B59  E8 000000D5		                        call Ghost4WallChecker
 00003B5E  E9 000000CF		                        jmp MovementChecker
 00003B63  BE 0000106A R	        l3_r07_Handle:  mov esi,offset l3_r07
 00003B68  E8 000000C6		                        call Ghost4WallChecker
 00003B6D  E9 000000C0		                        jmp MovementChecker
 00003B72  BE 000010B1 R	        l3_r08_Handle:  mov esi,offset l3_r08
 00003B77  E8 000000B7		                        call Ghost4WallChecker
 00003B7C  E9 000000B1		                        jmp MovementChecker
 00003B81  BE 000010F8 R	        l3_r09_Handle:  mov esi,offset l3_r09
 00003B86  E8 000000A8		                        call Ghost4WallChecker
 00003B8B  E9 000000A2		                        jmp MovementChecker
 00003B90  BE 0000113F R	        l3_r10_Handle:  mov esi,offset l3_r10
 00003B95  E8 00000099		                        call Ghost4WallChecker
 00003B9A  E9 00000093		                        jmp MovementChecker
 00003B9F  BE 00001186 R	        l3_r11_Handle:  mov esi,offset l3_r11
 00003BA4  E8 0000008A		                        call Ghost4WallChecker
 00003BA9  E9 00000084		                        jmp MovementChecker
 00003BAE  BE 000011CD R	        l3_r12_Handle:  mov esi,offset l3_r12
 00003BB3  E8 0000007B		                        call Ghost4WallChecker
 00003BB8  EB 78		                        jmp MovementChecker
 00003BBA  BE 00001214 R	        l3_r13_Handle:  mov esi,offset l3_r13
 00003BBF  E8 0000006F		                        call Ghost4WallChecker
 00003BC4  EB 6C		                        jmp MovementChecker
 00003BC6  BE 0000125B R	        l3_r14_Handle:  mov esi,offset l3_r14
 00003BCB  E8 00000063		                        call Ghost4WallChecker
 00003BD0  EB 60		                        jmp MovementChecker
 00003BD2  BE 000012A2 R	        l3_r15_Handle:  mov esi,offset l3_r15
 00003BD7  E8 00000057		                        call Ghost4WallChecker
 00003BDC  EB 54		                        jmp MovementChecker
 00003BDE  BE 000012E9 R	        l3_r16_Handle:  mov esi,offset l3_r16
 00003BE3  E8 0000004B		                        call Ghost4WallChecker
 00003BE8  EB 48		                        jmp MovementChecker
 00003BEA  BE 00001330 R	        l3_r17_Handle:  mov esi,offset l3_r17
 00003BEF  E8 0000003F		                        call Ghost4WallChecker
 00003BF4  EB 3C		                        jmp MovementChecker
 00003BF6  BE 00001377 R	        l3_r18_Handle:  mov esi,offset l3_r18
 00003BFB  E8 00000033		                        call Ghost4WallChecker
 00003C00  EB 30		                        jmp MovementChecker
 00003C02  BE 000013BE R	        l3_r19_Handle:  mov esi,offset l3_r19
 00003C07  E8 00000027		                        call Ghost4WallChecker
 00003C0C  EB 24		                        jmp MovementChecker
 00003C0E  BE 00001405 R	        l3_r20_Handle:  mov esi,offset l3_r20
 00003C13  E8 0000001B		                        call Ghost4WallChecker
 00003C18  EB 18		                        jmp MovementChecker
 00003C1A  BE 0000144C R	        l3_r21_Handle:  mov esi,offset l3_r21
 00003C1F  E8 0000000F		                        call Ghost4WallChecker
 00003C24  EB 0C		                        jmp MovementChecker
 00003C26  BE 00001493 R	        l3_r22_Handle:  mov esi,offset l3_r22
 00003C2B  E8 00000003		                        call Ghost4WallChecker
 00003C30  EB 00		                        jmp MovementChecker
 00003C32			        MovementChecker:
 00003C32  C3			    ret
 00003C33			Level3MovementDownGhost4 ENDP  
 00003C33			Ghost4WallChecker PROC
 00003C33  B9 00000000		    mov ecx,0
 00003C38  8A CB		    mov cl,bl
 00003C3A			    l3loop1:
 00003C3A  46			    inc esi
 00003C3B  E2 FD		    loop l3loop1

 00003C3D  BA 00000000		    mov edx,0
 00003C42  8A 15 000002B1 R	    mov dl,wall
 00003C48  38 16		    cmp [esi],dl
 00003C4A  75 07		    jne Replacer 
 00003C4C  C6 05 000002A0 R	        mov Ghost4MovementPossibibly,0
	   00
 00003C53			    Replacer:
 00003C53			    EscapeReplacer:
 00003C53  C3			    ret
 00003C54			Ghost4WallChecker ENDP

 00003C54			Level3MovementLeftRightGhost5 PROC 

 00003C54  80 FF 01		        cmp bh,1
 00003C57  0F 84 000000B4	        je l3_r02_Handle  
 00003C5D  80 FF 02		        cmp bh,2
 00003C60  0F 84 000000BA	        je l3_r03_Handle
 00003C66  80 FF 03		        cmp bh,3
 00003C69  0F 84 000000C0	        je l3_r04_Handle
 00003C6F  80 FF 04		        cmp bh,4
 00003C72  0F 84 000000C6	        je l3_r05_Handle
 00003C78  80 FF 05		        cmp bh,5
 00003C7B  0F 84 000000CC	        je l3_r06_Handle
 00003C81  80 FF 06		        cmp bh,6
 00003C84  0F 84 000000D2	        je l3_r07_Handle
 00003C8A  80 FF 07		        cmp bh,7
 00003C8D  0F 84 000000D8	        je l3_r08_Handle
 00003C93  80 FF 08		        cmp bh,8
 00003C96  0F 84 000000DE	        je l3_r09_Handle
 00003C9C  80 FF 09		        cmp bh,9
 00003C9F  0F 84 000000E4	        je l3_r10_Handle
 00003CA5  80 FF 0A		        cmp bh,10
 00003CA8  0F 84 000000EA	        je l3_r11_Handle
 00003CAE  80 FF 0B		        cmp bh,11
 00003CB1  0F 84 000000F0	        je l3_r12_Handle
 00003CB7  80 FF 0C		        cmp bh,12
 00003CBA  0F 84 000000F3	        je l3_r13_Handle
 00003CC0  80 FF 0D		        cmp bh,13
 00003CC3  0F 84 000000F6	        je l3_r14_Handle
 00003CC9  80 FF 0E		        cmp bh,14
 00003CCC  0F 84 000000F9	        je l3_r15_Handle
 00003CD2  80 FF 0F		        cmp bh,15
 00003CD5  0F 84 000000FC	        je l3_r16_Handle
 00003CDB  80 FF 10		        cmp bh,16
 00003CDE  0F 84 000000FF	        je l3_r17_Handle
 00003CE4  80 FF 11		        cmp bh,17
 00003CE7  0F 84 00000102	        je l3_r18_Handle
 00003CED  80 FF 12		        cmp bh,18
 00003CF0  0F 84 00000105	        je l3_r19_Handle
 00003CF6  80 FF 13		        cmp bh,19
 00003CF9  0F 84 00000108	        je l3_r20_Handle
 00003CFF  80 FF 14		        cmp bh,20
 00003D02  0F 84 0000010B	        je l3_r21_Handle
 00003D08  80 FF 15		        cmp bh,21
 00003D0B  0F 84 0000010E	        je l3_r22_Handle
				            
 00003D11  BE 00000F07 R	        l3_r02_Handle:  mov esi,offset l3_r02
 00003D16  E8 000004DF		                        call Ghost5WallChecker
 00003D1B  E9 0000010B		                        jmp MovementChecker
 00003D20  BE 00000F4E R	        l3_r03_Handle:  mov esi,offset l3_r03
 00003D25  E8 000004D0		                        call Ghost5WallChecker
 00003D2A  E9 000000FC		                        jmp MovementChecker
 00003D2F  BE 00000F95 R	        l3_r04_Handle:  mov esi,offset l3_r04
 00003D34  E8 000004C1		                        call Ghost5WallChecker
 00003D39  E9 000000ED		                        jmp MovementChecker
 00003D3E  BE 00000FDC R	        l3_r05_Handle:  mov esi,offset l3_r05
 00003D43  E8 000004B2		                        call Ghost5WallChecker
 00003D48  E9 000000DE		                        jmp MovementChecker
 00003D4D  BE 00001023 R	        l3_r06_Handle:  mov esi,offset l3_r06
 00003D52  E8 000004A3		                        call Ghost5WallChecker
 00003D57  E9 000000CF		                        jmp MovementChecker
 00003D5C  BE 0000106A R	        l3_r07_Handle:  mov esi,offset l3_r07
 00003D61  E8 00000494		                        call Ghost5WallChecker
 00003D66  E9 000000C0		                        jmp MovementChecker
 00003D6B  BE 000010B1 R	        l3_r08_Handle:  mov esi,offset l3_r08
 00003D70  E8 00000485		                        call Ghost5WallChecker
 00003D75  E9 000000B1		                        jmp MovementChecker
 00003D7A  BE 000010F8 R	        l3_r09_Handle:  mov esi,offset l3_r09
 00003D7F  E8 00000476		                        call Ghost5WallChecker
 00003D84  E9 000000A2		                        jmp MovementChecker
 00003D89  BE 0000113F R	        l3_r10_Handle:  mov esi,offset l3_r10
 00003D8E  E8 00000467		                        call Ghost5WallChecker
 00003D93  E9 00000093		                        jmp MovementChecker
 00003D98  BE 00001186 R	        l3_r11_Handle:  mov esi,offset l3_r11
 00003D9D  E8 00000458		                        call Ghost5WallChecker
 00003DA2  E9 00000084		                        jmp MovementChecker
 00003DA7  BE 000011CD R	        l3_r12_Handle:  mov esi,offset l3_r12
 00003DAC  E8 00000449		                        call Ghost5WallChecker
 00003DB1  EB 78		                        jmp MovementChecker
 00003DB3  BE 00001214 R	        l3_r13_Handle:  mov esi,offset l3_r13
 00003DB8  E8 0000043D		                        call Ghost5WallChecker
 00003DBD  EB 6C		                        jmp MovementChecker
 00003DBF  BE 0000125B R	        l3_r14_Handle:  mov esi,offset l3_r14
 00003DC4  E8 00000431		                        call Ghost5WallChecker
 00003DC9  EB 60		                        jmp MovementChecker
 00003DCB  BE 000012A2 R	        l3_r15_Handle:  mov esi,offset l3_r15
 00003DD0  E8 00000425		                        call Ghost5WallChecker
 00003DD5  EB 54		                        jmp MovementChecker
 00003DD7  BE 000012E9 R	        l3_r16_Handle:  mov esi,offset l3_r16
 00003DDC  E8 00000419		                        call Ghost5WallChecker
 00003DE1  EB 48		                        jmp MovementChecker
 00003DE3  BE 00001330 R	        l3_r17_Handle:  mov esi,offset l3_r17
 00003DE8  E8 0000040D		                        call Ghost5WallChecker
 00003DED  EB 3C		                        jmp MovementChecker
 00003DEF  BE 00001377 R	        l3_r18_Handle:  mov esi,offset l3_r18
 00003DF4  E8 00000401		                        call Ghost5WallChecker
 00003DF9  EB 30		                        jmp MovementChecker
 00003DFB  BE 000013BE R	        l3_r19_Handle:  mov esi,offset l3_r19
 00003E00  E8 000003F5		                        call Ghost5WallChecker
 00003E05  EB 24		                        jmp MovementChecker
 00003E07  BE 00001405 R	        l3_r20_Handle:  mov esi,offset l3_r20
 00003E0C  E8 000003E9		                        call Ghost5WallChecker
 00003E11  EB 18		                        jmp MovementChecker
 00003E13  BE 0000144C R	        l3_r21_Handle:  mov esi,offset l3_r21
 00003E18  E8 000003DD		                        call Ghost5WallChecker
 00003E1D  EB 0C		                        jmp MovementChecker
 00003E1F  BE 00001493 R	        l3_r22_Handle:  mov esi,offset l3_r22
 00003E24  E8 000003D1		                        call Ghost5WallChecker
 00003E29  EB 00		                        jmp MovementChecker

 00003E2B			        MovementChecker:
 00003E2B  C3			    ret
 00003E2C			Level3MovementLeftRightGhost5 ENDP    
 00003E2C			Level3MovementUpGhost5 PROC   

 00003E2C  80 FF 00		        cmp bh,0
 00003E2F  0F 84 000000B4	        je l3_r01_Handle  
 00003E35  80 FF 01		        cmp bh,1
 00003E38  0F 84 000000BA	        je l3_r02_Handle
 00003E3E  80 FF 02		        cmp bh,2
 00003E41  0F 84 000000C0	        je l3_r03_Handle
 00003E47  80 FF 03		        cmp bh,3
 00003E4A  0F 84 000000C6	        je l3_r04_Handle
 00003E50  80 FF 04		        cmp bh,4
 00003E53  0F 84 000000CC	        je l3_r05_Handle
 00003E59  80 FF 05		        cmp bh,5
 00003E5C  0F 84 000000D2	        je l3_r06_Handle
 00003E62  80 FF 06		        cmp bh,6
 00003E65  0F 84 000000D8	        je l3_r07_Handle
 00003E6B  80 FF 07		        cmp bh,7
 00003E6E  0F 84 000000DE	        je l3_r08_Handle
 00003E74  80 FF 08		        cmp bh,8
 00003E77  0F 84 000000E4	        je l3_r09_Handle
 00003E7D  80 FF 09		        cmp bh,9
 00003E80  0F 84 000000EA	        je l3_r10_Handle
 00003E86  80 FF 0A		        cmp bh,10
 00003E89  0F 84 000000F0	        je l3_r11_Handle
 00003E8F  80 FF 0B		        cmp bh,11
 00003E92  0F 84 000000F6	        je l3_r12_Handle
 00003E98  80 FF 0C		        cmp bh,12
 00003E9B  0F 84 000000F9	        je l3_r13_Handle
 00003EA1  80 FF 0D		        cmp bh,13
 00003EA4  0F 84 000000FC	        je l3_r14_Handle
 00003EAA  80 FF 0E		        cmp bh,14
 00003EAD  0F 84 000000FF	        je l3_r15_Handle
 00003EB3  80 FF 0F		        cmp bh,15
 00003EB6  0F 84 00000102	        je l3_r16_Handle
 00003EBC  80 FF 10		        cmp bh,16
 00003EBF  0F 84 00000105	        je l3_r17_Handle
 00003EC5  80 FF 11		        cmp bh,17
 00003EC8  0F 84 00000108	        je l3_r18_Handle
 00003ECE  80 FF 12		        cmp bh,18
 00003ED1  0F 84 0000010B	        je l3_r19_Handle
 00003ED7  80 FF 13		        cmp bh,19
 00003EDA  0F 84 0000010E	        je l3_r20_Handle
 00003EE0  80 FF 14		        cmp bh,20
 00003EE3  0F 84 00000111	        je l3_r21_Handle

 00003EE9  BE 00000EC0 R	        l3_r01_Handle:  mov esi,offset l3_r01
 00003EEE  E8 00000307		                        call Ghost5WallChecker
 00003EF3  E9 0000011A		                        jmp MovementChecker            
 00003EF8  BE 00000F07 R	        l3_r02_Handle:  mov esi,offset l3_r02
 00003EFD  E8 000002F8		                        call Ghost5WallChecker
 00003F02  E9 0000010B		                        jmp MovementChecker
 00003F07  BE 00000F4E R	        l3_r03_Handle:  mov esi,offset l3_r03
 00003F0C  E8 000002E9		                        call Ghost5WallChecker
 00003F11  E9 000000FC		                        jmp MovementChecker
 00003F16  BE 00000F95 R	        l3_r04_Handle:  mov esi,offset l3_r04
 00003F1B  E8 000002DA		                        call Ghost5WallChecker
 00003F20  E9 000000ED		                        jmp MovementChecker
 00003F25  BE 00000FDC R	        l3_r05_Handle:  mov esi,offset l3_r05
 00003F2A  E8 000002CB		                        call Ghost5WallChecker
 00003F2F  E9 000000DE		                        jmp MovementChecker
 00003F34  BE 00001023 R	        l3_r06_Handle:  mov esi,offset l3_r06
 00003F39  E8 000002BC		                        call Ghost5WallChecker
 00003F3E  E9 000000CF		                        jmp MovementChecker
 00003F43  BE 0000106A R	        l3_r07_Handle:  mov esi,offset l3_r07
 00003F48  E8 000002AD		                        call Ghost5WallChecker
 00003F4D  E9 000000C0		                        jmp MovementChecker
 00003F52  BE 000010B1 R	        l3_r08_Handle:  mov esi,offset l3_r08
 00003F57  E8 0000029E		                        call Ghost5WallChecker
 00003F5C  E9 000000B1		                        jmp MovementChecker
 00003F61  BE 000010F8 R	        l3_r09_Handle:  mov esi,offset l3_r09
 00003F66  E8 0000028F		                        call Ghost5WallChecker
 00003F6B  E9 000000A2		                        jmp MovementChecker
 00003F70  BE 0000113F R	        l3_r10_Handle:  mov esi,offset l3_r10
 00003F75  E8 00000280		                        call Ghost5WallChecker
 00003F7A  E9 00000093		                        jmp MovementChecker
 00003F7F  BE 00001186 R	        l3_r11_Handle:  mov esi,offset l3_r11
 00003F84  E8 00000271		                        call Ghost5WallChecker
 00003F89  E9 00000084		                        jmp MovementChecker
 00003F8E  BE 000011CD R	        l3_r12_Handle:  mov esi,offset l3_r12
 00003F93  E8 00000262		                        call Ghost5WallChecker
 00003F98  EB 78		                        jmp MovementChecker
 00003F9A  BE 00001214 R	        l3_r13_Handle:  mov esi,offset l3_r13
 00003F9F  E8 00000256		                        call Ghost5WallChecker
 00003FA4  EB 6C		                        jmp MovementChecker
 00003FA6  BE 0000125B R	        l3_r14_Handle:  mov esi,offset l3_r14
 00003FAB  E8 0000024A		                        call Ghost5WallChecker
 00003FB0  EB 60		                        jmp MovementChecker
 00003FB2  BE 000012A2 R	        l3_r15_Handle:  mov esi,offset l3_r15
 00003FB7  E8 0000023E		                        call Ghost5WallChecker
 00003FBC  EB 54		                        jmp MovementChecker
 00003FBE  BE 000012E9 R	        l3_r16_Handle:  mov esi,offset l3_r16
 00003FC3  E8 00000232		                        call Ghost5WallChecker
 00003FC8  EB 48		                        jmp MovementChecker
 00003FCA  BE 00001330 R	        l3_r17_Handle:  mov esi,offset l3_r17
 00003FCF  E8 00000226		                        call Ghost5WallChecker
 00003FD4  EB 3C		                        jmp MovementChecker
 00003FD6  BE 00001377 R	        l3_r18_Handle:  mov esi,offset l3_r18
 00003FDB  E8 0000021A		                        call Ghost5WallChecker
 00003FE0  EB 30		                        jmp MovementChecker
 00003FE2  BE 000013BE R	        l3_r19_Handle:  mov esi,offset l3_r19
 00003FE7  E8 0000020E		                        call Ghost5WallChecker
 00003FEC  EB 24		                        jmp MovementChecker
 00003FEE  BE 00001405 R	        l3_r20_Handle:  mov esi,offset l3_r20
 00003FF3  E8 00000202		                        call Ghost5WallChecker
 00003FF8  EB 18		                        jmp MovementChecker
 00003FFA  BE 0000144C R	        l3_r21_Handle:  mov esi,offset l3_r21
 00003FFF  E8 000001F6		                        call Ghost5WallChecker
 00004004  EB 0C		                        jmp MovementChecker
 00004006  BE 00001493 R	        l3_r22_Handle:  mov esi,offset l3_r22
 0000400B  E8 000001EA		                        call Ghost5WallChecker
 00004010  EB 00		                        jmp MovementChecker
 00004012			        MovementChecker:
 00004012  C3			    ret
 00004013			Level3MovementUpGhost5 ENDP  
 00004013			Level3MovementDownGhost5 PROC   

 00004013  80 FF 00		        cmp bh,0
 00004016  0F 84 000000B4	        je l3_r01_Handle  
 0000401C  80 FF 01		        cmp bh,1
 0000401F  0F 84 000000BA	        je l3_r02_Handle
 00004025  80 FF 02		        cmp bh,2
 00004028  0F 84 000000C0	        je l3_r03_Handle
 0000402E  80 FF 03		        cmp bh,3
 00004031  0F 84 000000C6	        je l3_r04_Handle
 00004037  80 FF 04		        cmp bh,4
 0000403A  0F 84 000000CC	        je l3_r05_Handle
 00004040  80 FF 05		        cmp bh,5
 00004043  0F 84 000000D2	        je l3_r06_Handle
 00004049  80 FF 06		        cmp bh,6
 0000404C  0F 84 000000D8	        je l3_r07_Handle
 00004052  80 FF 07		        cmp bh,7
 00004055  0F 84 000000DE	        je l3_r08_Handle
 0000405B  80 FF 08		        cmp bh,8
 0000405E  0F 84 000000E4	        je l3_r09_Handle
 00004064  80 FF 09		        cmp bh,9
 00004067  0F 84 000000EA	        je l3_r10_Handle
 0000406D  80 FF 0A		        cmp bh,10
 00004070  0F 84 000000F0	        je l3_r11_Handle
 00004076  80 FF 0B		        cmp bh,11
 00004079  0F 84 000000F6	        je l3_r12_Handle
 0000407F  80 FF 0C		        cmp bh,12
 00004082  0F 84 000000F9	        je l3_r13_Handle
 00004088  80 FF 0D		        cmp bh,13
 0000408B  0F 84 000000FC	        je l3_r14_Handle
 00004091  80 FF 0E		        cmp bh,14
 00004094  0F 84 000000FF	        je l3_r15_Handle
 0000409A  80 FF 0F		        cmp bh,15
 0000409D  0F 84 00000102	        je l3_r16_Handle
 000040A3  80 FF 10		        cmp bh,16
 000040A6  0F 84 00000105	        je l3_r17_Handle
 000040AC  80 FF 11		        cmp bh,17
 000040AF  0F 84 00000108	        je l3_r18_Handle
 000040B5  80 FF 12		        cmp bh,18
 000040B8  0F 84 0000010B	        je l3_r19_Handle
 000040BE  80 FF 13		        cmp bh,19
 000040C1  0F 84 0000010E	        je l3_r20_Handle
 000040C7  80 FF 14		        cmp bh,20
 000040CA  0F 84 00000111	        je l3_r21_Handle

 000040D0  BE 00000EC0 R	        l3_r01_Handle:  mov esi,offset l3_r01
 000040D5  E8 00000120		                        call Ghost5WallChecker
 000040DA  E9 0000011A		                        jmp MovementChecker            
 000040DF  BE 00000F07 R	        l3_r02_Handle:  mov esi,offset l3_r02
 000040E4  E8 00000111		                        call Ghost5WallChecker
 000040E9  E9 0000010B		                        jmp MovementChecker
 000040EE  BE 00000F4E R	        l3_r03_Handle:  mov esi,offset l3_r03
 000040F3  E8 00000102		                        call Ghost5WallChecker
 000040F8  E9 000000FC		                        jmp MovementChecker
 000040FD  BE 00000F95 R	        l3_r04_Handle:  mov esi,offset l3_r04
 00004102  E8 000000F3		                        call Ghost5WallChecker
 00004107  E9 000000ED		                        jmp MovementChecker
 0000410C  BE 00000FDC R	        l3_r05_Handle:  mov esi,offset l3_r05
 00004111  E8 000000E4		                        call Ghost5WallChecker
 00004116  E9 000000DE		                        jmp MovementChecker
 0000411B  BE 00001023 R	        l3_r06_Handle:  mov esi,offset l3_r06
 00004120  E8 000000D5		                        call Ghost5WallChecker
 00004125  E9 000000CF		                        jmp MovementChecker
 0000412A  BE 0000106A R	        l3_r07_Handle:  mov esi,offset l3_r07
 0000412F  E8 000000C6		                        call Ghost5WallChecker
 00004134  E9 000000C0		                        jmp MovementChecker
 00004139  BE 000010B1 R	        l3_r08_Handle:  mov esi,offset l3_r08
 0000413E  E8 000000B7		                        call Ghost5WallChecker
 00004143  E9 000000B1		                        jmp MovementChecker
 00004148  BE 000010F8 R	        l3_r09_Handle:  mov esi,offset l3_r09
 0000414D  E8 000000A8		                        call Ghost5WallChecker
 00004152  E9 000000A2		                        jmp MovementChecker
 00004157  BE 0000113F R	        l3_r10_Handle:  mov esi,offset l3_r10
 0000415C  E8 00000099		                        call Ghost5WallChecker
 00004161  E9 00000093		                        jmp MovementChecker
 00004166  BE 00001186 R	        l3_r11_Handle:  mov esi,offset l3_r11
 0000416B  E8 0000008A		                        call Ghost5WallChecker
 00004170  E9 00000084		                        jmp MovementChecker
 00004175  BE 000011CD R	        l3_r12_Handle:  mov esi,offset l3_r12
 0000417A  E8 0000007B		                        call Ghost5WallChecker
 0000417F  EB 78		                        jmp MovementChecker
 00004181  BE 00001214 R	        l3_r13_Handle:  mov esi,offset l3_r13
 00004186  E8 0000006F		                        call Ghost5WallChecker
 0000418B  EB 6C		                        jmp MovementChecker
 0000418D  BE 0000125B R	        l3_r14_Handle:  mov esi,offset l3_r14
 00004192  E8 00000063		                        call Ghost5WallChecker
 00004197  EB 60		                        jmp MovementChecker
 00004199  BE 000012A2 R	        l3_r15_Handle:  mov esi,offset l3_r15
 0000419E  E8 00000057		                        call Ghost5WallChecker
 000041A3  EB 54		                        jmp MovementChecker
 000041A5  BE 000012E9 R	        l3_r16_Handle:  mov esi,offset l3_r16
 000041AA  E8 0000004B		                        call Ghost5WallChecker
 000041AF  EB 48		                        jmp MovementChecker
 000041B1  BE 00001330 R	        l3_r17_Handle:  mov esi,offset l3_r17
 000041B6  E8 0000003F		                        call Ghost5WallChecker
 000041BB  EB 3C		                        jmp MovementChecker
 000041BD  BE 00001377 R	        l3_r18_Handle:  mov esi,offset l3_r18
 000041C2  E8 00000033		                        call Ghost5WallChecker
 000041C7  EB 30		                        jmp MovementChecker
 000041C9  BE 000013BE R	        l3_r19_Handle:  mov esi,offset l3_r19
 000041CE  E8 00000027		                        call Ghost5WallChecker
 000041D3  EB 24		                        jmp MovementChecker
 000041D5  BE 00001405 R	        l3_r20_Handle:  mov esi,offset l3_r20
 000041DA  E8 0000001B		                        call Ghost5WallChecker
 000041DF  EB 18		                        jmp MovementChecker
 000041E1  BE 0000144C R	        l3_r21_Handle:  mov esi,offset l3_r21
 000041E6  E8 0000000F		                        call Ghost5WallChecker
 000041EB  EB 0C		                        jmp MovementChecker
 000041ED  BE 00001493 R	        l3_r22_Handle:  mov esi,offset l3_r22
 000041F2  E8 00000003		                        call Ghost5WallChecker
 000041F7  EB 00		                        jmp MovementChecker
 000041F9			        MovementChecker:
 000041F9  C3			    ret
 000041FA			Level3MovementDownGhost5 ENDP  
 000041FA			Ghost5WallChecker PROC
 000041FA  B9 00000000		    mov ecx,0
 000041FF  8A CB		    mov cl,bl
 00004201			    l3loop1:
 00004201  46			    inc esi
 00004202  E2 FD		    loop l3loop1

 00004204  BA 00000000		    mov edx,0
 00004209  8A 15 000002B1 R	    mov dl,wall
 0000420F  38 16		    cmp [esi],dl
 00004211  75 07		    jne Replacer 
 00004213  C6 05 000002A2 R	        mov Ghost5MovementPossibibly,0
	   00
 0000421A			    Replacer:
 0000421A			    EscapeReplacer:
 0000421A  C3			    ret
 0000421B			Ghost5WallChecker ENDP

 0000421B			Level3MovementLeftRightGhost6 PROC 

 0000421B  80 FF 01		        cmp bh,1
 0000421E  0F 84 000000B4	        je l3_r02_Handle  
 00004224  80 FF 02		        cmp bh,2
 00004227  0F 84 000000BA	        je l3_r03_Handle
 0000422D  80 FF 03		        cmp bh,3
 00004230  0F 84 000000C0	        je l3_r04_Handle
 00004236  80 FF 04		        cmp bh,4
 00004239  0F 84 000000C6	        je l3_r05_Handle
 0000423F  80 FF 05		        cmp bh,5
 00004242  0F 84 000000CC	        je l3_r06_Handle
 00004248  80 FF 06		        cmp bh,6
 0000424B  0F 84 000000D2	        je l3_r07_Handle
 00004251  80 FF 07		        cmp bh,7
 00004254  0F 84 000000D8	        je l3_r08_Handle
 0000425A  80 FF 08		        cmp bh,8
 0000425D  0F 84 000000DE	        je l3_r09_Handle
 00004263  80 FF 09		        cmp bh,9
 00004266  0F 84 000000E4	        je l3_r10_Handle
 0000426C  80 FF 0A		        cmp bh,10
 0000426F  0F 84 000000EA	        je l3_r11_Handle
 00004275  80 FF 0B		        cmp bh,11
 00004278  0F 84 000000F0	        je l3_r12_Handle
 0000427E  80 FF 0C		        cmp bh,12
 00004281  0F 84 000000F3	        je l3_r13_Handle
 00004287  80 FF 0D		        cmp bh,13
 0000428A  0F 84 000000F6	        je l3_r14_Handle
 00004290  80 FF 0E		        cmp bh,14
 00004293  0F 84 000000F9	        je l3_r15_Handle
 00004299  80 FF 0F		        cmp bh,15
 0000429C  0F 84 000000FC	        je l3_r16_Handle
 000042A2  80 FF 10		        cmp bh,16
 000042A5  0F 84 000000FF	        je l3_r17_Handle
 000042AB  80 FF 11		        cmp bh,17
 000042AE  0F 84 00000102	        je l3_r18_Handle
 000042B4  80 FF 12		        cmp bh,18
 000042B7  0F 84 00000105	        je l3_r19_Handle
 000042BD  80 FF 13		        cmp bh,19
 000042C0  0F 84 00000108	        je l3_r20_Handle
 000042C6  80 FF 14		        cmp bh,20
 000042C9  0F 84 0000010B	        je l3_r21_Handle
 000042CF  80 FF 15		        cmp bh,21
 000042D2  0F 84 0000010E	        je l3_r22_Handle
				            
 000042D8  BE 00000F07 R	        l3_r02_Handle:  mov esi,offset l3_r02
 000042DD  E8 000004DF		                        call Ghost6WallChecker
 000042E2  E9 0000010B		                        jmp MovementChecker
 000042E7  BE 00000F4E R	        l3_r03_Handle:  mov esi,offset l3_r03
 000042EC  E8 000004D0		                        call Ghost6WallChecker
 000042F1  E9 000000FC		                        jmp MovementChecker
 000042F6  BE 00000F95 R	        l3_r04_Handle:  mov esi,offset l3_r04
 000042FB  E8 000004C1		                        call Ghost6WallChecker
 00004300  E9 000000ED		                        jmp MovementChecker
 00004305  BE 00000FDC R	        l3_r05_Handle:  mov esi,offset l3_r05
 0000430A  E8 000004B2		                        call Ghost6WallChecker
 0000430F  E9 000000DE		                        jmp MovementChecker
 00004314  BE 00001023 R	        l3_r06_Handle:  mov esi,offset l3_r06
 00004319  E8 000004A3		                        call Ghost6WallChecker
 0000431E  E9 000000CF		                        jmp MovementChecker
 00004323  BE 0000106A R	        l3_r07_Handle:  mov esi,offset l3_r07
 00004328  E8 00000494		                        call Ghost6WallChecker
 0000432D  E9 000000C0		                        jmp MovementChecker
 00004332  BE 000010B1 R	        l3_r08_Handle:  mov esi,offset l3_r08
 00004337  E8 00000485		                        call Ghost6WallChecker
 0000433C  E9 000000B1		                        jmp MovementChecker
 00004341  BE 000010F8 R	        l3_r09_Handle:  mov esi,offset l3_r09
 00004346  E8 00000476		                        call Ghost6WallChecker
 0000434B  E9 000000A2		                        jmp MovementChecker
 00004350  BE 0000113F R	        l3_r10_Handle:  mov esi,offset l3_r10
 00004355  E8 00000467		                        call Ghost6WallChecker
 0000435A  E9 00000093		                        jmp MovementChecker
 0000435F  BE 00001186 R	        l3_r11_Handle:  mov esi,offset l3_r11
 00004364  E8 00000458		                        call Ghost6WallChecker
 00004369  E9 00000084		                        jmp MovementChecker
 0000436E  BE 000011CD R	        l3_r12_Handle:  mov esi,offset l3_r12
 00004373  E8 00000449		                        call Ghost6WallChecker
 00004378  EB 78		                        jmp MovementChecker
 0000437A  BE 00001214 R	        l3_r13_Handle:  mov esi,offset l3_r13
 0000437F  E8 0000043D		                        call Ghost6WallChecker
 00004384  EB 6C		                        jmp MovementChecker
 00004386  BE 0000125B R	        l3_r14_Handle:  mov esi,offset l3_r14
 0000438B  E8 00000431		                        call Ghost6WallChecker
 00004390  EB 60		                        jmp MovementChecker
 00004392  BE 000012A2 R	        l3_r15_Handle:  mov esi,offset l3_r15
 00004397  E8 00000425		                        call Ghost6WallChecker
 0000439C  EB 54		                        jmp MovementChecker
 0000439E  BE 000012E9 R	        l3_r16_Handle:  mov esi,offset l3_r16
 000043A3  E8 00000419		                        call Ghost6WallChecker
 000043A8  EB 48		                        jmp MovementChecker
 000043AA  BE 00001330 R	        l3_r17_Handle:  mov esi,offset l3_r17
 000043AF  E8 0000040D		                        call Ghost6WallChecker
 000043B4  EB 3C		                        jmp MovementChecker
 000043B6  BE 00001377 R	        l3_r18_Handle:  mov esi,offset l3_r18
 000043BB  E8 00000401		                        call Ghost6WallChecker
 000043C0  EB 30		                        jmp MovementChecker
 000043C2  BE 000013BE R	        l3_r19_Handle:  mov esi,offset l3_r19
 000043C7  E8 000003F5		                        call Ghost6WallChecker
 000043CC  EB 24		                        jmp MovementChecker
 000043CE  BE 00001405 R	        l3_r20_Handle:  mov esi,offset l3_r20
 000043D3  E8 000003E9		                        call Ghost6WallChecker
 000043D8  EB 18		                        jmp MovementChecker
 000043DA  BE 0000144C R	        l3_r21_Handle:  mov esi,offset l3_r21
 000043DF  E8 000003DD		                        call Ghost6WallChecker
 000043E4  EB 0C		                        jmp MovementChecker
 000043E6  BE 00001493 R	        l3_r22_Handle:  mov esi,offset l3_r22
 000043EB  E8 000003D1		                        call Ghost6WallChecker
 000043F0  EB 00		                        jmp MovementChecker

 000043F2			        MovementChecker:
 000043F2  C3			    ret
 000043F3			Level3MovementLeftRightGhost6 ENDP    
 000043F3			Level3MovementUpGhost6 PROC   

 000043F3  80 FF 00		        cmp bh,0
 000043F6  0F 84 000000B4	        je l3_r01_Handle  
 000043FC  80 FF 01		        cmp bh,1
 000043FF  0F 84 000000BA	        je l3_r02_Handle
 00004405  80 FF 02		        cmp bh,2
 00004408  0F 84 000000C0	        je l3_r03_Handle
 0000440E  80 FF 03		        cmp bh,3
 00004411  0F 84 000000C6	        je l3_r04_Handle
 00004417  80 FF 04		        cmp bh,4
 0000441A  0F 84 000000CC	        je l3_r05_Handle
 00004420  80 FF 05		        cmp bh,5
 00004423  0F 84 000000D2	        je l3_r06_Handle
 00004429  80 FF 06		        cmp bh,6
 0000442C  0F 84 000000D8	        je l3_r07_Handle
 00004432  80 FF 07		        cmp bh,7
 00004435  0F 84 000000DE	        je l3_r08_Handle
 0000443B  80 FF 08		        cmp bh,8
 0000443E  0F 84 000000E4	        je l3_r09_Handle
 00004444  80 FF 09		        cmp bh,9
 00004447  0F 84 000000EA	        je l3_r10_Handle
 0000444D  80 FF 0A		        cmp bh,10
 00004450  0F 84 000000F0	        je l3_r11_Handle
 00004456  80 FF 0B		        cmp bh,11
 00004459  0F 84 000000F6	        je l3_r12_Handle
 0000445F  80 FF 0C		        cmp bh,12
 00004462  0F 84 000000F9	        je l3_r13_Handle
 00004468  80 FF 0D		        cmp bh,13
 0000446B  0F 84 000000FC	        je l3_r14_Handle
 00004471  80 FF 0E		        cmp bh,14
 00004474  0F 84 000000FF	        je l3_r15_Handle
 0000447A  80 FF 0F		        cmp bh,15
 0000447D  0F 84 00000102	        je l3_r16_Handle
 00004483  80 FF 10		        cmp bh,16
 00004486  0F 84 00000105	        je l3_r17_Handle
 0000448C  80 FF 11		        cmp bh,17
 0000448F  0F 84 00000108	        je l3_r18_Handle
 00004495  80 FF 12		        cmp bh,18
 00004498  0F 84 0000010B	        je l3_r19_Handle
 0000449E  80 FF 13		        cmp bh,19
 000044A1  0F 84 0000010E	        je l3_r20_Handle
 000044A7  80 FF 14		        cmp bh,20
 000044AA  0F 84 00000111	        je l3_r21_Handle

 000044B0  BE 00000EC0 R	        l3_r01_Handle:  mov esi,offset l3_r01
 000044B5  E8 00000307		                        call Ghost6WallChecker
 000044BA  E9 0000011A		                        jmp MovementChecker            
 000044BF  BE 00000F07 R	        l3_r02_Handle:  mov esi,offset l3_r02
 000044C4  E8 000002F8		                        call Ghost6WallChecker
 000044C9  E9 0000010B		                        jmp MovementChecker
 000044CE  BE 00000F4E R	        l3_r03_Handle:  mov esi,offset l3_r03
 000044D3  E8 000002E9		                        call Ghost6WallChecker
 000044D8  E9 000000FC		                        jmp MovementChecker
 000044DD  BE 00000F95 R	        l3_r04_Handle:  mov esi,offset l3_r04
 000044E2  E8 000002DA		                        call Ghost6WallChecker
 000044E7  E9 000000ED		                        jmp MovementChecker
 000044EC  BE 00000FDC R	        l3_r05_Handle:  mov esi,offset l3_r05
 000044F1  E8 000002CB		                        call Ghost6WallChecker
 000044F6  E9 000000DE		                        jmp MovementChecker
 000044FB  BE 00001023 R	        l3_r06_Handle:  mov esi,offset l3_r06
 00004500  E8 000002BC		                        call Ghost6WallChecker
 00004505  E9 000000CF		                        jmp MovementChecker
 0000450A  BE 0000106A R	        l3_r07_Handle:  mov esi,offset l3_r07
 0000450F  E8 000002AD		                        call Ghost6WallChecker
 00004514  E9 000000C0		                        jmp MovementChecker
 00004519  BE 000010B1 R	        l3_r08_Handle:  mov esi,offset l3_r08
 0000451E  E8 0000029E		                        call Ghost6WallChecker
 00004523  E9 000000B1		                        jmp MovementChecker
 00004528  BE 000010F8 R	        l3_r09_Handle:  mov esi,offset l3_r09
 0000452D  E8 0000028F		                        call Ghost6WallChecker
 00004532  E9 000000A2		                        jmp MovementChecker
 00004537  BE 0000113F R	        l3_r10_Handle:  mov esi,offset l3_r10
 0000453C  E8 00000280		                        call Ghost6WallChecker
 00004541  E9 00000093		                        jmp MovementChecker
 00004546  BE 00001186 R	        l3_r11_Handle:  mov esi,offset l3_r11
 0000454B  E8 00000271		                        call Ghost6WallChecker
 00004550  E9 00000084		                        jmp MovementChecker
 00004555  BE 000011CD R	        l3_r12_Handle:  mov esi,offset l3_r12
 0000455A  E8 00000262		                        call Ghost6WallChecker
 0000455F  EB 78		                        jmp MovementChecker
 00004561  BE 00001214 R	        l3_r13_Handle:  mov esi,offset l3_r13
 00004566  E8 00000256		                        call Ghost6WallChecker
 0000456B  EB 6C		                        jmp MovementChecker
 0000456D  BE 0000125B R	        l3_r14_Handle:  mov esi,offset l3_r14
 00004572  E8 0000024A		                        call Ghost6WallChecker
 00004577  EB 60		                        jmp MovementChecker
 00004579  BE 000012A2 R	        l3_r15_Handle:  mov esi,offset l3_r15
 0000457E  E8 0000023E		                        call Ghost6WallChecker
 00004583  EB 54		                        jmp MovementChecker
 00004585  BE 000012E9 R	        l3_r16_Handle:  mov esi,offset l3_r16
 0000458A  E8 00000232		                        call Ghost6WallChecker
 0000458F  EB 48		                        jmp MovementChecker
 00004591  BE 00001330 R	        l3_r17_Handle:  mov esi,offset l3_r17
 00004596  E8 00000226		                        call Ghost6WallChecker
 0000459B  EB 3C		                        jmp MovementChecker
 0000459D  BE 00001377 R	        l3_r18_Handle:  mov esi,offset l3_r18
 000045A2  E8 0000021A		                        call Ghost6WallChecker
 000045A7  EB 30		                        jmp MovementChecker
 000045A9  BE 000013BE R	        l3_r19_Handle:  mov esi,offset l3_r19
 000045AE  E8 0000020E		                        call Ghost6WallChecker
 000045B3  EB 24		                        jmp MovementChecker
 000045B5  BE 00001405 R	        l3_r20_Handle:  mov esi,offset l3_r20
 000045BA  E8 00000202		                        call Ghost6WallChecker
 000045BF  EB 18		                        jmp MovementChecker
 000045C1  BE 0000144C R	        l3_r21_Handle:  mov esi,offset l3_r21
 000045C6  E8 000001F6		                        call Ghost6WallChecker
 000045CB  EB 0C		                        jmp MovementChecker
 000045CD  BE 00001493 R	        l3_r22_Handle:  mov esi,offset l3_r22
 000045D2  E8 000001EA		                        call Ghost6WallChecker
 000045D7  EB 00		                        jmp MovementChecker
 000045D9			        MovementChecker:
 000045D9  C3			    ret
 000045DA			Level3MovementUpGhost6 ENDP  
 000045DA			Level3MovementDownGhost6 PROC   

 000045DA  80 FF 00		        cmp bh,0
 000045DD  0F 84 000000B4	        je l3_r01_Handle  
 000045E3  80 FF 01		        cmp bh,1
 000045E6  0F 84 000000BA	        je l3_r02_Handle
 000045EC  80 FF 02		        cmp bh,2
 000045EF  0F 84 000000C0	        je l3_r03_Handle
 000045F5  80 FF 03		        cmp bh,3
 000045F8  0F 84 000000C6	        je l3_r04_Handle
 000045FE  80 FF 04		        cmp bh,4
 00004601  0F 84 000000CC	        je l3_r05_Handle
 00004607  80 FF 05		        cmp bh,5
 0000460A  0F 84 000000D2	        je l3_r06_Handle
 00004610  80 FF 06		        cmp bh,6
 00004613  0F 84 000000D8	        je l3_r07_Handle
 00004619  80 FF 07		        cmp bh,7
 0000461C  0F 84 000000DE	        je l3_r08_Handle
 00004622  80 FF 08		        cmp bh,8
 00004625  0F 84 000000E4	        je l3_r09_Handle
 0000462B  80 FF 09		        cmp bh,9
 0000462E  0F 84 000000EA	        je l3_r10_Handle
 00004634  80 FF 0A		        cmp bh,10
 00004637  0F 84 000000F0	        je l3_r11_Handle
 0000463D  80 FF 0B		        cmp bh,11
 00004640  0F 84 000000F6	        je l3_r12_Handle
 00004646  80 FF 0C		        cmp bh,12
 00004649  0F 84 000000F9	        je l3_r13_Handle
 0000464F  80 FF 0D		        cmp bh,13
 00004652  0F 84 000000FC	        je l3_r14_Handle
 00004658  80 FF 0E		        cmp bh,14
 0000465B  0F 84 000000FF	        je l3_r15_Handle
 00004661  80 FF 0F		        cmp bh,15
 00004664  0F 84 00000102	        je l3_r16_Handle
 0000466A  80 FF 10		        cmp bh,16
 0000466D  0F 84 00000105	        je l3_r17_Handle
 00004673  80 FF 11		        cmp bh,17
 00004676  0F 84 00000108	        je l3_r18_Handle
 0000467C  80 FF 12		        cmp bh,18
 0000467F  0F 84 0000010B	        je l3_r19_Handle
 00004685  80 FF 13		        cmp bh,19
 00004688  0F 84 0000010E        je l3_r20_Handle
 0000468E  80 FF 14		        cmp bh,20
 00004691  0F 84 00000111	        je l3_r21_Handle

 00004697  BE 00000EC0 R	        l3_r01_Handle:  mov esi,offset l3_r01
 0000469C  E8 00000120		                        call Ghost6WallChecker
 000046A1  E9 0000011A		                        jmp MovementChecker            
 000046A6  BE 00000F07 R	        l3_r02_Handle:  mov esi,offset l3_r02
 000046AB  E8 00000111		                        call Ghost6WallChecker
 000046B0  E9 0000010B		                        jmp MovementChecker
 000046B5  BE 00000F4E R	        l3_r03_Handle:  mov esi,offset l3_r03
 000046BA  E8 00000102		                        call Ghost6WallChecker
 000046BF  E9 000000FC		                        jmp MovementChecker
 000046C4  BE 00000F95 R	        l3_r04_Handle:  mov esi,offset l3_r04
 000046C9  E8 000000F3		                        call Ghost6WallChecker
 000046CE  E9 000000ED		                        jmp MovementChecker
 000046D3  BE 00000FDC R	        l3_r05_Handle:  mov esi,offset l3_r05
 000046D8  E8 000000E4		                        call Ghost6WallChecker
 000046DD  E9 000000DE		                        jmp MovementChecker
 000046E2  BE 00001023 R	        l3_r06_Handle:  mov esi,offset l3_r06
 000046E7  E8 000000D5		                        call Ghost6WallChecker
 000046EC  E9 000000CF		                        jmp MovementChecker
 000046F1  BE 0000106A R	        l3_r07_Handle:  mov esi,offset l3_r07
 000046F6  E8 000000C6		                        call Ghost6WallChecker
 000046FB  E9 000000C0		                        jmp MovementChecker
 00004700  BE 000010B1 R	        l3_r08_Handle:  mov esi,offset l3_r08
 00004705  E8 000000B7		                        call Ghost6WallChecker
 0000470A  E9 000000B1		                        jmp MovementChecker
 0000470F  BE 000010F8 R	        l3_r09_Handle:  mov esi,offset l3_r09
 00004714  E8 000000A8		                        call Ghost6WallChecker
 00004719  E9 000000A2		                        jmp MovementChecker
 0000471E  BE 0000113F R	        l3_r10_Handle:  mov esi,offset l3_r10
 00004723  E8 00000099		                        call Ghost6WallChecker
 00004728  E9 00000093		                        jmp MovementChecker
 0000472D  BE 00001186 R	        l3_r11_Handle:  mov esi,offset l3_r11
 00004732  E8 0000008A		                        call Ghost6WallChecker
 00004737  E9 00000084		                        jmp MovementChecker
 0000473C  BE 000011CD R	        l3_r12_Handle:  mov esi,offset l3_r12
 00004741  E8 0000007B		                        call Ghost6WallChecker
 00004746  EB 78		                        jmp MovementChecker
 00004748  BE 00001214 R	        l3_r13_Handle:  mov esi,offset l3_r13
 0000474D  E8 0000006F		                        call Ghost6WallChecker
 00004752  EB 6C		                        jmp MovementChecker
 00004754  BE 0000125B R	        l3_r14_Handle:  mov esi,offset l3_r14
 00004759  E8 00000063		                        call Ghost6WallChecker
 0000475E  EB 60		                        jmp MovementChecker
 00004760  BE 000012A2 R	        l3_r15_Handle:  mov esi,offset l3_r15
 00004765  E8 00000057		                        call Ghost6WallChecker
 0000476A  EB 54		                        jmp MovementChecker
 0000476C  BE 000012E9 R	        l3_r16_Handle:  mov esi,offset l3_r16
 00004771  E8 0000004B		                        call Ghost6WallChecker
 00004776  EB 48		                        jmp MovementChecker
 00004778  BE 00001330 R	        l3_r17_Handle:  mov esi,offset l3_r17
 0000477D  E8 0000003F		                        call Ghost6WallChecker
 00004782  EB 3C		                        jmp MovementChecker
 00004784  BE 00001377 R	        l3_r18_Handle:  mov esi,offset l3_r18
 00004789  E8 00000033		                        call Ghost6WallChecker
 0000478E  EB 30		                        jmp MovementChecker
 00004790  BE 000013BE R	        l3_r19_Handle:  mov esi,offset l3_r19
 00004795  E8 00000027		                        call Ghost6WallChecker
 0000479A  EB 24		                        jmp MovementChecker
 0000479C  BE 00001405 R	        l3_r20_Handle:  mov esi,offset l3_r20
 000047A1  E8 0000001B		                        call Ghost6WallChecker
 000047A6  EB 18		                        jmp MovementChecker
 000047A8  BE 0000144C R	        l3_r21_Handle:  mov esi,offset l3_r21
 000047AD  E8 0000000F		                        call Ghost6WallChecker
 000047B2  EB 0C		                        jmp MovementChecker
 000047B4  BE 00001493 R	        l3_r22_Handle:  mov esi,offset l3_r22
 000047B9  E8 00000003		                        call Ghost6WallChecker
 000047BE  EB 00		                        jmp MovementChecker
 000047C0			        MovementChecker:
 000047C0  C3			    ret
 000047C1			Level3MovementDownGhost6 ENDP  
 000047C1			Ghost6WallChecker PROC
 000047C1  B9 00000000		    mov ecx,0
 000047C6  8A CB		    mov cl,bl
 000047C8			    l3loop1:
 000047C8  46			    inc esi
 000047C9  E2 FD		    loop l3loop1

 000047CB  BA 00000000		    mov edx,0
 000047D0  8A 15 000002B1 R	    mov dl,wall
 000047D6  38 16		    cmp [esi],dl
 000047D8  75 07		    jne Replacer 
 000047DA  C6 05 000002A4 R	        mov Ghost6MovementPossibibly,0
	   00
 000047E1			    Replacer:
 000047E1			    EscapeReplacer:
 000047E1  C3			    ret
 000047E2			Ghost6WallChecker ENDP

 000047E2			Level3MovementLeftRightGhost7 PROC 

 000047E2  80 FF 01		        cmp bh,1
 000047E5  0F 84 000000B4	        je l3_r02_Handle  
 000047EB  80 FF 02		        cmp bh,2
 000047EE  0F 84 000000BA	        je l3_r03_Handle
 000047F4  80 FF 03		        cmp bh,3
 000047F7  0F 84 000000C0	        je l3_r04_Handle
 000047FD  80 FF 04		        cmp bh,4
 00004800  0F 84 000000C6	        je l3_r05_Handle
 00004806  80 FF 05		        cmp bh,5
 00004809  0F 84 000000CC	        je l3_r06_Handle
 0000480F  80 FF 06		        cmp bh,6
 00004812  0F 84 000000D2	        je l3_r07_Handle
 00004818  80 FF 07		        cmp bh,7
 0000481B  0F 84 000000D8	        je l3_r08_Handle
 00004821  80 FF 08		        cmp bh,8
 00004824  0F 84 000000DE	        je l3_r09_Handle
 0000482A  80 FF 09		        cmp bh,9
 0000482D  0F 84 000000E4	        je l3_r10_Handle
 00004833  80 FF 0A		        cmp bh,10
 00004836  0F 84 000000EA	        je l3_r11_Handle
 0000483C  80 FF 0B		        cmp bh,11
 0000483F  0F 84 000000F0	        je l3_r12_Handle
 00004845  80 FF 0C		        cmp bh,12
 00004848  0F 84 000000F3	        je l3_r13_Handle
 0000484E  80 FF 0D		        cmp bh,13
 00004851  0F 84 000000F6	        je l3_r14_Handle
 00004857  80 FF 0E		        cmp bh,14
 0000485A  0F 84 000000F9	        je l3_r15_Handle
 00004860  80 FF 0F		        cmp bh,15
 00004863  0F 84 000000FC	        je l3_r16_Handle
 00004869  80 FF 10		        cmp bh,16
 0000486C  0F 84 000000FF	        je l3_r17_Handle
 00004872  80 FF 11		        cmp bh,17
 00004875  0F 84 00000102	        je l3_r18_Handle
 0000487B  80 FF 12		        cmp bh,18
 0000487E  0F 84 00000105	        je l3_r19_Handle
 00004884  80 FF 13		        cmp bh,19
 00004887  0F 84 00000108	        je l3_r20_Handle
 0000488D  80 FF 14		        cmp bh,20
 00004890  0F 84 0000010B	        je l3_r21_Handle
 00004896  80 FF 15		        cmp bh,21
 00004899  0F 84 0000010E	        je l3_r22_Handle
				            
 0000489F  BE 00000F07 R	        l3_r02_Handle:  mov esi,offset l3_r02
 000048A4  E8 000004DF		                        call Ghost7WallChecker
 000048A9  E9 0000010B		                        jmp MovementChecker
 000048AE  BE 00000F4E R	        l3_r03_Handle:  mov esi,offset l3_r03
 000048B3  E8 000004D0		                        call Ghost7WallChecker
 000048B8  E9 000000FC		                        jmp MovementChecker
 000048BD  BE 00000F95 R	        l3_r04_Handle:  mov esi,offset l3_r04
 000048C2  E8 000004C1		                        call Ghost7WallChecker
 000048C7  E9 000000ED		                        jmp MovementChecker
 000048CC  BE 00000FDC R	        l3_r05_Handle:  mov esi,offset l3_r05
 000048D1  E8 000004B2		                        call Ghost7WallChecker
 000048D6  E9 000000DE		                        jmp MovementChecker
 000048DB  BE 00001023 R	        l3_r06_Handle:  mov esi,offset l3_r06
 000048E0  E8 000004A3		                        call Ghost7WallChecker
 000048E5  E9 000000CF		                        jmp MovementChecker
 000048EA  BE 0000106A R	        l3_r07_Handle:  mov esi,offset l3_r07
 000048EF  E8 00000494		                        call Ghost7WallChecker
 000048F4  E9 000000C0		                        jmp MovementChecker
 000048F9  BE 000010B1 R	        l3_r08_Handle:  mov esi,offset l3_r08
 000048FE  E8 00000485		                        call Ghost7WallChecker
 00004903  E9 000000B1		                        jmp MovementChecker
 00004908  BE 000010F8 R	        l3_r09_Handle:  mov esi,offset l3_r09
 0000490D  E8 00000476		                        call Ghost7WallChecker
 00004912  E9 000000A2		                        jmp MovementChecker
 00004917  BE 0000113F R	        l3_r10_Handle:  mov esi,offset l3_r10
 0000491C  E8 00000467		                        call Ghost7WallChecker
 00004921  E9 00000093		                        jmp MovementChecker
 00004926  BE 00001186 R	        l3_r11_Handle:  mov esi,offset l3_r11
 0000492B  E8 00000458		                        call Ghost7WallChecker
 00004930  E9 00000084		                        jmp MovementChecker
 00004935  BE 000011CD R	        l3_r12_Handle:  mov esi,offset l3_r12
 0000493A  E8 00000449		                        call Ghost7WallChecker
 0000493F  EB 78		                        jmp MovementChecker
 00004941  BE 00001214 R	        l3_r13_Handle:  mov esi,offset l3_r13
 00004946  E8 0000043D		                        call Ghost7WallChecker
 0000494B  EB 6C		                        jmp MovementChecker
 0000494D  BE 0000125B R	        l3_r14_Handle:  mov esi,offset l3_r14
 00004952  E8 00000431		                        call Ghost7WallChecker
 00004957  EB 60		                        jmp MovementChecker
 00004959  BE 000012A2 R	        l3_r15_Handle:  mov esi,offset l3_r15
 0000495E  E8 00000425		                        call Ghost7WallChecker
 00004963  EB 54		                        jmp MovementChecker
 00004965  BE 000012E9 R	        l3_r16_Handle:  mov esi,offset l3_r16
 0000496A  E8 00000419		                        call Ghost7WallChecker
 0000496F  EB 48		                        jmp MovementChecker
 00004971  BE 00001330 R	        l3_r17_Handle:  mov esi,offset l3_r17
 00004976  E8 0000040D		                        call Ghost7WallChecker
 0000497B  EB 3C		                        jmp MovementChecker
 0000497D  BE 00001377 R	        l3_r18_Handle:  mov esi,offset l3_r18
 00004982  E8 00000401		                        call Ghost7WallChecker
 00004987  EB 30		                        jmp MovementChecker
 00004989  BE 000013BE R	        l3_r19_Handle:  mov esi,offset l3_r19
 0000498E  E8 000003F5		                        call Ghost7WallChecker
 00004993  EB 24		                        jmp MovementChecker
 00004995  BE 00001405 R	        l3_r20_Handle:  mov esi,offset l3_r20
 0000499A  E8 000003E9		                        call Ghost7WallChecker
 0000499F  EB 18		                        jmp MovementChecker
 000049A1  BE 0000144C R	        l3_r21_Handle:  mov esi,offset l3_r21
 000049A6  E8 000003DD		                        call Ghost7WallChecker
 000049AB  EB 0C		                        jmp MovementChecker
 000049AD  BE 00001493 R	        l3_r22_Handle:  mov esi,offset l3_r22
 000049B2  E8 000003D1		                        call Ghost7WallChecker
 000049B7  EB 00		                        jmp MovementChecker

 000049B9			        MovementChecker:
 000049B9  C3			    ret
 000049BA			Level3MovementLeftRightGhost7 ENDP    
 000049BA			Level3MovementUpGhost7 PROC   

 000049BA  80 FF 00		        cmp bh,0
 000049BD  0F 84 000000B4	        je l3_r01_Handle  
 000049C3  80 FF 01		        cmp bh,1
 000049C6  0F 84 000000BA	        je l3_r02_Handle
 000049CC  80 FF 02		        cmp bh,2
 000049CF  0F 84 000000C0	        je l3_r03_Handle
 000049D5  80 FF 03		        cmp bh,3
 000049D8  0F 84 000000C6	        je l3_r04_Handle
 000049DE  80 FF 04		        cmp bh,4
 000049E1  0F 84 000000CC	        je l3_r05_Handle
 000049E7  80 FF 05		        cmp bh,5
 000049EA  0F 84 000000D2	        je l3_r06_Handle
 000049F0  80 FF 06		        cmp bh,6
 000049F3  0F 84 000000D8	        je l3_r07_Handle
 000049F9  80 FF 07		        cmp bh,7
 000049FC  0F 84 000000DE	        je l3_r08_Handle
 00004A02  80 FF 08		        cmp bh,8
 00004A05  0F 84 000000E4	        je l3_r09_Handle
 00004A0B  80 FF 09		        cmp bh,9
 00004A0E  0F 84 000000EA	        je l3_r10_Handle
 00004A14  80 FF 0A		        cmp bh,10
 00004A17  0F 84 000000F0	        je l3_r11_Handle
 00004A1D  80 FF 0B		        cmp bh,11
 00004A20  0F 84 000000F6	        je l3_r12_Handle
 00004A26  80 FF 0C		        cmp bh,12
 00004A29  0F 84 000000F9	        je l3_r13_Handle
 00004A2F  80 FF 0D		        cmp bh,13
 00004A32  0F 84 000000FC	        je l3_r14_Handle
 00004A38  80 FF 0E		        cmp bh,14
 00004A3B  0F 84 000000FF	        je l3_r15_Handle
 00004A41  80 FF 0F		        cmp bh,15
 00004A44  0F 84 00000102	        je l3_r16_Handle
 00004A4A  80 FF 10		        cmp bh,16
 00004A4D  0F 84 00000105	        je l3_r17_Handle
 00004A53  80 FF 11		        cmp bh,17
 00004A56  0F 84 00000108	        je l3_r18_Handle
 00004A5C  80 FF 12		        cmp bh,18
 00004A5F  0F 84 0000010B	        je l3_r19_Handle
 00004A65  80 FF 13		        cmp bh,19
 00004A68  0F 84 0000010E	        je l3_r20_Handle
 00004A6E  80 FF 14		        cmp bh,20
 00004A71  0F 84 00000111	        je l3_r21_Handle

 00004A77  BE 00000EC0 R	        l3_r01_Handle:  mov esi,offset l3_r01
 00004A7C  E8 00000307		                        call Ghost7WallChecker
 00004A81  E9 0000011A		                        jmp MovementChecker            
 00004A86  BE 00000F07 R	        l3_r02_Handle:  mov esi,offset l3_r02
 00004A8B  E8 000002F8		                        call Ghost7WallChecker
 00004A90  E9 0000010B		                        jmp MovementChecker
 00004A95  BE 00000F4E R	        l3_r03_Handle:  mov esi,offset l3_r03
 00004A9A  E8 000002E9		                        call Ghost7WallChecker
 00004A9F  E9 000000FC		                        jmp MovementChecker
 00004AA4  BE 00000F95 R	        l3_r04_Handle:  mov esi,offset l3_r04
 00004AA9  E8 000002DA		                        call Ghost7WallChecker
 00004AAE  E9 000000ED		                        jmp MovementChecker
 00004AB3  BE 00000FDC R	        l3_r05_Handle:  mov esi,offset l3_r05
 00004AB8  E8 000002CB		                        call Ghost7WallChecker
 00004ABD  E9 000000DE		                        jmp MovementChecker
 00004AC2  BE 00001023 R	        l3_r06_Handle:  mov esi,offset l3_r06
 00004AC7  E8 000002BC		                        call Ghost7WallChecker
 00004ACC  E9 000000CF		                        jmp MovementChecker
 00004AD1  BE 0000106A R	        l3_r07_Handle:  mov esi,offset l3_r07
 00004AD6  E8 000002AD		                        call Ghost7WallChecker
 00004ADB  E9 000000C0		                        jmp MovementChecker
 00004AE0  BE 000010B1 R	        l3_r08_Handle:  mov esi,offset l3_r08
 00004AE5  E8 0000029E		                        call Ghost7WallChecker
 00004AEA  E9 000000B1		                        jmp MovementChecker
 00004AEF  BE 000010F8 R	        l3_r09_Handle:  mov esi,offset l3_r09
 00004AF4  E8 0000028F		                        call Ghost7WallChecker
 00004AF9  E9 000000A2		                        jmp MovementChecker
 00004AFE  BE 0000113F R	        l3_r10_Handle:  mov esi,offset l3_r10
 00004B03  E8 00000280		                        call Ghost7WallChecker
 00004B08  E9 00000093		                        jmp MovementChecker
 00004B0D  BE 00001186 R	        l3_r11_Handle:  mov esi,offset l3_r11
 00004B12  E8 00000271		                        call Ghost7WallChecker
 00004B17  E9 00000084		                        jmp MovementChecker
 00004B1C  BE 000011CD R	        l3_r12_Handle:  mov esi,offset l3_r12
 00004B21  E8 00000262		                        call Ghost7WallChecker
 00004B26  EB 78		                        jmp MovementChecker
 00004B28  BE 00001214 R	        l3_r13_Handle:  mov esi,offset l3_r13
 00004B2D  E8 00000256		                        call Ghost7WallChecker
 00004B32  EB 6C		                        jmp MovementChecker
 00004B34  BE 0000125B R	        l3_r14_Handle:  mov esi,offset l3_r14
 00004B39  E8 0000024A		                        call Ghost7WallChecker
 00004B3E  EB 60		                        jmp MovementChecker
 00004B40  BE 000012A2 R	        l3_r15_Handle:  mov esi,offset l3_r15
 00004B45  E8 0000023E		                        call Ghost7WallChecker
 00004B4A  EB 54		                        jmp MovementChecker
 00004B4C  BE 000012E9 R	        l3_r16_Handle:  mov esi,offset l3_r16
 00004B51  E8 00000232		                        call Ghost7WallChecker
 00004B56  EB 48		                        jmp MovementChecker
 00004B58  BE 00001330 R	        l3_r17_Handle:  mov esi,offset l3_r17
 00004B5D  E8 00000226		                        call Ghost7WallChecker
 00004B62  EB 3C		                        jmp MovementChecker
 00004B64  BE 00001377 R	        l3_r18_Handle:  mov esi,offset l3_r18
 00004B69  E8 0000021A		                        call Ghost7WallChecker
 00004B6E  EB 30		                        jmp MovementChecker
 00004B70  BE 000013BE R	        l3_r19_Handle:  mov esi,offset l3_r19
 00004B75  E8 0000020E		                        call Ghost7WallChecker
 00004B7A  EB 24		                        jmp MovementChecker
 00004B7C  BE 00001405 R	        l3_r20_Handle:  mov esi,offset l3_r20
 00004B81  E8 00000202		                        call Ghost7WallChecker
 00004B86  EB 18		                        jmp MovementChecker
 00004B88  BE 0000144C R	        l3_r21_Handle:  mov esi,offset l3_r21
 00004B8D  E8 000001F6		                        call Ghost7WallChecker
 00004B92  EB 0C		                        jmp MovementChecker
 00004B94  BE 00001493 R	        l3_r22_Handle:  mov esi,offset l3_r22
 00004B99  E8 000001EA		                        call Ghost7WallChecker
 00004B9E  EB 00		                        jmp MovementChecker
 00004BA0			        MovementChecker:
 00004BA0  C3			    ret
 00004BA1			Level3MovementUpGhost7 ENDP  
 00004BA1			Level3MovementDownGhost7 PROC   

 00004BA1  80 FF 00		        cmp bh,0
 00004BA4  0F 84 000000B4	        je l3_r01_Handle  
 00004BAA  80 FF 01		        cmp bh,1
 00004BAD  0F 84 000000BA	        je l3_r02_Handle
 00004BB3  80 FF 02		        cmp bh,2
 00004BB6  0F 84 000000C0	        je l3_r03_Handle
 00004BBC  80 FF 03		        cmp bh,3
 00004BBF  0F 84 000000C6	        je l3_r04_Handle
 00004BC5  80 FF 04		        cmp bh,4
 00004BC8  0F 84 000000CC	        je l3_r05_Handle
 00004BCE  80 FF 05		        cmp bh,5
 00004BD1  0F 84 000000D2	        je l3_r06_Handle
 00004BD7  80 FF 06		        cmp bh,6
 00004BDA  0F 84 000000D8	        je l3_r07_Handle
 00004BE0  80 FF 07		        cmp bh,7
 00004BE3  0F 84 000000DE	        je l3_r08_Handle
 00004BE9  80 FF 08		        cmp bh,8
 00004BEC  0F 84 000000E4	        je l3_r09_Handle
 00004BF2  80 FF 09		        cmp bh,9
 00004BF5  0F 84 000000EA	        je l3_r10_Handle
 00004BFB  80 FF 0A		        cmp bh,10
 00004BFE  0F 84 000000F0	        je l3_r11_Handle
 00004C04  80 FF 0B		        cmp bh,11
 00004C07  0F 84 000000F6	        je l3_r12_Handle
 00004C0D  80 FF 0C		        cmp bh,12
 00004C10  0F 84 000000F9	        je l3_r13_Handle
 00004C16  80 FF 0D		        cmp bh,13
 00004C19  0F 84 000000FC	        je l3_r14_Handle
 00004C1F  80 FF 0E		        cmp bh,14
 00004C22  0F 84 000000FF	        je l3_r15_Handle
 00004C28  80 FF 0F		        cmp bh,15
 00004C2B  0F 84 00000102	        je l3_r16_Handle
 00004C31  80 FF 10		        cmp bh,16
 00004C34  0F 84 00000105	        je l3_r17_Handle
 00004C3A  80 FF 11		        cmp bh,17
 00004C3D  0F 84 00000108	        je l3_r18_Handle
 00004C43  80 FF 12		        cmp bh,18
 00004C46  0F 84 0000010B	        je l3_r19_Handle
 00004C4C  80 FF 13		        cmp bh,19
 00004C4F  0F 84 0000010E	        je l3_r20_Handle
 00004C55  80 FF 14		        cmp bh,20
 00004C58  0F 84 00000111	        je l3_r21_Handle

 00004C5E  BE 00000EC0 R	        l3_r01_Handle:  mov esi,offset l3_r01
 00004C63  E8 00000120		                        call Ghost7WallChecker
 00004C68  E9 0000011A		                        jmp MovementChecker            
 00004C6D  BE 00000F07 R	        l3_r02_Handle:  mov esi,offset l3_r02
 00004C72  E8 00000111		                        call Ghost7WallChecker
 00004C77  E9 0000010B		                        jmp MovementChecker
 00004C7C  BE 00000F4E R	        l3_r03_Handle:  mov esi,offset l3_r03
 00004C81  E8 00000102		                        call Ghost7WallChecker
 00004C86  E9 000000FC		                        jmp MovementChecker
 00004C8B  BE 00000F95 R	        l3_r04_Handle:  mov esi,offset l3_r04
 00004C90  E8 000000F3		                        call Ghost7WallChecker
 00004C95  E9 000000ED		                        jmp MovementChecker
 00004C9A  BE 00000FDC R	        l3_r05_Handle:  mov esi,offset l3_r05
 00004C9F  E8 000000E4		                        call Ghost7WallChecker
 00004CA4  E9 000000DE		                        jmp MovementChecker
 00004CA9  BE 00001023 R	        l3_r06_Handle:  mov esi,offset l3_r06
 00004CAE  E8 000000D5		                        call Ghost7WallChecker
 00004CB3  E9 000000CF		                        jmp MovementChecker
 00004CB8  BE 0000106A R	        l3_r07_Handle:  mov esi,offset l3_r07
 00004CBD  E8 000000C6		                        call Ghost7WallChecker
 00004CC2  E9 000000C0		                        jmp MovementChecker
 00004CC7  BE 000010B1 R	        l3_r08_Handle:  mov esi,offset l3_r08
 00004CCC  E8 000000B7		                        call Ghost7WallChecker
 00004CD1  E9 000000B1		                        jmp MovementChecker
 00004CD6  BE 000010F8 R	        l3_r09_Handle:  mov esi,offset l3_r09
 00004CDB  E8 000000A8		                        call Ghost7WallChecker
 00004CE0  E9 000000A2		                        jmp MovementChecker
 00004CE5  BE 0000113F R	        l3_r10_Handle:  mov esi,offset l3_r10
 00004CEA  E8 00000099		                        call Ghost7WallChecker
 00004CEF  E9 00000093		                        jmp MovementChecker
 00004CF4  BE 00001186 R	        l3_r11_Handle:  mov esi,offset l3_r11
 00004CF9  E8 0000008A		                        call Ghost7WallChecker
 00004CFE  E9 00000084		                        jmp MovementChecker
 00004D03  BE 000011CD R	        l3_r12_Handle:  mov esi,offset l3_r12
 00004D08  E8 0000007B		                        call Ghost7WallChecker
 00004D0D  EB 78		                        jmp MovementChecker
 00004D0F  BE 00001214 R	        l3_r13_Handle:  mov esi,offset l3_r13
 00004D14  E8 0000006F		                        call Ghost7WallChecker
 00004D19  EB 6C		                        jmp MovementChecker
 00004D1B  BE 0000125B R	        l3_r14_Handle:  mov esi,offset l3_r14
 00004D20  E8 00000063		                        call Ghost7WallChecker
 00004D25  EB 60		                        jmp MovementChecker
 00004D27  BE 000012A2 R	        l3_r15_Handle:  mov esi,offset l3_r15
 00004D2C  E8 00000057		                        call Ghost7WallChecker
 00004D31  EB 54		                        jmp MovementChecker
 00004D33  BE 000012E9 R	        l3_r16_Handle:  mov esi,offset l3_r16
 00004D38  E8 0000004B		                        call Ghost7WallChecker
 00004D3D  EB 48		                        jmp MovementChecker
 00004D3F  BE 00001330 R	        l3_r17_Handle:  mov esi,offset l3_r17
 00004D44  E8 0000003F		                        call Ghost7WallChecker
 00004D49  EB 3C		                        jmp MovementChecker
 00004D4B  BE 00001377 R	        l3_r18_Handle:  mov esi,offset l3_r18
 00004D50  E8 00000033		                        call Ghost7WallChecker
 00004D55  EB 30		                        jmp MovementChecker
 00004D57  BE 000013BE R	        l3_r19_Handle:  mov esi,offset l3_r19
 00004D5C  E8 00000027		                        call Ghost7WallChecker
 00004D61  EB 24		                        jmp MovementChecker
 00004D63  BE 00001405 R	        l3_r20_Handle:  mov esi,offset l3_r20
 00004D68  E8 0000001B		                        call Ghost7WallChecker
 00004D6D  EB 18		                        jmp MovementChecker
 00004D6F  BE 0000144C R	        l3_r21_Handle:  mov esi,offset l3_r21
 00004D74  E8 0000000F		                        call Ghost7WallChecker
 00004D79  EB 0C		                        jmp MovementChecker
 00004D7B  BE 00001493 R	        l3_r22_Handle:  mov esi,offset l3_r22
 00004D80  E8 00000003		                        call Ghost7WallChecker
 00004D85  EB 00		                        jmp MovementChecker
 00004D87			        MovementChecker:
 00004D87  C3			    ret
 00004D88			Level3MovementDownGhost7 ENDP  
 00004D88			Ghost7WallChecker PROC
 00004D88  B9 00000000		    mov ecx,0
 00004D8D  8A CB		    mov cl,bl
 00004D8F			    l3loop1:
 00004D8F  46			    inc esi
 00004D90  E2 FD		    loop l3loop1

 00004D92  BA 00000000		    mov edx,0
 00004D97  8A 15 000002B1 R	    mov dl,wall
 00004D9D  38 16		    cmp [esi],dl
 00004D9F  75 07		    jne Replacer 
 00004DA1  C6 05 000002A6 R	        mov Ghost7MovementPossibibly,0
	   00
 00004DA8			    Replacer:
 00004DA8			    EscapeReplacer:
 00004DA8  C3			    ret
 00004DA9			Ghost7WallChecker ENDP

				;----------------------------------------------(Player)----------------------------------------------
				;------------------------------------------------------------------------------------

 00004DA9			DrawPlayer PROC
				    ; draw player at (xPos,yPos):
 00004DA9  B8 00000000		    mov eax,0
 00004DAE  B0 E4		    mov al,red (yellow*16)
 00004DB0  E8 00000000 E	    call SetTextColor
 00004DB5  8A 15 000002AE R	    mov dl,xPos
 00004DBB  8A 35 000002AF R	    mov dh,yPos
 00004DC1  E8 00000000 E	    call Gotoxy
 00004DC6  B0 40		    mov al,'@'
 00004DC8  E8 00000000 E	    call WriteChar
 00004DCD  C3			    ret
 00004DCE			DrawPlayer ENDP
 00004DCE			UpdatePlayer PROC
 00004DCE  B0 00		    mov al,black (black*16)
 00004DD0  E8 00000000 E	    call SetTextColor
 00004DD5  8A 15 000002AE R	    mov dl,xPos
 00004DDB  8A 35 000002AF R	    mov dh,yPos
 00004DE1  E8 00000000 E	    call Gotoxy
 00004DE6  B0 20		    mov al," "
 00004DE8  E8 00000000 E	    call WriteChar
 00004DED  C3			    ret
 00004DEE			UpdatePlayer ENDP

 00004DEE			Level1Intersection PROC 
					
 00004DEE  B8 00000000			mov eax,0
 00004DF3  BB 00000000			mov ebx,0
 00004DF8  A0 000002AE R		mov al,xPos
 00004DFD  8A 25 000002AF R		mov ah,yPos
 00004E03  8A 1D 000002BB R		mov bl,xG1Pos
 00004E09  8A 3D 000002BC R		mov bh,yG1Pos
 00004E0F  3A C3			cmp al,bl
 00004E11  75 30			jne skip
 00004E13  3A E7			cmp ah,bh
 00004E15  75 2C			jne skip
 00004E17  FE 0D 0000005E R		dec livesIndicator
 00004E1D  80 3D 0000005E R	    cmp livesIndicator,0
	   00
 00004E24  0F 84 FFFFBD9E	    je EndScreen    
 00004E2A  B8 000000C8		    mov eax,200
 00004E2F  E8 00000000 E	    call delay
 00004E34  E8 00001731		    call Level1Maze 
 00004E39  B8 000000C8		    mov eax,200
 00004E3E  E8 00000000 E	    call delay
 00004E43				skip:

 00004E43  C3				ret
 00004E44			Level1Intersection ENDP 
 00004E44			Level2Intersection PROC 
					
 00004E44  B8 00000000			mov eax,0
 00004E49  BB 00000000			mov ebx,0
 00004E4E  A0 000002AE R		mov al,xPos
 00004E53  8A 25 000002AF R		mov ah,yPos
 00004E59  8A 1D 000002BD R		mov bl,xG2Pos
 00004E5F  8A 3D 000002BE R		mov bh,yG2Pos
 00004E65  3A C3			cmp al,bl
 00004E67  75 26			jne skip1
 00004E69  3A E7			cmp ah,bh
 00004E6B  75 22			jne skip1
 00004E6D  FE 0D 0000005E R		dec livesIndicator
 00004E73  80 3D 0000005E R	    cmp livesIndicator,0
	   00
 00004E7A  0F 84 FFFFBD48	    je EndScreen 
 00004E80  B8 000000C8		    mov eax,200
 00004E85  E8 00000000 E	    call delay
 00004E8A  E8 00001734		    call Level2Maze 

 00004E8F				skip1:
 00004E8F  8A 1D 000002BF R		mov bl,xG3Pos
 00004E95  8A 3D 000002C0 R		mov bh,yG3Pos
 00004E9B  3A C3			cmp al,bl
 00004E9D  75 26			jne skip2
 00004E9F  3A E7			cmp ah,bh
 00004EA1  75 22			jne skip2
 00004EA3  FE 0D 0000005E R		dec livesIndicator
 00004EA9  80 3D 0000005E R	    cmp livesIndicator,0
	   00
 00004EB0  0F 84 FFFFBD12	    je EndScreen 
 00004EB6  B8 000000C8		    mov eax,200
 00004EBB  E8 00000000 E	    call delay
 00004EC0  E8 000016FE		    call Level2Maze 
 00004EC5				skip2:

 00004EC5  C3				ret
 00004EC6			Level2Intersection ENDP 
 00004EC6			Level3Intersection PROC 
					
 00004EC6  B8 00000000			mov eax,0
 00004ECB  BB 00000000			mov ebx,0
 00004ED0  A0 000002AE R		mov al,xPos
 00004ED5  8A 25 000002AF R		mov ah,yPos
 00004EDB  8A 1D 000002C1 R		mov bl,xG4Pos
 00004EE1  8A 3D 000002C2 R		mov bh,yG4Pos
 00004EE7  3A C3			cmp al,bl
 00004EE9  75 26			jne skip1
 00004EEB  3A E7			cmp ah,bh
 00004EED  75 22			jne skip1
 00004EEF  FE 0D 0000005E R		dec livesIndicator
 00004EF5  80 3D 0000005E R	    cmp livesIndicator,0
	   00
 00004EFC  0F 84 FFFFBCC6	    je EndScreen 
 00004F02  B8 000000C8		    mov eax,200
 00004F07  E8 00000000 E	    call delay
 00004F0C  E8 0000173E		    call Level3Maze 

 00004F11				skip1:
 00004F11  8A 1D 000002C3 R		mov bl,xG5Pos
 00004F17  8A 3D 000002C4 R		mov bh,yG5Pos
 00004F1D  3A C3			cmp al,bl
 00004F1F  75 26			jne skip2
 00004F21  3A E7			cmp ah,bh
 00004F23  75 22			jne skip2
 00004F25  FE 0D 0000005E R		dec livesIndicator
 00004F2B  80 3D 0000005E R	    cmp livesIndicator,0
	   00
 00004F32  0F 84 FFFFBC90	    je EndScreen 
 00004F38  B8 000000C8		    mov eax,200
 00004F3D  E8 00000000 E	    call delay
 00004F42  E8 00001708		    call Level3Maze 

 00004F47				skip2:
 00004F47  8A 1D 000002C5 R		mov bl,xG6Pos
 00004F4D  8A 3D 000002C6 R		mov bh,yG6Pos
 00004F53  3A C3			cmp al,bl
 00004F55  75 26			jne skip3
 00004F57  3A E7			cmp ah,bh
 00004F59  75 22			jne skip3
 00004F5B  FE 0D 0000005E R		dec livesIndicator
 00004F61  80 3D 0000005E R	    cmp livesIndicator,0
	   00
 00004F68  0F 84 FFFFBC5A	    je EndScreen 
 00004F6E  B8 000000C8		    mov eax,200
 00004F73  E8 00000000 E	    call delay
 00004F78  E8 000016D2		    call Level3Maze 
 00004F7D				skip3:
 00004F7D  8A 1D 000002C7 R		mov bl,xG7Pos
 00004F83  8A 3D 000002C8 R		mov bh,yG7Pos
 00004F89  3A C3			cmp al,bl
 00004F8B  75 26			jne skip4
 00004F8D  3A E7			cmp ah,bh
 00004F8F  75 22			jne skip4
 00004F91  FE 0D 0000005E R		dec livesIndicator
 00004F97  80 3D 0000005E R	    cmp livesIndicator,0
	   00
 00004F9E  0F 84 FFFFBC24	    je EndScreen 
 00004FA4  B8 000000C8		    mov eax,200
 00004FA9  E8 00000000 E	    call delay
 00004FAE  E8 0000169C		    call Level3Maze 
 00004FB3				skip4:

 00004FB3  C3				ret
 00004FB4			Level3Intersection ENDP 

 00004FB4			PlayerMovement1 PROC 
 00004FB4  C6 05 00000298 R	        mov PlayerMovement1Possibibly,1
	   01
 00004FBB  E8 FFFFFE2E		        call Level1Intersection 
 00004FC0			        LookForKey:
				            
 00004FC0  A1 00000000 R	            mov  eax,speed1    ;   1000=1sec
 00004FC5  E8 00000000 E	            call Delay
				           ; INVOKE PlaySound, OFFSET musicChomp, NULL, SND_FILENAME
 00004FCA  E8 00000000 E	            call ReadKey         ; look for keyboard input
 00004FCF  A2 000002B0 R	            mov inputChar,al
 00004FD4  75 2C		            jnz MovementcheckerCharacter
				        ;call ReadChar
 00004FD6  80 3D 00000297 R	        cmp PlayerDirectionHandle,1
	   01
 00004FDD  74 5A		        je L1moveRight
 00004FDF  80 3D 00000297 R	        cmp PlayerDirectionHandle,2
	   02
 00004FE6  74 75		        je L1moveLeft
 00004FE8  80 3D 00000297 R	        cmp PlayerDirectionHandle,3
	   03
 00004FEF  0F 84 0000008C	        je L1moveUp
 00004FF5  80 3D 00000297 R	        cmp PlayerDirectionHandle,4
	   04
 00004FFC  0F 84 0000009D	        je L1MoveDown

 00005002			        MovementcheckerCharacter:
 00005002  80 3D 000002B0 R	        cmp inputChar,"d"
	   64
 00005009  74 2E		        je L1moveRight
 0000500B  80 3D 000002B0 R	        cmp inputChar,"a"
	   61
 00005012  74 49		        je L1moveLeft
 00005014  80 3D 000002B0 R	        cmp inputChar,"w"
	   77
 0000501B  74 64		        je L1moveUp
 0000501D  80 3D 000002B0 R	        cmp inputChar,"s"
	   73
 00005024  74 79		        je L1MoveDown
 00005026  80 3D 000002B0 R	        cmp inputChar,"p"
	   70
 0000502D  E8 00000000 E	        call readchar
 00005032  EB 8C		        jmp LookForKey

 00005034  E9 00000084		        jmp L1SkipLeftRight

 00005039			        L1moveRight:
 00005039  E8 FFFFFD90		            call UpdatePlayer
 0000503E  FE 05 000002AE R	            inc xPos
 00005044  FE 05 000002AE R	            inc xPos
 0000504A  C6 05 00000297 R	            mov PlayerDirectionHandle,1
	   01
 00005051  E8 FFFFC452		            call CoordinaterUpdator
 00005056  E8 000000BE		            call Level1MovementLeftRight 
 0000505B  EB 60		            jmp L1SkipLeftRight

 0000505D			        L1moveLeft:
 0000505D  E8 FFFFFD6C		            call UpdatePlayer
 00005062  FE 0D 000002AE R	            dec xPos
 00005068  FE 0D 000002AE R	            dec xPos
 0000506E  C6 05 00000297 R	            mov PlayerDirectionHandle,2
	   02
 00005075  E8 FFFFC42E		            call CoordinaterUpdator
 0000507A  E8 0000009A		            call Level1MovementLeftRight 
 0000507F  EB 3C		            jmp L1SkipLeftRight

 00005081			        L1moveUp:
 00005081  E8 FFFFFD48		            call UpdatePlayer
 00005086  FE 0D 000002AF R	            dec yPos
 0000508C  C6 05 00000297 R	            mov PlayerDirectionHandle,3
	   03
 00005093  E8 FFFFC410		            call CoordinaterUpdator
 00005098  E8 00000254		            call Level1MovementUp
 0000509D  EB 1E		            jmp L1SkipLeftRight

 0000509F			        L1MoveDown:
 0000509F  E8 FFFFFD2A		            call UpdatePlayer
 000050A4  FE 05 000002AF R	            inc yPos
 000050AA  C6 05 00000297 R	            mov PlayerDirectionHandle,4
	   04
 000050B1  E8 FFFFC3F2		            call CoordinaterUpdator
 000050B6  E8 0000041D		            call Level1MovementDown
 000050BB  EB 00		            jmp L1SkipLeftRight

 000050BD			        L1SkipLeftRight:

				       

 000050BD  80 3D 00000298 R	        cmp PlayerMovement1Possibibly,0
	   00
 000050C4  74 02		        je PlayerMovement1Fixer
 000050C6  EB 50		        jmp SkipMovementFixer

 000050C8			        PlayerMovement1Fixer:
 000050C8  80 3D 00000297 R	        cmp PlayerDirectionHandle,1
	   01
 000050CF  74 1D		        je RightFixer
 000050D1  80 3D 00000297 R	        cmp PlayerDirectionHandle,2
	   02
 000050D8  74 22		        je LeftFixer
 000050DA  80 3D 00000297 R	        cmp PlayerDirectionHandle,3
	   03
 000050E1  74 27		        je UpFixer
 000050E3  80 3D 00000297 R	        cmp PlayerDirectionHandle,4
	   04
 000050EA  74 26		        je DownFixer
 000050EC  EB 2A		        jmp SkipMovementFixer

 000050EE  FE 0D 000002AE R	        RightFixer: dec xPos
 000050F4  FE 0D 000002AE R	                    dec xPos
 000050FA  EB 1C		                    jmp SkipMovementFixer
 000050FC  FE 05 000002AE R	        LeftFixer:  inc xPos
 00005102  FE 05 000002AE R	                    inc xPos
 00005108  EB 0E		                    jmp SkipMovementFixer
 0000510A  FE 05 000002AF R	        UpFixer:    inc yPos
 00005110  EB 06		                    jmp SkipMovementFixer
 00005112  FE 0D 000002AF R	        DownFixer:  dec yPos

 00005118			        SkipMovementFixer:
 00005118  C3			    ret
 00005119			PlayerMovement1 ENDP 
 00005119			Level1MovementLeftRight PROC 

 00005119  80 FF 01		        cmp bh,1
 0000511C  0F 84 000000B4	        je l1_r02_Handle  
 00005122  80 FF 02		        cmp bh,2
 00005125  0F 84 000000BA	        je l1_r03_Handle
 0000512B  80 FF 03		        cmp bh,3
 0000512E  0F 84 000000C0	        je l1_r04_Handle
 00005134  80 FF 04		        cmp bh,4
 00005137  0F 84 000000C6	        je l1_r05_Handle
 0000513D  80 FF 05		        cmp bh,5
 00005140  0F 84 000000CC	        je l1_r06_Handle
 00005146  80 FF 06		        cmp bh,6
 00005149  0F 84 000000D2	        je l1_r07_Handle
 0000514F  80 FF 07		        cmp bh,7
 00005152  0F 84 000000D8	        je l1_r08_Handle
 00005158  80 FF 08		        cmp bh,8
 0000515B  0F 84 000000DE	        je l1_r09_Handle
 00005161  80 FF 09		        cmp bh,9
 00005164  0F 84 000000E4	        je l1_r10_Handle
 0000516A  80 FF 0A		        cmp bh,10
 0000516D  0F 84 000000EA	        je l1_r11_Handle
 00005173  80 FF 0B		        cmp bh,11
 00005176  0F 84 000000F0	        je l1_r12_Handle
 0000517C  80 FF 0C		        cmp bh,12
 0000517F  0F 84 000000F3	        je l1_r13_Handle
 00005185  80 FF 0D		        cmp bh,13
 00005188  0F 84 000000F6	        je l1_r14_Handle
 0000518E  80 FF 0E		        cmp bh,14
 00005191  0F 84 000000F9	        je l1_r15_Handle
 00005197  80 FF 0F		        cmp bh,15
 0000519A  0F 84 000000FC	        je l1_r16_Handle
 000051A0  80 FF 10		        cmp bh,16
 000051A3  0F 84 000000FF	        je l1_r17_Handle
 000051A9  80 FF 11		        cmp bh,17
 000051AC  0F 84 00000102	        je l1_r18_Handle
 000051B2  80 FF 12		        cmp bh,18
 000051B5  0F 84 00000105	        je l1_r19_Handle
 000051BB  80 FF 13		        cmp bh,19
 000051BE  0F 84 00000108	        je l1_r20_Handle
 000051C4  80 FF 14		        cmp bh,20
 000051C7  0F 84 0000010B	        je l1_r21_Handle
 000051CD  80 FF 15		        cmp bh,21
 000051D0  0F 84 0000010E	        je l1_r22_Handle
				            
 000051D6  BE 0000072B R	        l1_r02_Handle:  mov esi,offset l1_r02
 000051DB  E8 00001331		                        call WallCoinChecker
 000051E0  E9 0000010B		                        jmp MovementChecker
 000051E5  BE 00000752 R	        l1_r03_Handle:  mov esi,offset l1_r03
 000051EA  E8 00001322		                        call WallCoinChecker
 000051EF  E9 000000FC		                        jmp MovementChecker
 000051F4  BE 00000779 R	        l1_r04_Handle:  mov esi,offset l1_r04
 000051F9  E8 00001313		                        call WallCoinChecker
 000051FE  E9 000000ED		                        jmp MovementChecker
 00005203  BE 000007A0 R	        l1_r05_Handle:  mov esi,offset l1_r05
 00005208  E8 00001304		                        call WallCoinChecker
 0000520D  E9 000000DE		                        jmp MovementChecker
 00005212  BE 000007C7 R	        l1_r06_Handle:  mov esi,offset l1_r06
 00005217  E8 000012F5		                        call WallCoinChecker
 0000521C  E9 000000CF		                        jmp MovementChecker
 00005221  BE 000007EE R	        l1_r07_Handle:  mov esi,offset l1_r07
 00005226  E8 000012E6		                        call WallCoinChecker
 0000522B  E9 000000C0		                        jmp MovementChecker
 00005230  BE 00000815 R	        l1_r08_Handle:  mov esi,offset l1_r08
 00005235  E8 000012D7		                        call WallCoinChecker
 0000523A  E9 000000B1		                        jmp MovementChecker
 0000523F  BE 0000083C R	        l1_r09_Handle:  mov esi,offset l1_r09
 00005244  E8 000012C8		                        call WallCoinChecker
 00005249  E9 000000A2		                        jmp MovementChecker
 0000524E  BE 00000863 R	        l1_r10_Handle:  mov esi,offset l1_r10
 00005253  E8 000012B9		                        call WallCoinChecker
 00005258  E9 00000093		                        jmp MovementChecker
 0000525D  BE 0000088A R	        l1_r11_Handle:  mov esi,offset l1_r11
 00005262  E8 000012AA		                        call WallCoinChecker
 00005267  E9 00000084		                        jmp MovementChecker
 0000526C  BE 000008B1 R	        l1_r12_Handle:  mov esi,offset l1_r12
 00005271  E8 0000129B		                        call WallCoinChecker
 00005276  EB 78		                        jmp MovementChecker
 00005278  BE 000008D8 R	        l1_r13_Handle:  mov esi,offset l1_r13
 0000527D  E8 0000128F		                        call WallCoinChecker
 00005282  EB 6C		                        jmp MovementChecker
 00005284  BE 000008FF R	        l1_r14_Handle:  mov esi,offset l1_r14
 00005289  E8 00001283		                        call WallCoinChecker
 0000528E  EB 60		                        jmp MovementChecker
 00005290  BE 00000926 R	        l1_r15_Handle:  mov esi,offset l1_r15
 00005295  E8 00001277		                        call WallCoinChecker
 0000529A  EB 54		                        jmp MovementChecker
 0000529C  BE 0000094D R	        l1_r16_Handle:  mov esi,offset l1_r16
 000052A1  E8 0000126B		                        call WallCoinChecker
 000052A6  EB 48		                        jmp MovementChecker
 000052A8  BE 00000974 R	        l1_r17_Handle:  mov esi,offset l1_r17
 000052AD  E8 0000125F		                        call WallCoinChecker
 000052B2  EB 3C		                        jmp MovementChecker
 000052B4  BE 0000099B R	        l1_r18_Handle:  mov esi,offset l1_r18
 000052B9  E8 00001253		                        call WallCoinChecker
 000052BE  EB 30		                        jmp MovementChecker
 000052C0  BE 000009C2 R	        l1_r19_Handle:  mov esi,offset l1_r19
 000052C5  E8 00001247		                        call WallCoinChecker
 000052CA  EB 24		                        jmp MovementChecker
 000052CC  BE 000009E9 R	        l1_r20_Handle:  mov esi,offset l1_r20
 000052D1  E8 0000123B		                        call WallCoinChecker
 000052D6  EB 18		                        jmp MovementChecker
 000052D8  BE 00000A10 R	        l1_r21_Handle:  mov esi,offset l1_r21
 000052DD  E8 0000122F		                        call WallCoinChecker
 000052E2  EB 0C		                        jmp MovementChecker
 000052E4  BE 00000A37 R	        l1_r22_Handle:  mov esi,offset l1_r22
 000052E9  E8 00001223		                        call WallCoinChecker
 000052EE  EB 00		                        jmp MovementChecker

 000052F0			        MovementChecker:
 000052F0  C3			    ret
 000052F1			Level1MovementLeftRight ENDP    
 000052F1			Level1MovementUp PROC   

 000052F1  80 FF 00		        cmp bh,0
 000052F4  0F 84 000000B4	        je l1_r01_Handle  
 000052FA  80 FF 01		        cmp bh,1
 000052FD  0F 84 000000BA	        je l1_r02_Handle
 00005303  80 FF 02		        cmp bh,2
 00005306  0F 84 000000C0	        je l1_r03_Handle
 0000530C  80 FF 03		        cmp bh,3
 0000530F  0F 84 000000C6	        je l1_r04_Handle
 00005315  80 FF 04		        cmp bh,4
 00005318  0F 84 000000CC	        je l1_r05_Handle
 0000531E  80 FF 05		        cmp bh,5
 00005321  0F 84 000000D2	        je l1_r06_Handle
 00005327  80 FF 06		        cmp bh,6
 0000532A  0F 84 000000D8	        je l1_r07_Handle
 00005330  80 FF 07		        cmp bh,7
 00005333  0F 84 000000DE	        je l1_r08_Handle
 00005339  80 FF 08		        cmp bh,8
 0000533C  0F 84 000000E4	        je l1_r09_Handle
 00005342  80 FF 09		        cmp bh,9
 00005345  0F 84 000000EA	        je l1_r10_Handle
 0000534B  80 FF 0A		        cmp bh,10
 0000534E  0F 84 000000F0	        je l1_r11_Handle
 00005354  80 FF 0B		        cmp bh,11
 00005357  0F 84 000000F6	        je l1_r12_Handle
 0000535D  80 FF 0C		        cmp bh,12
 00005360  0F 84 000000F9	        je l1_r13_Handle
 00005366  80 FF 0D		        cmp bh,13
 00005369  0F 84 000000FC	        je l1_r14_Handle
 0000536F  80 FF 0E		        cmp bh,14
 00005372  0F 84 000000FF	        je l1_r15_Handle
 00005378  80 FF 0F		        cmp bh,15
 0000537B  0F 84 00000102	        je l1_r16_Handle
 00005381  80 FF 10		        cmp bh,16
 00005384  0F 84 00000105	        je l1_r17_Handle
 0000538A  80 FF 11		        cmp bh,17
 0000538D  0F 84 00000108	        je l1_r18_Handle
 00005393  80 FF 12		        cmp bh,18
 00005396  0F 84 0000010B	        je l1_r19_Handle
 0000539C  80 FF 13		        cmp bh,19
 0000539F  0F 84 0000010E	        je l1_r20_Handle
 000053A5  80 FF 14		        cmp bh,20
 000053A8  0F 84 00000111	        je l1_r21_Handle

 000053AE  BE 00000704 R	        l1_r01_Handle:  mov esi,offset l1_r01
 000053B3  E8 00001159		                        call WallCoinChecker
 000053B8  E9 0000011A		                        jmp MovementChecker            
 000053BD  BE 0000072B R	        l1_r02_Handle:  mov esi,offset l1_r02
 000053C2  E8 0000114A		                        call WallCoinChecker
 000053C7  E9 0000010B		                        jmp MovementChecker
 000053CC  BE 00000752 R	        l1_r03_Handle:  mov esi,offset l1_r03
 000053D1  E8 0000113B		                        call WallCoinChecker
 000053D6  E9 000000FC		                        jmp MovementChecker
 000053DB  BE 00000779 R	        l1_r04_Handle:  mov esi,offset l1_r04
 000053E0  E8 0000112C		                        call WallCoinChecker
 000053E5  E9 000000ED		                        jmp MovementChecker
 000053EA  BE 000007A0 R	        l1_r05_Handle:  mov esi,offset l1_r05
 000053EF  E8 0000111D		                        call WallCoinChecker
 000053F4  E9 000000DE		                        jmp MovementChecker
 000053F9  BE 000007C7 R	        l1_r06_Handle:  mov esi,offset l1_r06
 000053FE  E8 0000110E		                        call WallCoinChecker
 00005403  E9 000000CF		                        jmp MovementChecker
 00005408  BE 000007EE R	        l1_r07_Handle:  mov esi,offset l1_r07
 0000540D  E8 000010FF		                        call WallCoinChecker
 00005412  E9 000000C0		                        jmp MovementChecker
 00005417  BE 00000815 R	        l1_r08_Handle:  mov esi,offset l1_r08
 0000541C  E8 000010F0		                        call WallCoinChecker
 00005421  E9 000000B1		                        jmp MovementChecker
 00005426  BE 0000083C R	        l1_r09_Handle:  mov esi,offset l1_r09
 0000542B  E8 000010E1		                        call WallCoinChecker
 00005430  E9 000000A2		                        jmp MovementChecker
 00005435  BE 00000863 R	        l1_r10_Handle:  mov esi,offset l1_r10
 0000543A  E8 000010D2		                        call WallCoinChecker
 0000543F  E9 00000093		                        jmp MovementChecker
 00005444  BE 0000088A R	        l1_r11_Handle:  mov esi,offset l1_r11
 00005449  E8 000010C3		                        call WallCoinChecker
 0000544E  E9 00000084		                        jmp MovementChecker
 00005453  BE 000008B1 R	        l1_r12_Handle:  mov esi,offset l1_r12
 00005458  E8 000010B4		                        call WallCoinChecker
 0000545D  EB 78		                        jmp MovementChecker
 0000545F  BE 000008D8 R	        l1_r13_Handle:  mov esi,offset l1_r13
 00005464  E8 000010A8		                        call WallCoinChecker
 00005469  EB 6C		                        jmp MovementChecker
 0000546B  BE 000008FF R	        l1_r14_Handle:  mov esi,offset l1_r14
 00005470  E8 0000109C		                        call WallCoinChecker
 00005475  EB 60		                        jmp MovementChecker
 00005477  BE 00000926 R	        l1_r15_Handle:  mov esi,offset l1_r15
 0000547C  E8 00001090		                        call WallCoinChecker
 00005481  EB 54		                        jmp MovementChecker
 00005483  BE 0000094D R	        l1_r16_Handle:  mov esi,offset l1_r16
 00005488  E8 00001084		                        call WallCoinChecker
 0000548D  EB 48		                        jmp MovementChecker
 0000548F  BE 00000974 R	        l1_r17_Handle:  mov esi,offset l1_r17
 00005494  E8 00001078		                        call WallCoinChecker
 00005499  EB 3C		                        jmp MovementChecker
 0000549B  BE 0000099B R	        l1_r18_Handle:  mov esi,offset l1_r18
 000054A0  E8 0000106C		                        call WallCoinChecker
 000054A5  EB 30		                        jmp MovementChecker
 000054A7  BE 000009C2 R	        l1_r19_Handle:  mov esi,offset l1_r19
 000054AC  E8 00001060		                        call WallCoinChecker
 000054B1  EB 24		                        jmp MovementChecker
 000054B3  BE 000009E9 R	        l1_r20_Handle:  mov esi,offset l1_r20
 000054B8  E8 00001054		                        call WallCoinChecker
 000054BD  EB 18		                        jmp MovementChecker
 000054BF  BE 00000A10 R	        l1_r21_Handle:  mov esi,offset l1_r21
 000054C4  E8 00001048		                        call WallCoinChecker
 000054C9  EB 0C		                        jmp MovementChecker
 000054CB  BE 00000A37 R	        l1_r22_Handle:  mov esi,offset l1_r22
 000054D0  E8 0000103C		                        call WallCoinChecker
 000054D5  EB 00		                        jmp MovementChecker
 000054D7			        MovementChecker:
 000054D7  C3			    ret
 000054D8			Level1MovementUp ENDP  
 000054D8			Level1MovementDown PROC   

 000054D8  80 FF 00		        cmp bh,0
 000054DB  0F 84 000000B4	        je l1_r01_Handle  
 000054E1  80 FF 01		        cmp bh,1
 000054E4  0F 84 000000BA	        je l1_r02_Handle
 000054EA  80 FF 02		        cmp bh,2
 000054ED  0F 84 000000C0	        je l1_r03_Handle
 000054F3  80 FF 03		        cmp bh,3
 000054F6  0F 84 000000C6	        je l1_r04_Handle
 000054FC  80 FF 04		        cmp bh,4
 000054FF  0F 84 000000CC	        je l1_r05_Handle
 00005505  80 FF 05		        cmp bh,5
 00005508  0F 84 000000D2	        je l1_r06_Handle
 0000550E  80 FF 06		        cmp bh,6
 00005511  0F 84 000000D8	        je l1_r07_Handle
 00005517  80 FF 07		        cmp bh,7
 0000551A  0F 84 000000DE	        je l1_r08_Handle
 00005520  80 FF 08		        cmp bh,8
 00005523  0F 84 000000E4	        je l1_r09_Handle
 00005529  80 FF 09		        cmp bh,9
 0000552C  0F 84 000000EA	        je l1_r10_Handle
 00005532  80 FF 0A		        cmp bh,10
 00005535  0F 84 000000F0	        je l1_r11_Handle
 0000553B  80 FF 0B		        cmp bh,11
 0000553E  0F 84 000000F6	        je l1_r12_Handle
 00005544  80 FF 0C		        cmp bh,12
 00005547  0F 84 000000F9	        je l1_r13_Handle
 0000554D  80 FF 0D		        cmp bh,13
 00005550  0F 84 000000FC	        je l1_r14_Handle
 00005556  80 FF 0E		        cmp bh,14
 00005559  0F 84 000000FF	        je l1_r15_Handle
 0000555F  80 FF 0F		        cmp bh,15
 00005562  0F 84 00000102	        je l1_r16_Handle
 00005568  80 FF 10		        cmp bh,16
 0000556B  0F 84 00000105	        je l1_r17_Handle
 00005571  80 FF 11		        cmp bh,17
 00005574  0F 84 00000108	        je l1_r18_Handle
 0000557A  80 FF 12		        cmp bh,18
 0000557D  0F 84 0000010B	        je l1_r19_Handle
 00005583  80 FF 13		        cmp bh,19
 00005586  0F 84 0000010E	        je l1_r20_Handle
 0000558C  80 FF 14		        cmp bh,20
 0000558F  0F 84 00000111	        je l1_r21_Handle

 00005595  BE 00000704 R	        l1_r01_Handle:  mov esi,offset l1_r01
 0000559A  E8 00000F72		                        call WallCoinChecker
 0000559F  E9 0000011A		                        jmp MovementChecker            
 000055A4  BE 0000072B R	        l1_r02_Handle:  mov esi,offset l1_r02
 000055A9  E8 00000F63		                        call WallCoinChecker
 000055AE  E9 0000010B		                        jmp MovementChecker
 000055B3  BE 00000752 R	        l1_r03_Handle:  mov esi,offset l1_r03
 000055B8  E8 00000F54		                        call WallCoinChecker
 000055BD  E9 000000FC		                        jmp MovementChecker
 000055C2  BE 00000779 R	        l1_r04_Handle:  mov esi,offset l1_r04
 000055C7  E8 00000F45		                        call WallCoinChecker
 000055CC  E9 000000ED		                        jmp MovementChecker
 000055D1  BE 000007A0 R	        l1_r05_Handle:  mov esi,offset l1_r05
 000055D6  E8 00000F36		                        call WallCoinChecker
 000055DB  E9 000000DE		                        jmp MovementChecker
 000055E0  BE 000007C7 R	        l1_r06_Handle:  mov esi,offset l1_r06
 000055E5  E8 00000F27		                        call WallCoinChecker
 000055EA  E9 000000CF		                        jmp MovementChecker
 000055EF  BE 000007EE R	        l1_r07_Handle:  mov esi,offset l1_r07
 000055F4  E8 00000F18		                        call WallCoinChecker
 000055F9  E9 000000C0		                        jmp MovementChecker
 000055FE  BE 00000815 R	        l1_r08_Handle:  mov esi,offset l1_r08
 00005603  E8 00000F09		                        call WallCoinChecker
 00005608  E9 000000B1		                        jmp MovementChecker
 0000560D  BE 0000083C R	        l1_r09_Handle:  mov esi,offset l1_r09
 00005612  E8 00000EFA		                        call WallCoinChecker
 00005617  E9 000000A2		                        jmp MovementChecker
 0000561C  BE 00000863 R	        l1_r10_Handle:  mov esi,offset l1_r10
 00005621  E8 00000EEB		                        call WallCoinChecker
 00005626  E9 00000093		                        jmp MovementChecker
 0000562B  BE 0000088A R	        l1_r11_Handle:  mov esi,offset l1_r11
 00005630  E8 00000EDC		                        call WallCoinChecker
 00005635  E9 00000084		                        jmp MovementChecker
 0000563A  BE 000008B1 R	        l1_r12_Handle:  mov esi,offset l1_r12
 0000563F  E8 00000ECD		                        call WallCoinChecker
 00005644  EB 78		                        jmp MovementChecker
 00005646  BE 000008D8 R	        l1_r13_Handle:  mov esi,offset l1_r13
 0000564B  E8 00000EC1		                        call WallCoinChecker
 00005650  EB 6C		                        jmp MovementChecker
 00005652  BE 000008FF R	        l1_r14_Handle:  mov esi,offset l1_r14
 00005657  E8 00000EB5		                        call WallCoinChecker
 0000565C  EB 60		                        jmp MovementChecker
 0000565E  BE 00000926 R	        l1_r15_Handle:  mov esi,offset l1_r15
 00005663  E8 00000EA9		                        call WallCoinChecker
 00005668  EB 54		                        jmp MovementChecker
 0000566A  BE 0000094D R	        l1_r16_Handle:  mov esi,offset l1_r16
 0000566F  E8 00000E9D		                        call WallCoinChecker
 00005674  EB 48		                        jmp MovementChecker
 00005676  BE 00000974 R	        l1_r17_Handle:  mov esi,offset l1_r17
 0000567B  E8 00000E91		                        call WallCoinChecker
 00005680  EB 3C		                        jmp MovementChecker
 00005682  BE 0000099B R	        l1_r18_Handle:  mov esi,offset l1_r18
 00005687  E8 00000E85		                        call WallCoinChecker
 0000568C  EB 30		                        jmp MovementChecker
 0000568E  BE 000009C2 R	        l1_r19_Handle:  mov esi,offset l1_r19
 00005693  E8 00000E79		                        call WallCoinChecker
 00005698  EB 24		                        jmp MovementChecker
 0000569A  BE 000009E9 R	        l1_r20_Handle:  mov esi,offset l1_r20
 0000569F  E8 00000E6D		                        call WallCoinChecker
 000056A4  EB 18		                        jmp MovementChecker
 000056A6  BE 00000A10 R	        l1_r21_Handle:  mov esi,offset l1_r21
 000056AB  E8 00000E61		                        call WallCoinChecker
 000056B0  EB 0C		                        jmp MovementChecker
 000056B2  BE 00000A37 R	        l1_r22_Handle:  mov esi,offset l1_r22
 000056B7  E8 00000E55		                        call WallCoinChecker
 000056BC  EB 00		                        jmp MovementChecker
 000056BE			        MovementChecker:
 000056BE  C3			    ret
 000056BF			Level1MovementDown ENDP  
 000056BF			PlayerMovement2 PROC 
 000056BF  E8 FFFFF780		        call Level2Intersection 
 000056C4  C6 05 00000298 R	        mov PlayerMovement1Possibibly,1
	   01
 000056CB			        LookForKey:
 000056CB  A1 00000004 R	            mov  eax,speed2    ;   1000=1sec
 000056D0  E8 00000000 E	            call Delay
 000056D5  E8 00000000 E	            call ReadKey         ; look for keyboard input
 000056DA  A2 000002B0 R	            mov inputChar,al
 000056DF  75 2C		            jnz MovementcheckerCharacter
				        ;call ReadChar
 000056E1  80 3D 00000297 R	        cmp PlayerDirectionHandle,1
	   01
 000056E8  74 5A		        je L1moveRight
 000056EA  80 3D 00000297 R	        cmp PlayerDirectionHandle,2
	   02
 000056F1  74 75		        je L1moveLeft
 000056F3  80 3D 00000297 R	        cmp PlayerDirectionHandle,3
	   03
 000056FA  0F 84 0000008C	        je L1moveUp
 00005700  80 3D 00000297 R	        cmp PlayerDirectionHandle,4
	   04
 00005707  0F 84 0000009D	        je L1MoveDown

 0000570D			        MovementcheckerCharacter:
 0000570D  80 3D 000002B0 R	        cmp inputChar,"d"
	   64
 00005714  74 2E		        je L1moveRight
 00005716  80 3D 000002B0 R	        cmp inputChar,"a"
	   61
 0000571D  74 49		        je L1moveLeft
 0000571F  80 3D 000002B0 R	        cmp inputChar,"w"
	   77
 00005726  74 64		        je L1moveUp
 00005728  80 3D 000002B0 R	        cmp inputChar,"s"
	   73
 0000572F  74 79		        je L1MoveDown
 00005731  80 3D 000002B0 R	        cmp inputChar,"p"
	   70
 00005738  E8 00000000 E	        call readchar
 0000573D  EB 8C		        jmp LookForKey

 0000573F  E9 00000084		        jmp L1SkipLeftRight

 00005744			        L1moveRight:
 00005744  E8 FFFFF685		            call UpdatePlayer
 00005749  FE 05 000002AE R	            inc xPos
 0000574F  FE 05 000002AE R	            inc xPos
 00005755  C6 05 00000297 R	            mov PlayerDirectionHandle,1
	   01
 0000575C  E8 FFFFBD47		            call CoordinaterUpdator
 00005761  E8 000000BE		            call Level2MovementLeftRight 
 00005766  EB 60		            jmp L1SkipLeftRight

 00005768			        L1moveLeft:
 00005768  E8 FFFFF661		            call UpdatePlayer
 0000576D  FE 0D 000002AE R	            dec xPos
 00005773  FE 0D 000002AE R	            dec xPos
 00005779  C6 05 00000297 R	            mov PlayerDirectionHandle,2
	   02
 00005780  E8 FFFFBD23		            call CoordinaterUpdator
 00005785  E8 0000009A		            call Level2MovementLeftRight 
 0000578A  EB 3C		            jmp L1SkipLeftRight

 0000578C			        L1moveUp:
 0000578C  E8 FFFFF63D		            call UpdatePlayer
 00005791  FE 0D 000002AF R	            dec yPos
 00005797  C6 05 00000297 R	            mov PlayerDirectionHandle,3
	   03
 0000579E  E8 FFFFBD05		            call CoordinaterUpdator
 000057A3  E8 00000254		            call Level2MovementUp
 000057A8  EB 1E		            jmp L1SkipLeftRight

 000057AA			        L1MoveDown:
 000057AA  E8 FFFFF61F		            call UpdatePlayer
 000057AF  FE 05 000002AF R	            inc yPos
 000057B5  C6 05 00000297 R	            mov PlayerDirectionHandle,4
	   04
 000057BC  E8 FFFFBCE7		            call CoordinaterUpdator
 000057C1  E8 0000041D		            call Level2MovementDown
 000057C6  EB 00		            jmp L1SkipLeftRight

 000057C8			        L1SkipLeftRight:

				       

 000057C8  80 3D 00000298 R	        cmp PlayerMovement1Possibibly,0
	   00
 000057CF  74 02		        je PlayerMovement1Fixer
 000057D1  EB 50		        jmp SkipMovementFixer

 000057D3			        PlayerMovement1Fixer:
 000057D3  80 3D 00000297 R	        cmp PlayerDirectionHandle,1
	   01
 000057DA  74 1D		        je RightFixer
 000057DC  80 3D 00000297 R	        cmp PlayerDirectionHandle,2
	   02
 000057E3  74 22		        je LeftFixer
 000057E5  80 3D 00000297 R	        cmp PlayerDirectionHandle,3
	   03
 000057EC  74 27		        je UpFixer
 000057EE  80 3D 00000297 R	        cmp PlayerDirectionHandle,4
	   04
 000057F5  74 26		        je DownFixer
 000057F7  EB 2A		        jmp SkipMovementFixer

 000057F9  FE 0D 000002AE R	        RightFixer: dec xPos
 000057FF  FE 0D 000002AE R	                    dec xPos
 00005805  EB 1C		                    jmp SkipMovementFixer
 00005807  FE 05 000002AE R	        LeftFixer:  inc xPos
 0000580D  FE 05 000002AE R	                    inc xPos
 00005813  EB 0E		                    jmp SkipMovementFixer
 00005815  FE 05 000002AF R	        UpFixer:    inc yPos
 0000581B  EB 06		                    jmp SkipMovementFixer
 0000581D  FE 0D 000002AF R	        DownFixer:  dec yPos

 00005823			        SkipMovementFixer:
 00005823  C3			    ret
 00005824			PlayerMovement2 ENDP
 00005824			Level2MovementLeftRight PROC 

 00005824  80 FF 01		        cmp bh,1
 00005827  0F 84 000000B4	        je l2_r02_Handle  
 0000582D  80 FF 02		        cmp bh,2
 00005830  0F 84 000000BA	        je l2_r03_Handle
 00005836  80 FF 03		        cmp bh,3
 00005839  0F 84 000000C0	        je l2_r04_Handle
 0000583F  80 FF 04		        cmp bh,4
 00005842  0F 84 000000C6	        je l2_r05_Handle
 00005848  80 FF 05		        cmp bh,5
 0000584B  0F 84 000000CC	        je l2_r06_Handle
 00005851  80 FF 06		        cmp bh,6
 00005854  0F 84 000000D2	        je l2_r07_Handle
 0000585A  80 FF 07		        cmp bh,7
 0000585D  0F 84 000000D8	        je l2_r08_Handle
 00005863  80 FF 08		        cmp bh,8
 00005866  0F 84 000000DE	        je l2_r09_Handle
 0000586C  80 FF 09		        cmp bh,9
 0000586F  0F 84 000000E4	        je l2_r10_Handle
 00005875  80 FF 0A		        cmp bh,10
 00005878  0F 84 000000EA	        je l2_r11_Handle
 0000587E  80 FF 0B		        cmp bh,11
 00005881  0F 84 000000F0	        je l2_r12_Handle
 00005887  80 FF 0C		        cmp bh,12
 0000588A  0F 84 000000F3	        je l2_r13_Handle
 00005890  80 FF 0D		        cmp bh,13
 00005893  0F 84 000000F6	        je l2_r14_Handle
 00005899  80 FF 0E		        cmp bh,14
 0000589C  0F 84 000000F9	        je l2_r15_Handle
 000058A2  80 FF 0F		        cmp bh,15
 000058A5  0F 84 000000FC	        je l2_r16_Handle
 000058AB  80 FF 10		        cmp bh,16
 000058AE  0F 84 000000FF	        je l2_r17_Handle
 000058B4  80 FF 11		        cmp bh,17
 000058B7  0F 84 00000102	        je l2_r18_Handle
 000058BD  80 FF 12		        cmp bh,18
 000058C0  0F 84 00000105	        je l2_r19_Handle
 000058C6  80 FF 13		        cmp bh,19
 000058C9  0F 84 00000108	        je l2_r20_Handle
 000058CF  80 FF 14		        cmp bh,20
 000058D2  0F 84 0000010B	        je l2_r21_Handle
 000058D8  80 FF 15		        cmp bh,21
 000058DB  0F 84 0000010E	        je l2_r22_Handle
				            
 000058E1  BE 00000A91 R	        l2_r02_Handle:  mov esi,offset l2_r02
 000058E6  E8 00000C26		                        call WallCoinChecker
 000058EB  E9 0000010B		                        jmp MovementChecker
 000058F0  BE 00000AC4 R	        l2_r03_Handle:  mov esi,offset l2_r03
 000058F5  E8 00000C17		                        call WallCoinChecker
 000058FA  E9 000000FC		                        jmp MovementChecker
 000058FF  BE 00000AF7 R	        l2_r04_Handle:  mov esi,offset l2_r04
 00005904  E8 00000C08		                        call WallCoinChecker
 00005909  E9 000000ED		                        jmp MovementChecker
 0000590E  BE 00000B2A R	        l2_r05_Handle:  mov esi,offset l2_r05
 00005913  E8 00000BF9		                        call WallCoinChecker
 00005918  E9 000000DE		                        jmp MovementChecker
 0000591D  BE 00000B5D R	        l2_r06_Handle:  mov esi,offset l2_r06
 00005922  E8 00000BEA		                        call WallCoinChecker
 00005927  E9 000000CF		                        jmp MovementChecker
 0000592C  BE 00000B90 R	        l2_r07_Handle:  mov esi,offset l2_r07
 00005931  E8 00000BDB		                        call WallCoinChecker
 00005936  E9 000000C0		                        jmp MovementChecker
 0000593B  BE 00000BC3 R	        l2_r08_Handle:  mov esi,offset l2_r08
 00005940  E8 00000BCC		                        call WallCoinChecker
 00005945  E9 000000B1		                        jmp MovementChecker
 0000594A  BE 00000BF6 R	        l2_r09_Handle:  mov esi,offset l2_r09
 0000594F  E8 00000BBD		                        call WallCoinChecker
 00005954  E9 000000A2		                        jmp MovementChecker
 00005959  BE 00000C29 R	        l2_r10_Handle:  mov esi,offset l2_r10
 0000595E  E8 00000BAE		                        call WallCoinChecker
 00005963  E9 00000093		                        jmp MovementChecker
 00005968  BE 00000C5C R	        l2_r11_Handle:  mov esi,offset l2_r11
 0000596D  E8 00000B9F		                        call WallCoinChecker
 00005972  E9 00000084		                        jmp MovementChecker
 00005977  BE 00000C8F R	        l2_r12_Handle:  mov esi,offset l2_r12
 0000597C  E8 00000B90		                        call WallCoinChecker
 00005981  EB 78		                        jmp MovementChecker
 00005983  BE 00000CC2 R	        l2_r13_Handle:  mov esi,offset l2_r13
 00005988  E8 00000B84		                        call WallCoinChecker
 0000598D  EB 6C		                        jmp MovementChecker
 0000598F  BE 00000CF5 R	        l2_r14_Handle:  mov esi,offset l2_r14
 00005994  E8 00000B78		                        call WallCoinChecker
 00005999  EB 60		                        jmp MovementChecker
 0000599B  BE 00000D28 R	        l2_r15_Handle:  mov esi,offset l2_r15
 000059A0  E8 00000B6C		                        call WallCoinChecker
 000059A5  EB 54		                        jmp MovementChecker
 000059A7  BE 00000D5B R	        l2_r16_Handle:  mov esi,offset l2_r16
 000059AC  E8 00000B60		                        call WallCoinChecker
 000059B1  EB 48		                        jmp MovementChecker
 000059B3  BE 00000D8E R	        l2_r17_Handle:  mov esi,offset l2_r17
 000059B8  E8 00000B54		                        call WallCoinChecker
 000059BD  EB 3C		                        jmp MovementChecker
 000059BF  BE 00000DC1 R	        l2_r18_Handle:  mov esi,offset l2_r18
 000059C4  E8 00000B48		                        call WallCoinChecker
 000059C9  EB 30		                        jmp MovementChecker
 000059CB  BE 00000DF4 R	        l2_r19_Handle:  mov esi,offset l2_r19
 000059D0  E8 00000B3C		                        call WallCoinChecker
 000059D5  EB 24		                        jmp MovementChecker
 000059D7  BE 00000E27 R	        l2_r20_Handle:  mov esi,offset l2_r20
 000059DC  E8 00000B30		                        call WallCoinChecker
 000059E1  EB 18		                        jmp MovementChecker
 000059E3  BE 00000E5A R	        l2_r21_Handle:  mov esi,offset l2_r21
 000059E8  E8 00000B24		                        call WallCoinChecker
 000059ED  EB 0C		                        jmp MovementChecker
 000059EF  BE 00000E8D R	        l2_r22_Handle:  mov esi,offset l2_r22
 000059F4  E8 00000B18		                        call WallCoinChecker
 000059F9  EB 00		                        jmp MovementChecker

 000059FB			        MovementChecker:
 000059FB  C3			    ret
 000059FC			Level2MovementLeftRight ENDP    
 000059FC			Level2MovementUp PROC   

 000059FC  80 FF 00		        cmp bh,0
 000059FF  0F 84 000000B4	        je l2_r01_Handle  
 00005A05  80 FF 01		        cmp bh,1
 00005A08  0F 84 000000BA	        je l2_r02_Handle
 00005A0E  80 FF 02		        cmp bh,2
 00005A11  0F 84 000000C0	        je l2_r03_Handle
 00005A17  80 FF 03		        cmp bh,3
 00005A1A  0F 84 000000C6	        je l2_r04_Handle
 00005A20  80 FF 04		        cmp bh,4
 00005A23  0F 84 000000CC	        je l2_r05_Handle
 00005A29  80 FF 05		        cmp bh,5
 00005A2C  0F 84 000000D2	        je l2_r06_Handle
 00005A32  80 FF 06		        cmp bh,6
 00005A35  0F 84 000000D8	        je l2_r07_Handle
 00005A3B  80 FF 07		        cmp bh,7
 00005A3E  0F 84 000000DE	        je l2_r08_Handle
 00005A44  80 FF 08		        cmp bh,8
 00005A47  0F 84 000000E4	        je l2_r09_Handle
 00005A4D  80 FF 09		        cmp bh,9
 00005A50  0F 84 000000EA	        je l2_r10_Handle
 00005A56  80 FF 0A		        cmp bh,10
 00005A59  0F 84 000000F0	        je l2_r11_Handle
 00005A5F  80 FF 0B		        cmp bh,11
 00005A62  0F 84 000000F6	        je l2_r12_Handle
 00005A68  80 FF 0C		        cmp bh,12
 00005A6B  0F 84 000000F9	        je l2_r13_Handle
 00005A71  80 FF 0D		        cmp bh,13
 00005A74  0F 84 000000FC	        je l2_r14_Handle
 00005A7A  80 FF 0E		        cmp bh,14
 00005A7D  0F 84 000000FF	        je l2_r15_Handle
 00005A83  80 FF 0F		        cmp bh,15
 00005A86  0F 84 00000102	        je l2_r16_Handle
 00005A8C  80 FF 10		        cmp bh,16
 00005A8F  0F 84 00000105	        je l2_r17_Handle
 00005A95  80 FF 11		        cmp bh,17
 00005A98  0F 84 00000108	        je l2_r18_Handle
 00005A9E  80 FF 12		        cmp bh,18
 00005AA1  0F 84 0000010B	        je l2_r19_Handle
 00005AA7  80 FF 13		        cmp bh,19
 00005AAA  0F 84 0000010E	        je l2_r20_Handle
 00005AB0  80 FF 14		        cmp bh,20
 00005AB3  0F 84 00000111	        je l2_r21_Handle

 00005AB9  BE 00000A5E R	        l2_r01_Handle:  mov esi,offset l2_r01
 00005ABE  E8 00000A4E		                        call WallCoinChecker
 00005AC3  E9 0000011A		                        jmp MovementChecker            
 00005AC8  BE 00000A91 R	        l2_r02_Handle:  mov esi,offset l2_r02
 00005ACD  E8 00000A3F		                        call WallCoinChecker
 00005AD2  E9 0000010B		                        jmp MovementChecker
 00005AD7  BE 00000AC4 R	        l2_r03_Handle:  mov esi,offset l2_r03
 00005ADC  E8 00000A30		                        call WallCoinChecker
 00005AE1  E9 000000FC		                        jmp MovementChecker
 00005AE6  BE 00000AF7 R	        l2_r04_Handle:  mov esi,offset l2_r04
 00005AEB  E8 00000A21		                        call WallCoinChecker
 00005AF0  E9 000000ED		                        jmp MovementChecker
 00005AF5  BE 00000B2A R	        l2_r05_Handle:  mov esi,offset l2_r05
 00005AFA  E8 00000A12		                        call WallCoinChecker
 00005AFF  E9 000000DE		                        jmp MovementChecker
 00005B04  BE 00000B5D R	        l2_r06_Handle:  mov esi,offset l2_r06
 00005B09  E8 00000A03		                        call WallCoinChecker
 00005B0E  E9 000000CF		                        jmp MovementChecker
 00005B13  BE 00000B90 R	        l2_r07_Handle:  mov esi,offset l2_r07
 00005B18  E8 000009F4		                        call WallCoinChecker
 00005B1D  E9 000000C0		                        jmp MovementChecker
 00005B22  BE 00000BC3 R	        l2_r08_Handle:  mov esi,offset l2_r08
 00005B27  E8 000009E5		                        call WallCoinChecker
 00005B2C  E9 000000B1		                        jmp MovementChecker
 00005B31  BE 00000BF6 R	        l2_r09_Handle:  mov esi,offset l2_r09
 00005B36  E8 000009D6		                        call WallCoinChecker
 00005B3B  E9 000000A2		                        jmp MovementChecker
 00005B40  BE 00000C29 R	        l2_r10_Handle:  mov esi,offset l2_r10
 00005B45  E8 000009C7		                        call WallCoinChecker
 00005B4A  E9 00000093		                        jmp MovementChecker
 00005B4F  BE 00000C5C R	        l2_r11_Handle:  mov esi,offset l2_r11
 00005B54  E8 000009B8		                        call WallCoinChecker
 00005B59  E9 00000084		                        jmp MovementChecker
 00005B5E  BE 00000C8F R	        l2_r12_Handle:  mov esi,offset l2_r12
 00005B63  E8 000009A9		                        call WallCoinChecker
 00005B68  EB 78		                        jmp MovementChecker
 00005B6A  BE 00000CC2 R	        l2_r13_Handle:  mov esi,offset l2_r13
 00005B6F  E8 0000099D		                        call WallCoinChecker
 00005B74  EB 6C		                        jmp MovementChecker
 00005B76  BE 00000CF5 R	        l2_r14_Handle:  mov esi,offset l2_r14
 00005B7B  E8 00000991		                        call WallCoinChecker
 00005B80  EB 60		                        jmp MovementChecker
 00005B82  BE 00000D28 R	        l2_r15_Handle:  mov esi,offset l2_r15
 00005B87  E8 00000985		                        call WallCoinChecker
 00005B8C  EB 54		                        jmp MovementChecker
 00005B8E  BE 00000D5B R	        l2_r16_Handle:  mov esi,offset l2_r16
 00005B93  E8 00000979		                        call WallCoinChecker
 00005B98  EB 48		                        jmp MovementChecker
 00005B9A  BE 00000D8E R	        l2_r17_Handle:  mov esi,offset l2_r17
 00005B9F  E8 0000096D		                        call WallCoinChecker
 00005BA4  EB 3C		                        jmp MovementChecker
 00005BA6  BE 00000DC1 R	        l2_r18_Handle:  mov esi,offset l2_r18
 00005BAB  E8 00000961		                        call WallCoinChecker
 00005BB0  EB 30		                        jmp MovementChecker
 00005BB2  BE 00000DF4 R	        l2_r19_Handle:  mov esi,offset l2_r19
 00005BB7  E8 00000955		                        call WallCoinChecker
 00005BBC  EB 24		                        jmp MovementChecker
 00005BBE  BE 00000E27 R	        l2_r20_Handle:  mov esi,offset l2_r20
 00005BC3  E8 00000949		                        call WallCoinChecker
 00005BC8  EB 18		                        jmp MovementChecker
 00005BCA  BE 00000E5A R	        l2_r21_Handle:  mov esi,offset l2_r21
 00005BCF  E8 0000093D		                        call WallCoinChecker
 00005BD4  EB 0C		                        jmp MovementChecker
 00005BD6  BE 00000E8D R	        l2_r22_Handle:  mov esi,offset l2_r22
 00005BDB  E8 00000931		                        call WallCoinChecker
 00005BE0  EB 00		                        jmp MovementChecker
 00005BE2			        MovementChecker:
 00005BE2  C3			    ret
 00005BE3			Level2MovementUp ENDP  
 00005BE3			Level2MovementDown PROC   

 00005BE3  80 FF 00		        cmp bh,0
 00005BE6  0F 84 000000B4	        je l2_r01_Handle  
 00005BEC  80 FF 01		        cmp bh,1
 00005BEF  0F 84 000000BA	        je l2_r02_Handle
 00005BF5  80 FF 02		        cmp bh,2
 00005BF8  0F 84 000000C0	        je l2_r03_Handle
 00005BFE  80 FF 03		        cmp bh,3
 00005C01  0F 84 000000C6	        je l2_r04_Handle
 00005C07  80 FF 04		        cmp bh,4
 00005C0A  0F 84 000000CC	        je l2_r05_Handle
 00005C10  80 FF 05		        cmp bh,5
 00005C13  0F 84 000000D2	        je l2_r06_Handle
 00005C19  80 FF 06		        cmp bh,6
 00005C1C  0F 84 000000D8	        je l2_r07_Handle
 00005C22  80 FF 07		        cmp bh,7
 00005C25  0F 84 000000DE	        je l2_r08_Handle
 00005C2B  80 FF 08		        cmp bh,8
 00005C2E  0F 84 000000E4	        je l2_r09_Handle
 00005C34  80 FF 09		        cmp bh,9
 00005C37  0F 84 000000EA	        je l2_r10_Handle
 00005C3D  80 FF 0A		        cmp bh,10
 00005C40  0F 84 000000F0	        je l2_r11_Handle
 00005C46  80 FF 0B		        cmp bh,11
 00005C49  0F 84 000000F6	        je l2_r12_Handle
 00005C4F  80 FF 0C		        cmp bh,12
 00005C52  0F 84 000000F9	        je l2_r13_Handle
 00005C58  80 FF 0D		        cmp bh,13
 00005C5B  0F 84 000000FC	        je l2_r14_Handle
 00005C61  80 FF 0E		        cmp bh,14
 00005C64  0F 84 000000FF	        je l2_r15_Handle
 00005C6A  80 FF 0F		        cmp bh,15
 00005C6D  0F 84 00000102	        je l2_r16_Handle
 00005C73  80 FF 10		        cmp bh,16
 00005C76  0F 84 00000105	        je l2_r17_Handle
 00005C7C  80 FF 11		        cmp bh,17
 00005C7F  0F 84 00000108	        je l2_r18_Handle
 00005C85  80 FF 12		        cmp bh,18
 00005C88  0F 84 0000010B	        je l2_r19_Handle
 00005C8E  80 FF 13		        cmp bh,19
 00005C91  0F 84 0000010E	        je l2_r20_Handle
 00005C97  80 FF 14		        cmp bh,20
 00005C9A  0F 84 00000111	        je l2_r21_Handle

 00005CA0  BE 00000A5E R	        l2_r01_Handle:  mov esi,offset l2_r01
 00005CA5  E8 00000867		                        call WallCoinChecker
 00005CAA  E9 0000011A		                        jmp MovementChecker            
 00005CAF  BE 00000A91 R	        l2_r02_Handle:  mov esi,offset l2_r02
 00005CB4  E8 00000858		                        call WallCoinChecker
 00005CB9  E9 0000010B		                        jmp MovementChecker
 00005CBE  BE 00000AC4 R	        l2_r03_Handle:  mov esi,offset l2_r03
 00005CC3  E8 00000849		                        call WallCoinChecker
 00005CC8  E9 000000FC		                        jmp MovementChecker
 00005CCD  BE 00000AF7 R	        l2_r04_Handle:  mov esi,offset l2_r04
 00005CD2  E8 0000083A		                        call WallCoinChecker
 00005CD7  E9 000000ED		                        jmp MovementChecker
 00005CDC  BE 00000B2A R	        l2_r05_Handle:  mov esi,offset l2_r05
 00005CE1  E8 0000082B		                        call WallCoinChecker
 00005CE6  E9 000000DE		                        jmp MovementChecker
 00005CEB  BE 00000B5D R	        l2_r06_Handle:  mov esi,offset l2_r06
 00005CF0  E8 0000081C		                        call WallCoinChecker
 00005CF5  E9 000000CF		                        jmp MovementChecker
 00005CFA  BE 00000B90 R	        l2_r07_Handle:  mov esi,offset l2_r07
 00005CFF  E8 0000080D		                        call WallCoinChecker
 00005D04  E9 000000C0		                        jmp MovementChecker
 00005D09  BE 00000BC3 R	        l2_r08_Handle:  mov esi,offset l2_r08
 00005D0E  E8 000007FE		                        call WallCoinChecker
 00005D13  E9 000000B1		                        jmp MovementChecker
 00005D18  BE 00000BF6 R	        l2_r09_Handle:  mov esi,offset l2_r09
 00005D1D  E8 000007EF		                        call WallCoinChecker
 00005D22  E9 000000A2		                        jmp MovementChecker
 00005D27  BE 00000C29 R	        l2_r10_Handle:  mov esi,offset l2_r10
 00005D2C  E8 000007E0		                        call WallCoinChecker
 00005D31  E9 00000093		                        jmp MovementChecker
 00005D36  BE 00000C5C R	        l2_r11_Handle:  mov esi,offset l2_r11
 00005D3B  E8 000007D1		                        call WallCoinChecker
 00005D40  E9 00000084		                        jmp MovementChecker
 00005D45  BE 00000C8F R	        l2_r12_Handle:  mov esi,offset l2_r12
 00005D4A  E8 000007C2		                        call WallCoinChecker
 00005D4F  EB 78		                        jmp MovementChecker
 00005D51  BE 00000CC2 R	        l2_r13_Handle:  mov esi,offset l2_r13
 00005D56  E8 000007B6		                        call WallCoinChecker
 00005D5B  EB 6C		                        jmp MovementChecker
 00005D5D  BE 00000CF5 R	        l2_r14_Handle:  mov esi,offset l2_r14
 00005D62  E8 000007AA		                        call WallCoinChecker
 00005D67  EB 60		                        jmp MovementChecker
 00005D69  BE 00000D28 R	        l2_r15_Handle:  mov esi,offset l2_r15
 00005D6E  E8 0000079E		                        call WallCoinChecker
 00005D73  EB 54		                        jmp MovementChecker
 00005D75  BE 00000D5B R	        l2_r16_Handle:  mov esi,offset l2_r16
 00005D7A  E8 00000792		                        call WallCoinChecker
 00005D7F  EB 48		                        jmp MovementChecker
 00005D81  BE 00000D8E R	        l2_r17_Handle:  mov esi,offset l2_r17
 00005D86  E8 00000786		                        call WallCoinChecker
 00005D8B  EB 3C		                        jmp MovementChecker
 00005D8D  BE 00000DC1 R	        l2_r18_Handle:  mov esi,offset l2_r18
 00005D92  E8 0000077A		                        call WallCoinChecker
 00005D97  EB 30		                        jmp MovementChecker
 00005D99  BE 00000DF4 R	        l2_r19_Handle:  mov esi,offset l2_r19
 00005D9E  E8 0000076E		                        call WallCoinChecker
 00005DA3  EB 24		                        jmp MovementChecker
 00005DA5  BE 00000E27 R	        l2_r20_Handle:  mov esi,offset l2_r20
 00005DAA  E8 00000762		                        call WallCoinChecker
 00005DAF  EB 18		                        jmp MovementChecker
 00005DB1  BE 00000E5A R	        l2_r21_Handle:  mov esi,offset l2_r21
 00005DB6  E8 00000756		                        call WallCoinChecker
 00005DBB  EB 0C		                        jmp MovementChecker
 00005DBD  BE 00000E8D R	        l2_r22_Handle:  mov esi,offset l2_r22
 00005DC2  E8 0000074A		                        call WallCoinChecker
 00005DC7  EB 00		                        jmp MovementChecker
 00005DC9			        MovementChecker:
 00005DC9  C3			    ret
 00005DCA			Level2MovementDown ENDP  
 00005DCA			PlayerMovement3 PROC 
				    
 00005DCA  E8 FFFFF0F7		        call Level3Intersection 
 00005DCF  80 3D 000002AE R	        cmp xPos,6
	   06
 00005DD6  75 15		        jne SkipA
 00005DD8  80 3D 000002AF R	        cmp yPos,16
	   10
 00005DDF  75 0C		        jne SkipA
				        
 00005DE1  C6 05 000002AE R	        mov xPos,66
	   42
 00005DE8  E8 FFFFB334		        call DrawLevel3

 00005DED			        SkipA:
 00005DED  80 3D 000002AE R	        cmp xPos,68
	   44
 00005DF4  75 15		        jne SkipB
 00005DF6  80 3D 000002AF R	        cmp yPos,16
	   10
 00005DFD  75 0C		        jne SkipB
 00005DFF  C6 05 000002AE R	        mov xPos,8
	   08
 00005E06  E8 FFFFB316		        call DrawLevel3
 00005E0B			        SkipB:

				        
 00005E0B  C6 05 00000298 R	        mov PlayerMovement1Possibibly,1
	   01
 00005E12			        LookForKey:
 00005E12  A1 00000008 R	            mov  eax,speed3    ;   1000=1sec
 00005E17  E8 00000000 E	            call Delay
 00005E1C  E8 00000000 E	            call Readkey       ; look for keyboard input
 00005E21  A2 000002B0 R	            mov inputChar,al
 00005E26  75 2C		            jnz MovementcheckerCharacter
				        ;call ReadChar
 00005E28  80 3D 00000297 R	        cmp PlayerDirectionHandle,1
	   01
 00005E2F  74 5A		        je L1moveRight
 00005E31  80 3D 00000297 R	        cmp PlayerDirectionHandle,2
	   02
 00005E38  74 75		        je L1moveLeft
 00005E3A  80 3D 00000297 R	        cmp PlayerDirectionHandle,3
	   03
 00005E41  0F 84 0000008C	        je L1moveUp
 00005E47  80 3D 00000297 R	        cmp PlayerDirectionHandle,4
	   04
 00005E4E  0F 84 0000009D	        je L1MoveDown

 00005E54			        MovementcheckerCharacter:
 00005E54  80 3D 000002B0 R	        cmp inputChar,"d"
	   64
 00005E5B  74 2E		        je L1moveRight
 00005E5D  80 3D 000002B0 R	        cmp inputChar,"a"
	   61
 00005E64  74 49		        je L1moveLeft
 00005E66  80 3D 000002B0 R	        cmp inputChar,"w"
	   77
 00005E6D  74 64		        je L1moveUp
 00005E6F  80 3D 000002B0 R	        cmp inputChar,"s"
	   73
 00005E76  74 79		        je L1MoveDown
 00005E78  80 3D 000002B0 R	        cmp inputChar,"p"
	   70
 00005E7F  E8 00000000 E	        call readchar
 00005E84  EB 8C		        jmp LookForKey

 00005E86  E9 00000084		        jmp L1SkipLeftRight

 00005E8B			        L1moveRight:
 00005E8B  E8 FFFFEF3E		            call UpdatePlayer
 00005E90  FE 05 000002AE R	            inc xPos
 00005E96  FE 05 000002AE R	            inc xPos
 00005E9C  C6 05 00000297 R	            mov PlayerDirectionHandle,1
	   01
 00005EA3  E8 FFFFB600		            call CoordinaterUpdator
 00005EA8  E8 000000BE		            call Level3MovementLeftRight 
 00005EAD  EB 60		            jmp L1SkipLeftRight

 00005EAF			        L1moveLeft:
 00005EAF  E8 FFFFEF1A		            call UpdatePlayer
 00005EB4  FE 0D 000002AE R	            dec xPos
 00005EBA  FE 0D 000002AE R	            dec xPos
 00005EC0  C6 05 00000297 R	            mov PlayerDirectionHandle,2
	   02
 00005EC7  E8 FFFFB5DC		            call CoordinaterUpdator
 00005ECC  E8 0000009A		            call Level3MovementLeftRight 
 00005ED1  EB 3C		            jmp L1SkipLeftRight

 00005ED3			        L1moveUp:
 00005ED3  E8 FFFFEEF6		            call UpdatePlayer
 00005ED8  FE 0D 000002AF R	            dec yPos
 00005EDE  C6 05 00000297 R	            mov PlayerDirectionHandle,3
	   03
 00005EE5  E8 FFFFB5BE		            call CoordinaterUpdator
 00005EEA  E8 00000254		            call Level3MovementUp
 00005EEF  EB 1E		            jmp L1SkipLeftRight

 00005EF1			        L1MoveDown:
 00005EF1  E8 FFFFEED8		            call UpdatePlayer
 00005EF6  FE 05 000002AF R	            inc yPos
 00005EFC  C6 05 00000297 R	            mov PlayerDirectionHandle,4
	   04
 00005F03  E8 FFFFB5A0		            call CoordinaterUpdator
 00005F08  E8 0000041D		            call Level3MovementDown
 00005F0D  EB 00		            jmp L1SkipLeftRight

 00005F0F			        L1SkipLeftRight:

				       

 00005F0F  80 3D 00000298 R	        cmp PlayerMovement1Possibibly,0
	   00
 00005F16  74 02		        je PlayerMovement1Fixer
 00005F18  EB 50		        jmp SkipMovementFixer

 00005F1A			        PlayerMovement1Fixer:
 00005F1A  80 3D 00000297 R	        cmp PlayerDirectionHandle,1
	   01
 00005F21  74 1D		        je RightFixer
 00005F23  80 3D 00000297 R	        cmp PlayerDirectionHandle,2
	   02
 00005F2A  74 22		        je LeftFixer
 00005F2C  80 3D 00000297 R	        cmp PlayerDirectionHandle,3
	   03
 00005F33  74 27		        je UpFixer
 00005F35  80 3D 00000297 R	        cmp PlayerDirectionHandle,4
	   04
 00005F3C  74 26		        je DownFixer
 00005F3E  EB 2A		        jmp SkipMovementFixer

 00005F40  FE 0D 000002AE R	        RightFixer: dec xPos
 00005F46  FE 0D 000002AE R	                    dec xPos
 00005F4C  EB 1C		                    jmp SkipMovementFixer
 00005F4E  FE 05 000002AE R	        LeftFixer:  inc xPos
 00005F54  FE 05 000002AE R	                    inc xPos
 00005F5A  EB 0E		                    jmp SkipMovementFixer
 00005F5C  FE 05 000002AF R	        UpFixer:    inc yPos
 00005F62  EB 06		                    jmp SkipMovementFixer
 00005F64  FE 0D 000002AF R	        DownFixer:  dec yPos

 00005F6A			        SkipMovementFixer:
 00005F6A  C3			    ret
 00005F6B			PlayerMovement3 ENDP
 00005F6B			Level3MovementLeftRight PROC 

 00005F6B  80 FF 01		        cmp bh,1
 00005F6E  0F 84 000000B4	        je l3_r02_Handle  
 00005F74  80 FF 02		        cmp bh,2
 00005F77  0F 84 000000BA	        je l3_r03_Handle
 00005F7D  80 FF 03		        cmp bh,3
 00005F80  0F 84 000000C0	        je l3_r04_Handle
 00005F86  80 FF 04		        cmp bh,4
 00005F89  0F 84 000000C6	        je l3_r05_Handle
 00005F8F  80 FF 05		        cmp bh,5
 00005F92  0F 84 000000CC	        je l3_r06_Handle
 00005F98  80 FF 06		        cmp bh,6
 00005F9B  0F 84 000000D2	        je l3_r07_Handle
 00005FA1  80 FF 07		        cmp bh,7
 00005FA4  0F 84 000000D8	        je l3_r08_Handle
 00005FAA  80 FF 08		        cmp bh,8
 00005FAD  0F 84 000000DE	        je l3_r09_Handle
 00005FB3  80 FF 09		        cmp bh,9
 00005FB6  0F 84 000000E4	        je l3_r10_Handle
 00005FBC  80 FF 0A		        cmp bh,10
 00005FBF  0F 84 000000EA	        je l3_r11_Handle
 00005FC5  80 FF 0B		        cmp bh,11
 00005FC8  0F 84 000000F0	        je l3_r12_Handle
 00005FCE  80 FF 0C		        cmp bh,12
 00005FD1  0F 84 000000F3	        je l3_r13_Handle
 00005FD7  80 FF 0D		        cmp bh,13
 00005FDA  0F 84 000000F6	        je l3_r14_Handle
 00005FE0  80 FF 0E		        cmp bh,14
 00005FE3  0F 84 000000F9	        je l3_r15_Handle
 00005FE9  80 FF 0F		        cmp bh,15
 00005FEC  0F 84 000000FC	        je l3_r16_Handle
 00005FF2  80 FF 10		        cmp bh,16
 00005FF5  0F 84 000000FF	        je l3_r17_Handle
 00005FFB  80 FF 11		        cmp bh,17
 00005FFE  0F 84 00000102	        je l3_r18_Handle
 00006004  80 FF 12		        cmp bh,18
 00006007  0F 84 00000105	        je l3_r19_Handle
 0000600D  80 FF 13		        cmp bh,19
 00006010  0F 84 00000108	        je l3_r20_Handle
 00006016  80 FF 14		        cmp bh,20
 00006019  0F 84 0000010B	        je l3_r21_Handle
 0000601F  80 FF 15		        cmp bh,21
 00006022  0F 84 0000010E	        je l3_r22_Handle
				            
 00006028  BE 00000F07 R	        l3_r02_Handle:  mov esi,offset l3_r02
 0000602D  E8 000004DF		                        call WallCoinChecker
 00006032  E9 0000010B		                        jmp MovementChecker
 00006037  BE 00000F4E R	        l3_r03_Handle:  mov esi,offset l3_r03
 0000603C  E8 000004D0		                        call WallCoinChecker
 00006041  E9 000000FC		                        jmp MovementChecker
 00006046  BE 00000F95 R	        l3_r04_Handle:  mov esi,offset l3_r04
 0000604B  E8 000004C1		                        call WallCoinChecker
 00006050  E9 000000ED		                        jmp MovementChecker
 00006055  BE 00000FDC R	        l3_r05_Handle:  mov esi,offset l3_r05
 0000605A  E8 000004B2		                        call WallCoinChecker
 0000605F  E9 000000DE		                        jmp MovementChecker
 00006064  BE 00001023 R	        l3_r06_Handle:  mov esi,offset l3_r06
 00006069  E8 000004A3		                        call WallCoinChecker
 0000606E  E9 000000CF		                        jmp MovementChecker
 00006073  BE 0000106A R	        l3_r07_Handle:  mov esi,offset l3_r07
 00006078  E8 00000494		                        call WallCoinChecker
 0000607D  E9 000000C0		                        jmp MovementChecker
 00006082  BE 000010B1 R	        l3_r08_Handle:  mov esi,offset l3_r08
 00006087  E8 00000485		                        call WallCoinChecker
 0000608C  E9 000000B1		                        jmp MovementChecker
 00006091  BE 000010F8 R	        l3_r09_Handle:  mov esi,offset l3_r09
 00006096  E8 00000476		                        call WallCoinChecker
 0000609B  E9 000000A2		                        jmp MovementChecker
 000060A0  BE 0000113F R	        l3_r10_Handle:  mov esi,offset l3_r10
 000060A5  E8 00000467		                        call WallCoinChecker
 000060AA  E9 00000093		                        jmp MovementChecker
 000060AF  BE 00001186 R	        l3_r11_Handle:  mov esi,offset l3_r11
 000060B4  E8 00000458		                        call WallCoinChecker
 000060B9  E9 00000084		                        jmp MovementChecker
 000060BE  BE 000011CD R	        l3_r12_Handle:  mov esi,offset l3_r12
 000060C3  E8 00000449		                        call WallCoinChecker
 000060C8  EB 78		                        jmp MovementChecker
 000060CA  BE 00001214 R	        l3_r13_Handle:  mov esi,offset l3_r13
 000060CF  E8 0000043D		                        call WallCoinChecker
 000060D4  EB 6C		                        jmp MovementChecker
 000060D6  BE 0000125B R	        l3_r14_Handle:  mov esi,offset l3_r14
 000060DB  E8 00000431		                        call WallCoinChecker
 000060E0  EB 60		                        jmp MovementChecker
 000060E2  BE 000012A2 R	        l3_r15_Handle:  mov esi,offset l3_r15
 000060E7  E8 00000425		                        call WallCoinChecker
 000060EC  EB 54		                        jmp MovementChecker
 000060EE  BE 000012E9 R	        l3_r16_Handle:  mov esi,offset l3_r16
 000060F3  E8 00000419		                        call WallCoinChecker
 000060F8  EB 48		                        jmp MovementChecker
 000060FA  BE 00001330 R	        l3_r17_Handle:  mov esi,offset l3_r17
 000060FF  E8 0000040D		                        call WallCoinChecker
 00006104  EB 3C		                        jmp MovementChecker
 00006106  BE 00001377 R	        l3_r18_Handle:  mov esi,offset l3_r18
 0000610B  E8 00000401		                        call WallCoinChecker
 00006110  EB 30		                        jmp MovementChecker
 00006112  BE 000013BE R	        l3_r19_Handle:  mov esi,offset l3_r19
 00006117  E8 000003F5		                        call WallCoinChecker
 0000611C  EB 24		                        jmp MovementChecker
 0000611E  BE 00001405 R	        l3_r20_Handle:  mov esi,offset l3_r20
 00006123  E8 000003E9		                        call WallCoinChecker
 00006128  EB 18		                        jmp MovementChecker
 0000612A  BE 0000144C R	        l3_r21_Handle:  mov esi,offset l3_r21
 0000612F  E8 000003DD		                        call WallCoinChecker
 00006134  EB 0C		                        jmp MovementChecker
 00006136  BE 00001493 R	        l3_r22_Handle:  mov esi,offset l3_r22
 0000613B  E8 000003D1		                        call WallCoinChecker
 00006140  EB 00		                        jmp MovementChecker

 00006142			        MovementChecker:
 00006142  C3			    ret
 00006143			Level3MovementLeftRight ENDP    
 00006143			Level3MovementUp PROC   

 00006143  80 FF 00		        cmp bh,0
 00006146  0F 84 000000B4	        je l3_r01_Handle  
 0000614C  80 FF 01		        cmp bh,1
 0000614F  0F 84 000000BA	        je l3_r02_Handle
 00006155  80 FF 02		        cmp bh,2
 00006158  0F 84 000000C0	        je l3_r03_Handle
 0000615E  80 FF 03		        cmp bh,3
 00006161  0F 84 000000C6	        je l3_r04_Handle
 00006167  80 FF 04		        cmp bh,4
 0000616A  0F 84 000000CC	        je l3_r05_Handle
 00006170  80 FF 05		        cmp bh,5
 00006173  0F 84 000000D2	        je l3_r06_Handle
 00006179  80 FF 06		        cmp bh,6
 0000617C  0F 84 000000D8	        je l3_r07_Handle
 00006182  80 FF 07		        cmp bh,7
 00006185  0F 84 000000DE	        je l3_r08_Handle
 0000618B  80 FF 08		        cmp bh,8
 0000618E  0F 84 000000E4	        je l3_r09_Handle
 00006194  80 FF 09		        cmp bh,9
 00006197  0F 84 000000EA	        je l3_r10_Handle
 0000619D  80 FF 0A		        cmp bh,10
 000061A0  0F 84 000000F0	        je l3_r11_Handle
 000061A6  80 FF 0B		        cmp bh,11
 000061A9  0F 84 000000F6	        je l3_r12_Handle
 000061AF  80 FF 0C		        cmp bh,12
 000061B2  0F 84 000000F9	        je l3_r13_Handle
 000061B8  80 FF 0D		        cmp bh,13
 000061BB  0F 84 000000FC	        je l3_r14_Handle
 000061C1  80 FF 0E		        cmp bh,14
 000061C4  0F 84 000000FF	        je l3_r15_Handle
 000061CA  80 FF 0F		        cmp bh,15
 000061CD  0F 84 00000102	        je l3_r16_Handle
 000061D3  80 FF 10		        cmp bh,16
 000061D6  0F 84 00000105	        je l3_r17_Handle
 000061DC  80 FF 11		        cmp bh,17
 000061DF  0F 84 00000108	        je l3_r18_Handle
 000061E5  80 FF 12		        cmp bh,18
 000061E8  0F 84 0000010B	        je l3_r19_Handle
 000061EE  80 FF 13		        cmp bh,19
 000061F1  0F 84 0000010E	        je l3_r20_Handle
 000061F7  80 FF 14		        cmp bh,20
 000061FA  0F 84 00000111	        je l3_r21_Handle

 00006200  BE 00000EC0 R	        l3_r01_Handle:  mov esi,offset l3_r01
 00006205  E8 00000307		                        call WallCoinChecker
 0000620A  E9 0000011A		                        jmp MovementChecker            
 0000620F  BE 00000F07 R	        l3_r02_Handle:  mov esi,offset l3_r02
 00006214  E8 000002F8		                        call WallCoinChecker
 00006219  E9 0000010B		                        jmp MovementChecker
 0000621E  BE 00000F4E R	        l3_r03_Handle:  mov esi,offset l3_r03
 00006223  E8 000002E9		                        call WallCoinChecker
 00006228  E9 000000FC		                        jmp MovementChecker
 0000622D  BE 00000F95 R	        l3_r04_Handle:  mov esi,offset l3_r04
 00006232  E8 000002DA		                        call WallCoinChecker
 00006237  E9 000000ED		                        jmp MovementChecker
 0000623C  BE 00000FDC R	        l3_r05_Handle:  mov esi,offset l3_r05
 00006241  E8 000002CB		                        call WallCoinChecker
 00006246  E9 000000DE		                        jmp MovementChecker
 0000624B  BE 00001023 R	        l3_r06_Handle:  mov esi,offset l3_r06
 00006250  E8 000002BC		                        call WallCoinChecker
 00006255  E9 000000CF		                        jmp MovementChecker
 0000625A  BE 0000106A R	        l3_r07_Handle:  mov esi,offset l3_r07
 0000625F  E8 000002AD		                        call WallCoinChecker
 00006264  E9 000000C0		                        jmp MovementChecker
 00006269  BE 000010B1 R	        l3_r08_Handle:  mov esi,offset l3_r08
 0000626E  E8 0000029E		                        call WallCoinChecker
 00006273  E9 000000B1		                        jmp MovementChecker
 00006278  BE 000010F8 R	        l3_r09_Handle:  mov esi,offset l3_r09
 0000627D  E8 0000028F		                        call WallCoinChecker
 00006282  E9 000000A2		                        jmp MovementChecker
 00006287  BE 0000113F R	        l3_r10_Handle:  mov esi,offset l3_r10
 0000628C  E8 00000280		                        call WallCoinChecker
 00006291  E9 00000093		                        jmp MovementChecker
 00006296  BE 00001186 R	        l3_r11_Handle:  mov esi,offset l3_r11
 0000629B  E8 00000271		                        call WallCoinChecker
 000062A0  E9 00000084		                        jmp MovementChecker
 000062A5  BE 000011CD R	        l3_r12_Handle:  mov esi,offset l3_r12
 000062AA  E8 00000262		                        call WallCoinChecker
 000062AF  EB 78		                        jmp MovementChecker
 000062B1  BE 00001214 R	        l3_r13_Handle:  mov esi,offset l3_r13
 000062B6  E8 00000256		                        call WallCoinChecker
 000062BB  EB 6C		                        jmp MovementChecker
 000062BD  BE 0000125B R	        l3_r14_Handle:  mov esi,offset l3_r14
 000062C2  E8 0000024A		                        call WallCoinChecker
 000062C7  EB 60		                        jmp MovementChecker
 000062C9  BE 000012A2 R	        l3_r15_Handle:  mov esi,offset l3_r15
 000062CE  E8 0000023E		                        call WallCoinChecker
 000062D3  EB 54		                        jmp MovementChecker
 000062D5  BE 000012E9 R	        l3_r16_Handle:  mov esi,offset l3_r16
 000062DA  E8 00000232		                        call WallCoinChecker
 000062DF  EB 48		                        jmp MovementChecker
 000062E1  BE 00001330 R	        l3_r17_Handle:  mov esi,offset l3_r17
 000062E6  E8 00000226		                        call WallCoinChecker
 000062EB  EB 3C		                        jmp MovementChecker
 000062ED  BE 00001377 R	        l3_r18_Handle:  mov esi,offset l3_r18
 000062F2  E8 0000021A		                        call WallCoinChecker
 000062F7  EB 30		                        jmp MovementChecker
 000062F9  BE 000013BE R	        l3_r19_Handle:  mov esi,offset l3_r19
 000062FE  E8 0000020E		                        call WallCoinChecker
 00006303  EB 24		                        jmp MovementChecker
 00006305  BE 00001405 R	        l3_r20_Handle:  mov esi,offset l3_r20
 0000630A  E8 00000202		                        call WallCoinChecker
 0000630F  EB 18		                        jmp MovementChecker
 00006311  BE 0000144C R	        l3_r21_Handle:  mov esi,offset l3_r21
 00006316  E8 000001F6		                        call WallCoinChecker
 0000631B  EB 0C		                        jmp MovementChecker
 0000631D  BE 00001493 R	        l3_r22_Handle:  mov esi,offset l3_r22
 00006322  E8 000001EA		                        call WallCoinChecker
 00006327  EB 00		                        jmp MovementChecker
 00006329			        MovementChecker:
 00006329  C3			    ret
 0000632A			Level3MovementUp ENDP  
 0000632A			Level3MovementDown PROC   

 0000632A  80 FF 00		        cmp bh,0
 0000632D  0F 84 000000B4	        je l3_r01_Handle  
 00006333  80 FF 01		        cmp bh,1
 00006336  0F 84 000000BA	        je l3_r02_Handle
 0000633C  80 FF 02		        cmp bh,2
 0000633F  0F 84 000000C0	        je l3_r03_Handle
 00006345  80 FF 03		        cmp bh,3
 00006348  0F 84 000000C6	        je l3_r04_Handle
 0000634E  80 FF 04		        cmp bh,4
 00006351  0F 84 000000CC	        je l3_r05_Handle
 00006357  80 FF 05		        cmp bh,5
 0000635A  0F 84 000000D2	        je l3_r06_Handle
 00006360  80 FF 06		        cmp bh,6
 00006363  0F 84 000000D8	        je l3_r07_Handle
 00006369  80 FF 07		        cmp bh,7
 0000636C  0F 84 000000DE	        je l3_r08_Handle
 00006372  80 FF 08		        cmp bh,8
 00006375  0F 84 000000E4	        je l3_r09_Handle
 0000637B  80 FF 09		        cmp bh,9
 0000637E  0F 84 000000EA	        je l3_r10_Handle
 00006384  80 FF 0A		        cmp bh,10
 00006387  0F 84 000000F0	        je l3_r11_Handle
 0000638D  80 FF 0B		        cmp bh,11
 00006390  0F 84 000000F6	        je l3_r12_Handle
 00006396  80 FF 0C		        cmp bh,12
 00006399  0F 84 000000F9	        je l3_r13_Handle
 0000639F  80 FF 0D		        cmp bh,13
 000063A2  0F 84 000000FC	        je l3_r14_Handle
 000063A8  80 FF 0E		        cmp bh,14
 000063AB  0F 84 000000FF	        je l3_r15_Handle
 000063B1  80 FF 0F		        cmp bh,15
 000063B4  0F 84 00000102	        je l3_r16_Handle
 000063BA  80 FF 10		        cmp bh,16
 000063BD  0F 84 00000105	        je l3_r17_Handle
 000063C3  80 FF 11		        cmp bh,17
 000063C6  0F 84 00000108	        je l3_r18_Handle
 000063CC  80 FF 12		        cmp bh,18
 000063CF  0F 84 0000010B	        je l3_r19_Handle
 000063D5  80 FF 13		        cmp bh,19
 000063D8  0F 84 0000010E	        je l3_r20_Handle
 000063DE  80 FF 14		        cmp bh,20
 000063E1  0F 84 00000111	        je l3_r21_Handle

 000063E7  BE 00000EC0 R	        l3_r01_Handle:  mov esi,offset l3_r01
 000063EC  E8 00000120		                        call WallCoinChecker
 000063F1  E9 0000011A		                        jmp MovementChecker            
 000063F6  BE 00000F07 R	        l3_r02_Handle:  mov esi,offset l3_r02
 000063FB  E8 00000111		                        call WallCoinChecker
 00006400  E9 0000010B		                        jmp MovementChecker
 00006405  BE 00000F4E R	        l3_r03_Handle:  mov esi,offset l3_r03
 0000640A  E8 00000102		                        call WallCoinChecker
 0000640F  E9 000000FC		                        jmp MovementChecker
 00006414  BE 00000F95 R	        l3_r04_Handle:  mov esi,offset l3_r04
 00006419  E8 000000F3		                        call WallCoinChecker
 0000641E  E9 000000ED		                        jmp MovementChecker
 00006423  BE 00000FDC R	        l3_r05_Handle:  mov esi,offset l3_r05
 00006428  E8 000000E4		                        call WallCoinChecker
 0000642D  E9 000000DE		                        jmp MovementChecker
 00006432  BE 00001023 R	        l3_r06_Handle:  mov esi,offset l3_r06
 00006437  E8 000000D5		                        call WallCoinChecker
 0000643C  E9 000000CF		                        jmp MovementChecker
 00006441  BE 0000106A R	        l3_r07_Handle:  mov esi,offset l3_r07
 00006446  E8 000000C6		                        call WallCoinChecker
 0000644B  E9 000000C0		                        jmp MovementChecker
 00006450  BE 000010B1 R	        l3_r08_Handle:  mov esi,offset l3_r08
 00006455  E8 000000B7		                        call WallCoinChecker
 0000645A  E9 000000B1		                        jmp MovementChecker
 0000645F  BE 000010F8 R	        l3_r09_Handle:  mov esi,offset l3_r09
 00006464  E8 000000A8		                        call WallCoinChecker
 00006469  E9 000000A2		                        jmp MovementChecker
 0000646E  BE 0000113F R	        l3_r10_Handle:  mov esi,offset l3_r10
 00006473  E8 00000099		                        call WallCoinChecker
 00006478  E9 00000093		                        jmp MovementChecker
 0000647D  BE 00001186 R	        l3_r11_Handle:  mov esi,offset l3_r11
 00006482  E8 0000008A		                        call WallCoinChecker
 00006487  E9 00000084		                        jmp MovementChecker
 0000648C  BE 000011CD R	        l3_r12_Handle:  mov esi,offset l3_r12
 00006491  E8 0000007B		                        call WallCoinChecker
 00006496  EB 78		                        jmp MovementChecker
 00006498  BE 00001214 R	        l3_r13_Handle:  mov esi,offset l3_r13
 0000649D  E8 0000006F		                        call WallCoinChecker
 000064A2  EB 6C		                        jmp MovementChecker
 000064A4  BE 0000125B R	        l3_r14_Handle:  mov esi,offset l3_r14
 000064A9  E8 00000063		                        call WallCoinChecker
 000064AE  EB 60		                        jmp MovementChecker
 000064B0  BE 000012A2 R	        l3_r15_Handle:  mov esi,offset l3_r15
 000064B5  E8 00000057		                        call WallCoinChecker
 000064BA  EB 54		                        jmp MovementChecker
 000064BC  BE 000012E9 R	        l3_r16_Handle:  mov esi,offset l3_r16
 000064C1  E8 0000004B		                        call WallCoinChecker
 000064C6  EB 48		                        jmp MovementChecker
 000064C8  BE 00001330 R	        l3_r17_Handle:  mov esi,offset l3_r17
 000064CD  E8 0000003F		                        call WallCoinChecker
 000064D2  EB 3C		                        jmp MovementChecker
 000064D4  BE 00001377 R	        l3_r18_Handle:  mov esi,offset l3_r18
 000064D9  E8 00000033		                        call WallCoinChecker
 000064DE  EB 30		                        jmp MovementChecker
 000064E0  BE 000013BE R	        l3_r19_Handle:  mov esi,offset l3_r19
 000064E5  E8 00000027		                        call WallCoinChecker
 000064EA  EB 24		                        jmp MovementChecker
 000064EC  BE 00001405 R	        l3_r20_Handle:  mov esi,offset l3_r20
 000064F1  E8 0000001B		                        call WallCoinChecker
 000064F6  EB 18		                        jmp MovementChecker
 000064F8  BE 0000144C R	        l3_r21_Handle:  mov esi,offset l3_r21
 000064FD  E8 0000000F		                        call WallCoinChecker
 00006502  EB 0C		                        jmp MovementChecker
 00006504  BE 00001493 R	        l3_r22_Handle:  mov esi,offset l3_r22
 00006509  E8 00000003		                        call WallCoinChecker
 0000650E  EB 00		                        jmp MovementChecker
 00006510			        MovementChecker:
 00006510  C3			    ret
 00006511			Level3MovementDown ENDP  
 00006511			WallCoinChecker PROC
 00006511  B9 00000000		    mov ecx,0
 00006516  8A CB		    mov cl,bl
 00006518			    l1loop1:
 00006518  46			    inc esi
 00006519  E2 FD		    loop l1loop1
 0000651B  BA 00000000		    mov edx,0
 00006520  8A 15 000002B1 R	    mov dl,wall
 00006526  38 16		    cmp [esi],dl
 00006528  75 09		    jne replacewithspace 
 0000652A  C6 05 00000298 R	        mov PlayerMovement1Possibibly,0
	   00
 00006531  EB 36		        jmp EscapeReplacer
 00006533			    replacewithspace:
 00006533  B9 00000020		    mov ecx,20h
 00006538  BA 00000000		    mov edx,0
 0000653D  B2 2E		    mov dl,"."
 0000653F  38 16		    cmp [esi],dl
 00006541  75 0F		    jne SkipScreIncrease
 00006543  66| 83 05		    add score,10
	   0000005F R 0A
 0000654B  66| FF 0D		    dec CurrentCoins
	   00000292 R

 00006552			    SkipScreIncrease:
 00006552  BA 00000000		    mov edx,0
 00006557  B2 2A		    mov dl,"*"
 00006559  38 16		    cmp [esi],dl
 0000655B  75 0A		    jne Skip
 0000655D  66| 83 05		    add score,100
	   0000005F R 64
				    
				    ;INVOKE PlaySound, OFFSET musicFruit, NULL, SND_FILENAME
				   

 00006565  EB 00		    jmp Skip
 00006567			    Skip:
 00006567  88 0E		    mov [esi],cl
 00006569			    EscapeReplacer:
 00006569  C3			    ret
 0000656A			WallCoinChecker ENDP

				;----------------------------------------------(Levels)----------------------------------------------
				;----------------------------------------------(Player)----------------------------------------------
				;------------------------------------------------------------------------------------

 0000656A			Level1Maze PROC
 0000656A  C6 05 000002AE R	        mov xPos,8
	   08
 00006571  C6 05 000002AF R	        mov yPos,7
	   07
 00006578  C6 05 000002BB R	        mov xG1Pos,10
	   0A
 0000657F  C6 05 000002BC R	        mov yG1Pos,15
	   0F

 00006586  E8 00000000 E	        call clrscr
 0000658B  E8 FFFFA6F7		        call DrawLevel1
 00006590			    gameLoop1:

 00006590  E8 FFFFAEA0		        call DrawScore    
 00006595  E8 FFFFB18F		        call Ghost1Movement
 0000659A  E8 FFFFB108		        call DrawGhost1

				        ;call Level1Intersection 
				        
 0000659F  E8 FFFFEA10		        call PlayerMovement1
 000065A4  E8 FFFFE800		        call DrawPlayer

 000065A9  66| 81 3D		        cmp CurrentCoins,457
	   00000292 R
	   01C9
 000065B2  77 05		        ja skip
 000065B4  E8 0000000A		        call Level2Maze 
 000065B9			        skip:
 000065B9  80 3D 0000005E R	        cmp livesIndicator,0  
	   00
 000065C0  75 CE		        jne gameLoop1
 000065C2  C3			    ret
 000065C3			Level1Maze ENDP 
 000065C3			Level2Maze PROC 
 000065C3  C6 05 0000005D R	        mov levelIndicator,2
	   02
 000065CA  C6 05 000002AE R	        mov xPos,8
	   08
 000065D1  C6 05 000002AF R	        mov yPos,7
	   07
 000065D8  C6 05 000002BF R	        mov xG3Pos,12
	   0C
 000065DF  C6 05 000002C0 R	        mov yG3Pos,17
	   11
 000065E6  C6 05 000002BD R	        mov xG2Pos,8
	   08
 000065ED  C6 05 000002BE R	        mov yG2Pos,15
	   0F

 000065F4  B8 00000000		        mov eax,black (black*16)
 000065F9  E8 00000000 E	        call settextcolor
 000065FE  B8 000005DC		        mov eax,1500
 00006603  E8 00000000 E	        call delay
 00006608  E8 00000000 E	        call clrscr
 0000660D  E8 FFFFA8BC		        call DrawLevel2
 00006612			    gameLoop2:

 00006612  E8 FFFFAE1E		        call DrawScore
 00006617  E8 FFFFBB9D		        call Ghost3Movement
 0000661C  E8 FFFFB9DF		        call Ghost2Movement
 00006621  E8 FFFFBAFA		        call DrawGhost3
 00006626  E8 FFFFB93C		        call DrawGhost2
 0000662B  E8 FFFFF08F		        call PlayerMovement2
 00006630  E8 FFFFE774		        call DrawPlayer
 00006635  66| 81 3D		        cmp CurrentCoins,256
	   00000292 R
	   0100
 0000663E  77 05		        ja skip
 00006640  E8 0000000A		        call Level3Maze 
 00006645			        skip:
 00006645  80 3D 0000005E R	        cmp livesIndicator,0  
	   00
 0000664C  75 C4		        jne gameLoop2
 0000664E  C3			ret
 0000664F			Level2Maze ENDP 
 0000664F			Level3Maze PROC  
 0000664F  C6 05 0000005D R	        mov levelIndicator,3
	   03
 00006656  C6 05 000002AE R	        mov xPos,8
	   08
 0000665D  C6 05 000002AF R	        mov yPos,7
	   07
 00006664  C6 05 000002C1 R	        mov xG4Pos,40
	   28
 0000666B  C6 05 000002C2 R	        mov yG4Pos,21
	   15
 00006672  C6 05 000002C3 R	        mov xG5Pos,34
	   22
 00006679  C6 05 000002C4 R	        mov yG5Pos,21
	   15
 00006680  C6 05 000002C5 R	        mov xG6Pos,40
	   28
 00006687  C6 05 000002C6 R	        mov yG6Pos,15
	   0F
 0000668E  C6 05 000002C7 R	        mov xG7Pos,34
	   22
 00006695  C6 05 000002C8 R	        mov yG7Pos,15
	   0F

 0000669C  B8 00000000		        mov eax,black (black*16)
 000066A1  E8 00000000 E	        call settextcolor
 000066A6  B8 000005DC		        mov eax,1500
 000066AB  E8 00000000 E	        call delay
 000066B0  E8 00000000 E	        call clrscr
 000066B5  E8 FFFFAA67		        call DrawLevel3

 000066BA			    gameLoop3:
 000066BA  E8 FFFFAD76		        call DrawScore
 000066BF  E8 FFFFCEA9		        call Ghost7Movement
 000066C4  E8 FFFFCCF2		        call Ghost6Movement
 000066C9  E8 FFFFCB3B		        call Ghost5Movement
 000066CE  E8 FFFFC984		        call Ghost4Movement
 000066D3  E8 FFFFCE03		        call DrawGhost7
 000066D8  E8 FFFFCC4C		        call DrawGhost6
 000066DD  E8 FFFFCA95		        call DrawGhost5
 000066E2  E8 FFFFC8D7		        call DrawGhost4
 000066E7  E8 FFFFF6DE		        call PlayerMovement3
 000066EC  E8 FFFFE6B8		        call DrawPlayer
 000066F1  80 3D 0000005E R	        cmp livesIndicator,0  
	   00
 000066F8  66| 83 3D		        cmp CurrentCoins,0
	   00000292 R 00
 00006700  75 05		        jne skip
 00006702  E8 FFFFA4C1		        call EndScreen  
				       ; call Level3Maze
 00006707			        skip:
 00006707  75 B1		        jne gameLoop3
 00006709  C3			ret
 0000670A			Level3Maze ENDP 

 0000670A			ExitGame PROC
 0000670A  E8 00000000 E	    call clrscr
 0000670F  B8 0000000F		    mov eax, white (black*16)
 00006714  E8 00000000 E	    call settextcolor
				    exit
 00006719  6A 00	   *	    push   +000000000h
 0000671B  E8 00000000 E   *	    call   ExitProcess
 00006720			ExitGame ENDP   

				end main
Microsoft (R) Macro Assembler Version 14.37.32824.0	    12/20/23 18:52:36
<MASM PlaySound                        (PlaySoundExample.asm  Symbols 2 - 1




Macros:

                N a m e                 Type

IsDefined  . . . . . . . . . . .	Func
Startup  . . . . . . . . . . . .	Proc
mDumpMem . . . . . . . . . . . .	Proc
mDump  . . . . . . . . . . . . .	Proc
mGotoxy  . . . . . . . . . . . .	Proc
mReadString  . . . . . . . . . .	Proc
mShowRegister  . . . . . . . . .	Proc
mShow  . . . . . . . . . . . . .	Proc
mWriteLn . . . . . . . . . . . .	Proc
mWriteSpace  . . . . . . . . . .	Proc
mWriteString . . . . . . . . . .	Proc
mWrite . . . . . . . . . . . . .	Proc


Structures and Unions:

                N a m e                  Size
                                         Offset      Type

CONSOLE_CURSOR_INFO  . . . . . .	 00000008
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  bVisible . . . . . . . . . . .	 00000004	 DWord
CONSOLE_SCREEN_BUFFER_INFO . . .	 00000016
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  dwCursorPosition . . . . . . .	 00000004	 DWord
  wAttributes  . . . . . . . . .	 00000008	 Word
  srWindow . . . . . . . . . . .	 0000000A	 QWord
  dwMaximumWindowSize  . . . . .	 00000012	 DWord
COORD  . . . . . . . . . . . . .	 00000004
  X  . . . . . . . . . . . . . .	 00000000	 Word
  Y  . . . . . . . . . . . . . .	 00000002	 Word
FILETIME . . . . . . . . . . . .	 00000008
  loDateTime . . . . . . . . . .	 00000000	 DWord
  hiDateTime . . . . . . . . . .	 00000004	 DWord
FOCUS_EVENT_RECORD . . . . . . .	 00000004
  bSetFocus  . . . . . . . . . .	 00000000	 DWord
FPU_ENVIRON  . . . . . . . . . .	 0000001C
  controlWord  . . . . . . . . .	 00000000	 Word
  statusWord . . . . . . . . . .	 00000004	 Word
  tagWord  . . . . . . . . . . .	 00000008	 Word
  instrPointerOffset . . . . . .	 0000000C	 DWord
  instrPointerSelector . . . . .	 00000010	 DWord
  operandPointerOffset . . . . .	 00000014	 DWord
  operandPointerSelector . . . .	 00000018	 Word
INPUT_RECORD . . . . . . . . . .	 00000014
  EventType  . . . . . . . . . .	 00000000	 Word
  Event  . . . . . . . . . . . .	 00000004	 XmmWord
  bKeyDown . . . . . . . . . . .	 00000000	 DWord
  wRepeatCount . . . . . . . . .	 00000004	 Word
  wVirtualKeyCode  . . . . . . .	 00000006	 Word
  wVirtualScanCode . . . . . . .	 00000008	 Word
  uChar  . . . . . . . . . . . .	 0000000A	 Word
  UnicodeChar  . . . . . . . . .	 00000000	 Word
  AsciiChar  . . . . . . . . . .	 00000000	 Byte
  dwControlKeyState  . . . . . .	 0000000C	 DWord
  dwMousePosition  . . . . . . .	 00000000	 DWord
  dwButtonState  . . . . . . . .	 00000004	 DWord
  dwMouseControlKeyState . . . .	 00000008	 DWord
  dwEventFlags . . . . . . . . .	 0000000C	 DWord
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  dwCommandId  . . . . . . . . .	 00000000	 DWord
  bSetFocus  . . . . . . . . . .	 00000000	 DWord
KEY_EVENT_RECORD . . . . . . . .	 00000010
  bKeyDown . . . . . . . . . . .	 00000000	 DWord
  wRepeatCount . . . . . . . . .	 00000004	 Word
  wVirtualKeyCode  . . . . . . .	 00000006	 Word
  wVirtualScanCode . . . . . . .	 00000008	 Word
  uChar  . . . . . . . . . . . .	 0000000A	 Word
  UnicodeChar  . . . . . . . . .	 00000000	 Word
  AsciiChar  . . . . . . . . . .	 00000000	 Byte
  dwControlKeyState  . . . . . .	 0000000C	 DWord
MENU_EVENT_RECORD  . . . . . . .	 00000004
  dwCommandId  . . . . . . . . .	 00000000	 DWord
MOUSE_EVENT_RECORD . . . . . . .	 00000010
  dwMousePosition  . . . . . . .	 00000000	 DWord
  dwButtonState  . . . . . . . .	 00000004	 DWord
  dwMouseControlKeyState . . . .	 00000008	 DWord
  dwEventFlags . . . . . . . . .	 0000000C	 DWord
SMALL_RECT . . . . . . . . . . .	 00000008
  Left . . . . . . . . . . . . .	 00000000	 Word
  Top  . . . . . . . . . . . . .	 00000002	 Word
  Right  . . . . . . . . . . . .	 00000004	 Word
  Bottom . . . . . . . . . . . .	 00000006	 Word
SYSTEMTIME . . . . . . . . . . .	 00000010
  wYear  . . . . . . . . . . . .	 00000000	 Word
  wMonth . . . . . . . . . . . .	 00000002	 Word
  wDayOfWeek . . . . . . . . . .	 00000004	 Word
  wDay . . . . . . . . . . . . .	 00000006	 Word
  wHour  . . . . . . . . . . . .	 00000008	 Word
  wMinute  . . . . . . . . . . .	 0000000A	 Word
  wSecond  . . . . . . . . . . .	 0000000C	 Word
  wMilliseconds  . . . . . . . .	 0000000E	 Word
WINDOW_BUFFER_SIZE_RECORD  . . .	 00000004
  dwSize . . . . . . . . . . . .	 00000000	 DWord


Segments and Groups:

                N a m e                 Size     Length   Align   Combine Class

FLAT . . . . . . . . . . . . . .	GROUP
STACK  . . . . . . . . . . . . .	32 Bit	 00001000 Para	  Stack	  'STACK'	 
_DATA  . . . . . . . . . . . . .	32 Bit	 000016CA Para	  Public  'DATA'	
_TEXT  . . . . . . . . . . . . .	32 Bit	 00006720 Para	  Public  'CODE'	


Procedures, parameters, and locals:

                N a m e                 Type     Value    Attr

CloseFile  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CloseHandle  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Clrscr . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CoordinaterUpdatorGhost1 . . . .	P Near	 000014BD _TEXT	Length= 00000015 Public STDCALL
CoordinaterUpdatorGhost2 . . . .	P Near	 000014D2 _TEXT	Length= 00000015 Public STDCALL
CoordinaterUpdatorGhost3 . . . .	P Near	 000014E7 _TEXT	Length= 00000015 Public STDCALL
CoordinaterUpdatorGhost4 . . . .	P Near	 000014FC _TEXT	Length= 00000015 Public STDCALL
CoordinaterUpdatorGhost5 . . . .	P Near	 00001511 _TEXT	Length= 00000015 Public STDCALL
CoordinaterUpdatorGhost6 . . . .	P Near	 00001526 _TEXT	Length= 00000015 Public STDCALL
CoordinaterUpdatorGhost7 . . . .	P Near	 0000153B _TEXT	Length= 00000015 Public STDCALL
CoordinaterUpdator . . . . . . .	P Near	 000014A8 _TEXT	Length= 00000015 Public STDCALL
CreateFileA  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CreateOutputFile . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Crlf . . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Delay  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
DrawBlueWall . . . . . . . . . .	P Near	 000013E7 _TEXT	Length= 0000001A Public STDCALL
DrawCoin . . . . . . . . . . . .	P Near	 00001388 _TEXT	Length= 00000014 Public STDCALL
DrawFruit  . . . . . . . . . . .	P Near	 000013B6 _TEXT	Length= 00000017 Public STDCALL
DrawGhost1 . . . . . . . . . . .	P Near	 000016A7 _TEXT	Length= 0000002F Public STDCALL
DrawGhost2 . . . . . . . . . . .	P Near	 00001F67 _TEXT	Length= 0000002F Public STDCALL
DrawGhost3 . . . . . . . . . . .	P Near	 00002120 _TEXT	Length= 0000002F Public STDCALL
DrawGhost4 . . . . . . . . . . .	P Near	 00002FBE _TEXT	Length= 0000002F Public STDCALL
DrawGhost5 . . . . . . . . . . .	P Near	 00003177 _TEXT	Length= 00000028 Public STDCALL
DrawGhost6 . . . . . . . . . . .	P Near	 00003329 _TEXT	Length= 00000028 Public STDCALL
DrawGhost7 . . . . . . . . . . .	P Near	 000034DB _TEXT	Length= 00000028 Public STDCALL
DrawLevel1 . . . . . . . . . . .	P Near	 00000C87 _TEXT	Length= 00000211 Public STDCALL
DrawLevel2 . . . . . . . . . . .	P Near	 00000ECE _TEXT	Length= 00000211 Public STDCALL
DrawLevel3 . . . . . . . . . . .	P Near	 00001121 _TEXT	Length= 00000211 Public STDCALL
DrawPinkWall . . . . . . . . . .	P Near	 00001401 _TEXT	Length= 0000001A Public STDCALL
DrawPlayer . . . . . . . . . . .	P Near	 00004DA9 _TEXT	Length= 00000025 Public STDCALL
DrawRedWall  . . . . . . . . . .	P Near	 000013CD _TEXT	Length= 0000001A Public STDCALL
DrawScore  . . . . . . . . . . .	P Near	 00001435 _TEXT	Length= 00000073 Public STDCALL
DrawSpace  . . . . . . . . . . .	P Near	 00001374 _TEXT	Length= 00000014 Public STDCALL
DrawWall . . . . . . . . . . . .	P Near	 0000139C _TEXT	Length= 0000001A Public STDCALL
DrawWhiteWall  . . . . . . . . .	P Near	 0000141B _TEXT	Length= 0000001A Public STDCALL
DumpMem  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
DumpRegs . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
EndScreen  . . . . . . . . . . .	P Near	 00000BC8 _TEXT	Length= 000000BF Public STDCALL
ExitGame . . . . . . . . . . . .	P Near	 0000670A _TEXT	Length= 00000016 Public STDCALL
ExitProcess  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FileReadingMasking . . . . . . .	P Near	 00000BAE _TEXT	Length= 0000001A Public STDCALL
  l1 . . . . . . . . . . . . . .	L Near	 00000BB8 _TEXT	
FileTimeToDosDateTime  . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FileTimeToSystemTime . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FlushConsoleInputBuffer  . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FormatMessageA . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetCommandLineA  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetCommandTail . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleCP . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleCursorInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleMode . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleScreenBufferInfo . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetDateTime  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetFileTime  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetGhostRowl1  . . . . . . . . .	P Near	 00001550 _TEXT	Length= 00000157 Public STDCALL
  l1_r02_Handle  . . . . . . . .	L Near	 0000160D _TEXT	
  l1_r03_Handle  . . . . . . . .	L Near	 00001617 _TEXT	
  l1_r04_Handle  . . . . . . . .	L Near	 00001621 _TEXT	
  l1_r05_Handle  . . . . . . . .	L Near	 00001628 _TEXT	
  l1_r06_Handle  . . . . . . . .	L Near	 0000162F _TEXT	
  l1_r07_Handle  . . . . . . . .	L Near	 00001636 _TEXT	
  l1_r08_Handle  . . . . . . . .	L Near	 0000163D _TEXT	
  l1_r09_Handle  . . . . . . . .	L Near	 00001644 _TEXT	
  l1_r10_Handle  . . . . . . . .	L Near	 0000164B _TEXT	
  l1_r11_Handle  . . . . . . . .	L Near	 00001652 _TEXT	
  l1_r12_Handle  . . . . . . . .	L Near	 00001659 _TEXT	
  l1_r13_Handle  . . . . . . . .	L Near	 00001660 _TEXT	
  l1_r14_Handle  . . . . . . . .	L Near	 00001667 _TEXT	
  l1_r15_Handle  . . . . . . . .	L Near	 0000166E _TEXT	
  l1_r16_Handle  . . . . . . . .	L Near	 00001675 _TEXT	
  l1_r17_Handle  . . . . . . . .	L Near	 0000167C _TEXT	
  l1_r18_Handle  . . . . . . . .	L Near	 00001683 _TEXT	
  l1_r19_Handle  . . . . . . . .	L Near	 0000168A _TEXT	
  l1_r20_Handle  . . . . . . . .	L Near	 00001691 _TEXT	
  l1_r21_Handle  . . . . . . . .	L Near	 00001698 _TEXT	
  l1_r22_Handle  . . . . . . . .	L Near	 0000169F _TEXT	
  MovementChecker  . . . . . . .	L Near	 000016A6 _TEXT	
GetGhostRowl2  . . . . . . . . .	P Near	 00001E10 _TEXT	Length= 00000157 Public STDCALL
  l2_r02_Handle  . . . . . . . .	L Near	 00001ECD _TEXT	
  l2_r03_Handle  . . . . . . . .	L Near	 00001ED7 _TEXT	
  l2_r04_Handle  . . . . . . . .	L Near	 00001EE1 _TEXT	
  l2_r05_Handle  . . . . . . . .	L Near	 00001EE8 _TEXT	
  l2_r06_Handle  . . . . . . . .	L Near	 00001EEF _TEXT	
  l2_r07_Handle  . . . . . . . .	L Near	 00001EF6 _TEXT	
  l2_r08_Handle  . . . . . . . .	L Near	 00001EFD _TEXT	
  l2_r09_Handle  . . . . . . . .	L Near	 00001F04 _TEXT	
  l2_r10_Handle  . . . . . . . .	L Near	 00001F0B _TEXT	
  l2_r11_Handle  . . . . . . . .	L Near	 00001F12 _TEXT	
  l2_r12_Handle  . . . . . . . .	L Near	 00001F19 _TEXT	
  l2_r13_Handle  . . . . . . . .	L Near	 00001F20 _TEXT	
  l2_r14_Handle  . . . . . . . .	L Near	 00001F27 _TEXT	
  l2_r15_Handle  . . . . . . . .	L Near	 00001F2E _TEXT	
  l2_r16_Handle  . . . . . . . .	L Near	 00001F35 _TEXT	
  l2_r17_Handle  . . . . . . . .	L Near	 00001F3C _TEXT	
  l2_r18_Handle  . . . . . . . .	L Near	 00001F43 _TEXT	
  l2_r19_Handle  . . . . . . . .	L Near	 00001F4A _TEXT	
  l2_r20_Handle  . . . . . . . .	L Near	 00001F51 _TEXT	
  l2_r21_Handle  . . . . . . . .	L Near	 00001F58 _TEXT	
  l2_r22_Handle  . . . . . . . .	L Near	 00001F5F _TEXT	
  MovementChecker  . . . . . . .	L Near	 00001F66 _TEXT	
GetGhostRowl3  . . . . . . . . .	P Near	 00002E67 _TEXT	Length= 00000157 Public STDCALL
  l3_r02_Handle  . . . . . . . .	L Near	 00002F24 _TEXT	
  l3_r03_Handle  . . . . . . . .	L Near	 00002F2E _TEXT	
  l3_r04_Handle  . . . . . . . .	L Near	 00002F38 _TEXT	
  l3_r05_Handle  . . . . . . . .	L Near	 00002F3F _TEXT	
  l3_r06_Handle  . . . . . . . .	L Near	 00002F46 _TEXT	
  l3_r07_Handle  . . . . . . . .	L Near	 00002F4D _TEXT	
  l3_r08_Handle  . . . . . . . .	L Near	 00002F54 _TEXT	
  l3_r09_Handle  . . . . . . . .	L Near	 00002F5B _TEXT	
  l3_r10_Handle  . . . . . . . .	L Near	 00002F62 _TEXT	
  l3_r11_Handle  . . . . . . . .	L Near	 00002F69 _TEXT	
  l3_r12_Handle  . . . . . . . .	L Near	 00002F70 _TEXT	
  l3_r13_Handle  . . . . . . . .	L Near	 00002F77 _TEXT	
  l3_r14_Handle  . . . . . . . .	L Near	 00002F7E _TEXT	
  l3_r15_Handle  . . . . . . . .	L Near	 00002F85 _TEXT	
  l3_r16_Handle  . . . . . . . .	L Near	 00002F8C _TEXT	
  l3_r17_Handle  . . . . . . . .	L Near	 00002F93 _TEXT	
  l3_r18_Handle  . . . . . . . .	L Near	 00002F9A _TEXT	
  l3_r19_Handle  . . . . . . . .	L Near	 00002FA1 _TEXT	
  l3_r20_Handle  . . . . . . . .	L Near	 00002FA8 _TEXT	
  l3_r21_Handle  . . . . . . . .	L Near	 00002FAF _TEXT	
  l3_r22_Handle  . . . . . . . .	L Near	 00002FB6 _TEXT	
  MovementChecker  . . . . . . .	L Near	 00002FBD _TEXT	
GetKeyState  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetLastError . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetLocalTime . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetMaxXY . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetMseconds  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetNumberOfConsoleInputEvents  .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetProcessHeap . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetStdHandle . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetSystemTime  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetTextColor . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetTickCount . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Ghost1Movement . . . . . . . . .	P Near	 00001729 _TEXT	Length= 00000120 Public STDCALL
  L1moveRight  . . . . . . . . .	L Near	 00001759 _TEXT	
  L1moveLeft . . . . . . . . . .	L Near	 0000177D _TEXT	
  L1moveUp . . . . . . . . . . .	L Near	 000017A1 _TEXT	
  L1MoveDown . . . . . . . . . .	L Near	 000017BF _TEXT	
  L1SkipLeftRight  . . . . . . .	L Near	 000017DD _TEXT	
  GhostMovementFixer . . . . . .	L Near	 000017E8 _TEXT	
  RightFixer . . . . . . . . . .	L Near	 0000180E _TEXT	
  LeftFixer  . . . . . . . . . .	L Near	 0000181C _TEXT	
  UpFixer  . . . . . . . . . . .	L Near	 0000182A _TEXT	
  DownFixer  . . . . . . . . . .	L Near	 00001832 _TEXT	
  NewDirector  . . . . . . . . .	L Near	 00001838 _TEXT	
  SkipMovementFixer  . . . . . .	L Near	 00001848 _TEXT	
Ghost1WallChecker  . . . . . . .	P Near	 00001DEF _TEXT	Length= 00000021 Public STDCALL
  l1loop1  . . . . . . . . . . .	L Near	 00001DF6 _TEXT	
  Replacer . . . . . . . . . . .	L Near	 00001E0F _TEXT	
  EscapeReplacer . . . . . . . .	L Near	 00001E0F _TEXT	
Ghost2Movement . . . . . . . . .	P Near	 00002000 _TEXT	Length= 00000120 Public STDCALL
  l2moveRight  . . . . . . . . .	L Near	 00002030 _TEXT	
  l2moveLeft . . . . . . . . . .	L Near	 00002054 _TEXT	
  l2moveUp . . . . . . . . . . .	L Near	 00002078 _TEXT	
  l2MoveDown . . . . . . . . . .	L Near	 00002096 _TEXT	
  l2SkipLeftRight  . . . . . . .	L Near	 000020B4 _TEXT	
  GhostMovementFixer . . . . . .	L Near	 000020BF _TEXT	
  RightFixer . . . . . . . . . .	L Near	 000020E5 _TEXT	
  LeftFixer  . . . . . . . . . .	L Near	 000020F3 _TEXT	
  UpFixer  . . . . . . . . . . .	L Near	 00002101 _TEXT	
  DownFixer  . . . . . . . . . .	L Near	 00002109 _TEXT	
  NewDirector  . . . . . . . . .	L Near	 0000210F _TEXT	
  SkipMovementFixer  . . . . . .	L Near	 0000211F _TEXT	
Ghost2WallChecker  . . . . . . .	P Near	 0000287F _TEXT	Length= 00000021 Public STDCALL
  l2loop1  . . . . . . . . . . .	L Near	 00002886 _TEXT	
  Replacer . . . . . . . . . . .	L Near	 0000289F _TEXT	
  EscapeReplacer . . . . . . . .	L Near	 0000289F _TEXT	
Ghost3Movement . . . . . . . . .	P Near	 000021B9 _TEXT	Length= 00000120 Public STDCALL
  l2moveRight  . . . . . . . . .	L Near	 000021E9 _TEXT	
  l2moveLeft . . . . . . . . . .	L Near	 0000220D _TEXT	
  l2moveUp . . . . . . . . . . .	L Near	 00002231 _TEXT	
  l2MoveDown . . . . . . . . . .	L Near	 0000224F _TEXT	
  l2SkipLeftRight  . . . . . . .	L Near	 0000226D _TEXT	
  GhostMovementFixer . . . . . .	L Near	 00002278 _TEXT	
  RightFixer . . . . . . . . . .	L Near	 0000229E _TEXT	
  LeftFixer  . . . . . . . . . .	L Near	 000022AC _TEXT	
  UpFixer  . . . . . . . . . . .	L Near	 000022BA _TEXT	
  DownFixer  . . . . . . . . . .	L Near	 000022C2 _TEXT	
  NewDirector  . . . . . . . . .	L Near	 000022C8 _TEXT	
  SkipMovementFixer  . . . . . .	L Near	 000022D8 _TEXT	
Ghost3WallChecker  . . . . . . .	P Near	 00002E46 _TEXT	Length= 00000021 Public STDCALL
  l2loop1  . . . . . . . . . . .	L Near	 00002E4D _TEXT	
  Replacer . . . . . . . . . . .	L Near	 00002E66 _TEXT	
  EscapeReplacer . . . . . . . .	L Near	 00002E66 _TEXT	
Ghost4Movement . . . . . . . . .	P Near	 00003057 _TEXT	Length= 00000120 Public STDCALL
  l3moveRight  . . . . . . . . .	L Near	 00003087 _TEXT	
  l3moveLeft . . . . . . . . . .	L Near	 000030AB _TEXT	
  l3moveUp . . . . . . . . . . .	L Near	 000030CF _TEXT	
  l3MoveDown . . . . . . . . . .	L Near	 000030ED _TEXT	
  l3SkipLeftRight  . . . . . . .	L Near	 0000310B _TEXT	
  GhostMovementFixer . . . . . .	L Near	 00003116 _TEXT	
  RightFixer . . . . . . . . . .	L Near	 0000313C _TEXT	
  LeftFixer  . . . . . . . . . .	L Near	 0000314A _TEXT	
  UpFixer  . . . . . . . . . . .	L Near	 00003158 _TEXT	
  DownFixer  . . . . . . . . . .	L Near	 00003160 _TEXT	
  NewDirector  . . . . . . . . .	L Near	 00003166 _TEXT	
  SkipMovementFixer  . . . . . .	L Near	 00003176 _TEXT	
Ghost4WallChecker  . . . . . . .	P Near	 00003C33 _TEXT	Length= 00000021 Public STDCALL
  l3loop1  . . . . . . . . . . .	L Near	 00003C3A _TEXT	
  Replacer . . . . . . . . . . .	L Near	 00003C53 _TEXT	
  EscapeReplacer . . . . . . . .	L Near	 00003C53 _TEXT	
Ghost5Movement . . . . . . . . .	P Near	 00003209 _TEXT	Length= 00000120 Public STDCALL
  l3moveRight  . . . . . . . . .	L Near	 00003239 _TEXT	
  l3moveLeft . . . . . . . . . .	L Near	 0000325D _TEXT	
  l3moveUp . . . . . . . . . . .	L Near	 00003281 _TEXT	
  l3MoveDown . . . . . . . . . .	L Near	 0000329F _TEXT	
  l3SkipLeftRight  . . . . . . .	L Near	 000032BD _TEXT	
  GhostMovementFixer . . . . . .	L Near	 000032C8 _TEXT	
  RightFixer . . . . . . . . . .	L Near	 000032EE _TEXT	
  LeftFixer  . . . . . . . . . .	L Near	 000032FC _TEXT	
  UpFixer  . . . . . . . . . . .	L Near	 0000330A _TEXT	
  DownFixer  . . . . . . . . . .	L Near	 00003312 _TEXT	
  NewDirector  . . . . . . . . .	L Near	 00003318 _TEXT	
  SkipMovementFixer  . . . . . .	L Near	 00003328 _TEXT	
Ghost5WallChecker  . . . . . . .	P Near	 000041FA _TEXT	Length= 00000021 Public STDCALL
  l3loop1  . . . . . . . . . . .	L Near	 00004201 _TEXT	
  Replacer . . . . . . . . . . .	L Near	 0000421A _TEXT	
  EscapeReplacer . . . . . . . .	L Near	 0000421A _TEXT	
Ghost6Movement . . . . . . . . .	P Near	 000033BB _TEXT	Length= 00000120 Public STDCALL
  l3moveRight  . . . . . . . . .	L Near	 000033EB _TEXT	
  l3moveLeft . . . . . . . . . .	L Near	 0000340F _TEXT	
  l3moveUp . . . . . . . . . . .	L Near	 00003433 _TEXT	
  l3MoveDown . . . . . . . . . .	L Near	 00003451 _TEXT	
  l3SkipLeftRight  . . . . . . .	L Near	 0000346F _TEXT	
  GhostMovementFixer . . . . . .	L Near	 0000347A _TEXT	
  RightFixer . . . . . . . . . .	L Near	 000034A0 _TEXT	
  LeftFixer  . . . . . . . . . .	L Near	 000034AE _TEXT	
  UpFixer  . . . . . . . . . . .	L Near	 000034BC _TEXT	
  DownFixer  . . . . . . . . . .	L Near	 000034C4 _TEXT	
  NewDirector  . . . . . . . . .	L Near	 000034CA _TEXT	
  SkipMovementFixer  . . . . . .	L Near	 000034DA _TEXT	
Ghost6WallChecker  . . . . . . .	P Near	 000047C1 _TEXT	Length= 00000021 Public STDCALL
  l3loop1  . . . . . . . . . . .	L Near	 000047C8 _TEXT	
  Replacer . . . . . . . . . . .	L Near	 000047E1 _TEXT	
  EscapeReplacer . . . . . . . .	L Near	 000047E1 _TEXT	
Ghost7Movement . . . . . . . . .	P Near	 0000356D _TEXT	Length= 00000120 Public STDCALL
  l3moveRight  . . . . . . . . .	L Near	 0000359D _TEXT	
  l3moveLeft . . . . . . . . . .	L Near	 000035C1 _TEXT	
  l3moveUp . . . . . . . . . . .	L Near	 000035E5 _TEXT	
  l3MoveDown . . . . . . . . . .	L Near	 00003603 _TEXT	
  l3SkipLeftRight  . . . . . . .	L Near	 00003621 _TEXT	
  GhostMovementFixer . . . . . .	L Near	 0000362C _TEXT	
  RightFixer . . . . . . . . . .	L Near	 00003652 _TEXT	
  LeftFixer  . . . . . . . . . .	L Near	 00003660 _TEXT	
  UpFixer  . . . . . . . . . . .	L Near	 0000366E _TEXT	
  DownFixer  . . . . . . . . . .	L Near	 00003676 _TEXT	
  NewDirector  . . . . . . . . .	L Near	 0000367C _TEXT	
  SkipMovementFixer  . . . . . .	L Near	 0000368C _TEXT	
Ghost7WallChecker  . . . . . . .	P Near	 00004D88 _TEXT	Length= 00000021 Public STDCALL
  l3loop1  . . . . . . . . . . .	L Near	 00004D8F _TEXT	
  Replacer . . . . . . . . . . .	L Near	 00004DA8 _TEXT	
  EscapeReplacer . . . . . . . .	L Near	 00004DA8 _TEXT	
GhostMaker . . . . . . . . . . .	P Near	 000006CE _TEXT	Length= 0000003C Public STDCALL
  ld1  . . . . . . . . . . . . .	L Near	 000006CF _TEXT	
  C1 . . . . . . . . . . . . . .	L Near	 000006EA _TEXT	
  C2 . . . . . . . . . . . . . .	L Near	 000006F1 _TEXT	
  C3 . . . . . . . . . . . . . .	L Near	 000006F8 _TEXT	
  C4 . . . . . . . . . . . . . .	L Near	 000006FF _TEXT	
  ld_excape  . . . . . . . . . .	L Near	 00000706 _TEXT	
Gotoxy . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapAlloc  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapCreate . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapDestroy  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapFree . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapSize . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HighScoreMenu  . . . . . . . . .	P Near	 000009D1 _TEXT	Length= 00000132 Public STDCALL
  letsOpenFile . . . . . . . . .	L Near	 000009EF _TEXT	
InstructionPage  . . . . . . . .	P Near	 00000949 _TEXT	Length= 00000088 Public STDCALL
IsDigit  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Level1Intersection . . . . . . .	P Near	 00004DEE _TEXT	Length= 00000056 Public STDCALL
  skip . . . . . . . . . . . . .	L Near	 00004E43 _TEXT	
Level1Maze . . . . . . . . . . .	P Near	 0000656A _TEXT	Length= 00000059 Public STDCALL
  gameLoop1  . . . . . . . . . .	L Near	 00006590 _TEXT	
  skip . . . . . . . . . . . . .	L Near	 000065B9 _TEXT	
Level1MovementDownGhost1 . . . .	P Near	 00001C08 _TEXT	Length= 000001E7 Public STDCALL
  l1_r01_Handle  . . . . . . . .	L Near	 00001CC5 _TEXT	
  l1_r02_Handle  . . . . . . . .	L Near	 00001CD4 _TEXT	
  l1_r03_Handle  . . . . . . . .	L Near	 00001CE3 _TEXT	
  l1_r04_Handle  . . . . . . . .	L Near	 00001CF2 _TEXT	
  l1_r05_Handle  . . . . . . . .	L Near	 00001D01 _TEXT	
  l1_r06_Handle  . . . . . . . .	L Near	 00001D10 _TEXT	
  l1_r07_Handle  . . . . . . . .	L Near	 00001D1F _TEXT	
  l1_r08_Handle  . . . . . . . .	L Near	 00001D2E _TEXT	
  l1_r09_Handle  . . . . . . . .	L Near	 00001D3D _TEXT	
  l1_r10_Handle  . . . . . . . .	L Near	 00001D4C _TEXT	
  l1_r11_Handle  . . . . . . . .	L Near	 00001D5B _TEXT	
  l1_r12_Handle  . . . . . . . .	L Near	 00001D6A _TEXT	
  l1_r13_Handle  . . . . . . . .	L Near	 00001D76 _TEXT	
  l1_r14_Handle  . . . . . . . .	L Near	 00001D82 _TEXT	
  l1_r15_Handle  . . . . . . . .	L Near	 00001D8E _TEXT	
  l1_r16_Handle  . . . . . . . .	L Near	 00001D9A _TEXT	
  l1_r17_Handle  . . . . . . . .	L Near	 00001DA6 _TEXT	
  l1_r18_Handle  . . . . . . . .	L Near	 00001DB2 _TEXT	
  l1_r19_Handle  . . . . . . . .	L Near	 00001DBE _TEXT	
  l1_r20_Handle  . . . . . . . .	L Near	 00001DCA _TEXT	
  l1_r21_Handle  . . . . . . . .	L Near	 00001DD6 _TEXT	
  l1_r22_Handle  . . . . . . . .	L Near	 00001DE2 _TEXT	
  MovementChecker  . . . . . . .	L Near	 00001DEE _TEXT	
Level1MovementDown . . . . . . .	P Near	 000054D8 _TEXT	Length= 000001E7 Public STDCALL
  l1_r01_Handle  . . . . . . . .	L Near	 00005595 _TEXT	
  l1_r02_Handle  . . . . . . . .	L Near	 000055A4 _TEXT	
  l1_r03_Handle  . . . . . . . .	L Near	 000055B3 _TEXT	
  l1_r04_Handle  . . . . . . . .	L Near	 000055C2 _TEXT	
  l1_r05_Handle  . . . . . . . .	L Near	 000055D1 _TEXT	
  l1_r06_Handle  . . . . . . . .	L Near	 000055E0 _TEXT	
  l1_r07_Handle  . . . . . . . .	L Near	 000055EF _TEXT	
  l1_r08_Handle  . . . . . . . .	L Near	 000055FE _TEXT	
  l1_r09_Handle  . . . . . . . .	L Near	 0000560D _TEXT	
  l1_r10_Handle  . . . . . . . .	L Near	 0000561C _TEXT	
  l1_r11_Handle  . . . . . . . .	L Near	 0000562B _TEXT	
  l1_r12_Handle  . . . . . . . .	L Near	 0000563A _TEXT	
  l1_r13_Handle  . . . . . . . .	L Near	 00005646 _TEXT	
  l1_r14_Handle  . . . . . . . .	L Near	 00005652 _TEXT	
  l1_r15_Handle  . . . . . . . .	L Near	 0000565E _TEXT	
  l1_r16_Handle  . . . . . . . .	L Near	 0000566A _TEXT	
  l1_r17_Handle  . . . . . . . .	L Near	 00005676 _TEXT	
  l1_r18_Handle  . . . . . . . .	L Near	 00005682 _TEXT	
  l1_r19_Handle  . . . . . . . .	L Near	 0000568E _TEXT	
  l1_r20_Handle  . . . . . . . .	L Near	 0000569A _TEXT	
  l1_r21_Handle  . . . . . . . .	L Near	 000056A6 _TEXT	
  l1_r22_Handle  . . . . . . . .	L Near	 000056B2 _TEXT	
  MovementChecker  . . . . . . .	L Near	 000056BE _TEXT	
Level1MovementLeftRightGhost1  .	P Near	 00001849 _TEXT	Length= 000001D8 Public STDCALL
  l1_r02_Handle  . . . . . . . .	L Near	 00001906 _TEXT	
  l1_r03_Handle  . . . . . . . .	L Near	 00001915 _TEXT	
  l1_r04_Handle  . . . . . . . .	L Near	 00001924 _TEXT	
  l1_r05_Handle  . . . . . . . .	L Near	 00001933 _TEXT	
  l1_r06_Handle  . . . . . . . .	L Near	 00001942 _TEXT	
  l1_r07_Handle  . . . . . . . .	L Near	 00001951 _TEXT	
  l1_r08_Handle  . . . . . . . .	L Near	 00001960 _TEXT	
  l1_r09_Handle  . . . . . . . .	L Near	 0000196F _TEXT	
  l1_r10_Handle  . . . . . . . .	L Near	 0000197E _TEXT	
  l1_r11_Handle  . . . . . . . .	L Near	 0000198D _TEXT	
  l1_r12_Handle  . . . . . . . .	L Near	 0000199C _TEXT	
  l1_r13_Handle  . . . . . . . .	L Near	 000019A8 _TEXT	
  l1_r14_Handle  . . . . . . . .	L Near	 000019B4 _TEXT	
  l1_r15_Handle  . . . . . . . .	L Near	 000019C0 _TEXT	
  l1_r16_Handle  . . . . . . . .	L Near	 000019CC _TEXT	
  l1_r17_Handle  . . . . . . . .	L Near	 000019D8 _TEXT	
  l1_r18_Handle  . . . . . . . .	L Near	 000019E4 _TEXT	
  l1_r19_Handle  . . . . . . . .	L Near	 000019F0 _TEXT	
  l1_r20_Handle  . . . . . . . .	L Near	 000019FC _TEXT	
  l1_r21_Handle  . . . . . . . .	L Near	 00001A08 _TEXT	
  l1_r22_Handle  . . . . . . . .	L Near	 00001A14 _TEXT	
  MovementChecker  . . . . . . .	L Near	 00001A20 _TEXT	
Level1MovementLeftRight  . . . .	P Near	 00005119 _TEXT	Length= 000001D8 Public STDCALL
  l1_r02_Handle  . . . . . . . .	L Near	 000051D6 _TEXT	
  l1_r03_Handle  . . . . . . . .	L Near	 000051E5 _TEXT	
  l1_r04_Handle  . . . . . . . .	L Near	 000051F4 _TEXT	
  l1_r05_Handle  . . . . . . . .	L Near	 00005203 _TEXT	
  l1_r06_Handle  . . . . . . . .	L Near	 00005212 _TEXT	
  l1_r07_Handle  . . . . . . . .	L Near	 00005221 _TEXT	
  l1_r08_Handle  . . . . . . . .	L Near	 00005230 _TEXT	
  l1_r09_Handle  . . . . . . . .	L Near	 0000523F _TEXT	
  l1_r10_Handle  . . . . . . . .	L Near	 0000524E _TEXT	
  l1_r11_Handle  . . . . . . . .	L Near	 0000525D _TEXT	
  l1_r12_Handle  . . . . . . . .	L Near	 0000526C _TEXT	
  l1_r13_Handle  . . . . . . . .	L Near	 00005278 _TEXT	
  l1_r14_Handle  . . . . . . . .	L Near	 00005284 _TEXT	
  l1_r15_Handle  . . . . . . . .	L Near	 00005290 _TEXT	
  l1_r16_Handle  . . . . . . . .	L Near	 0000529C _TEXT	
  l1_r17_Handle  . . . . . . . .	L Near	 000052A8 _TEXT	
  l1_r18_Handle  . . . . . . . .	L Near	 000052B4 _TEXT	
  l1_r19_Handle  . . . . . . . .	L Near	 000052C0 _TEXT	
  l1_r20_Handle  . . . . . . . .	L Near	 000052CC _TEXT	
  l1_r21_Handle  . . . . . . . .	L Near	 000052D8 _TEXT	
  l1_r22_Handle  . . . . . . . .	L Near	 000052E4 _TEXT	
  MovementChecker  . . . . . . .	L Near	 000052F0 _TEXT	
Level1MovementUpGhost1 . . . . .	P Near	 00001A21 _TEXT	Length= 000001E7 Public STDCALL
  l1_r01_Handle  . . . . . . . .	L Near	 00001ADE _TEXT	
  l1_r02_Handle  . . . . . . . .	L Near	 00001AED _TEXT	
  l1_r03_Handle  . . . . . . . .	L Near	 00001AFC _TEXT	
  l1_r04_Handle  . . . . . . . .	L Near	 00001B0B _TEXT	
  l1_r05_Handle  . . . . . . . .	L Near	 00001B1A _TEXT	
  l1_r06_Handle  . . . . . . . .	L Near	 00001B29 _TEXT	
  l1_r07_Handle  . . . . . . . .	L Near	 00001B38 _TEXT	
  l1_r08_Handle  . . . . . . . .	L Near	 00001B47 _TEXT	
  l1_r09_Handle  . . . . . . . .	L Near	 00001B56 _TEXT	
  l1_r10_Handle  . . . . . . . .	L Near	 00001B65 _TEXT	
  l1_r11_Handle  . . . . . . . .	L Near	 00001B74 _TEXT	
  l1_r12_Handle  . . . . . . . .	L Near	 00001B83 _TEXT	
  l1_r13_Handle  . . . . . . . .	L Near	 00001B8F _TEXT	
  l1_r14_Handle  . . . . . . . .	L Near	 00001B9B _TEXT	
  l1_r15_Handle  . . . . . . . .	L Near	 00001BA7 _TEXT	
  l1_r16_Handle  . . . . . . . .	L Near	 00001BB3 _TEXT	
  l1_r17_Handle  . . . . . . . .	L Near	 00001BBF _TEXT	
  l1_r18_Handle  . . . . . . . .	L Near	 00001BCB _TEXT	
  l1_r19_Handle  . . . . . . . .	L Near	 00001BD7 _TEXT	
  l1_r20_Handle  . . . . . . . .	L Near	 00001BE3 _TEXT	
  l1_r21_Handle  . . . . . . . .	L Near	 00001BEF _TEXT	
  l1_r22_Handle  . . . . . . . .	L Near	 00001BFB _TEXT	
  MovementChecker  . . . . . . .	L Near	 00001C07 _TEXT	
Level1MovementUp . . . . . . . .	P Near	 000052F1 _TEXT	Length= 000001E7 Public STDCALL
  l1_r01_Handle  . . . . . . . .	L Near	 000053AE _TEXT	
  l1_r02_Handle  . . . . . . . .	L Near	 000053BD _TEXT	
  l1_r03_Handle  . . . . . . . .	L Near	 000053CC _TEXT	
  l1_r04_Handle  . . . . . . . .	L Near	 000053DB _TEXT	
  l1_r05_Handle  . . . . . . . .	L Near	 000053EA _TEXT	
  l1_r06_Handle  . . . . . . . .	L Near	 000053F9 _TEXT	
  l1_r07_Handle  . . . . . . . .	L Near	 00005408 _TEXT	
  l1_r08_Handle  . . . . . . . .	L Near	 00005417 _TEXT	
  l1_r09_Handle  . . . . . . . .	L Near	 00005426 _TEXT	
  l1_r10_Handle  . . . . . . . .	L Near	 00005435 _TEXT	
  l1_r11_Handle  . . . . . . . .	L Near	 00005444 _TEXT	
  l1_r12_Handle  . . . . . . . .	L Near	 00005453 _TEXT	
  l1_r13_Handle  . . . . . . . .	L Near	 0000545F _TEXT	
  l1_r14_Handle  . . . . . . . .	L Near	 0000546B _TEXT	
  l1_r15_Handle  . . . . . . . .	L Near	 00005477 _TEXT	
  l1_r16_Handle  . . . . . . . .	L Near	 00005483 _TEXT	
  l1_r17_Handle  . . . . . . . .	L Near	 0000548F _TEXT	
  l1_r18_Handle  . . . . . . . .	L Near	 0000549B _TEXT	
  l1_r19_Handle  . . . . . . . .	L Near	 000054A7 _TEXT	
  l1_r20_Handle  . . . . . . . .	L Near	 000054B3 _TEXT	
  l1_r21_Handle  . . . . . . . .	L Near	 000054BF _TEXT	
  l1_r22_Handle  . . . . . . . .	L Near	 000054CB _TEXT	
  MovementChecker  . . . . . . .	L Near	 000054D7 _TEXT	
Level2Intersection . . . . . . .	P Near	 00004E44 _TEXT	Length= 00000082 Public STDCALL
  skip1  . . . . . . . . . . . .	L Near	 00004E8F _TEXT	
  skip2  . . . . . . . . . . . .	L Near	 00004EC5 _TEXT	
Level2Maze . . . . . . . . . . .	P Near	 000065C3 _TEXT	Length= 0000008C Public STDCALL
  gameLoop2  . . . . . . . . . .	L Near	 00006612 _TEXT	
  skip . . . . . . . . . . . . .	L Near	 00006645 _TEXT	
Level2MovementDownGhost2 . . . .	P Near	 00002698 _TEXT	Length= 000001E7 Public STDCALL
  l2_r01_Handle  . . . . . . . .	L Near	 00002755 _TEXT	
  l2_r02_Handle  . . . . . . . .	L Near	 00002764 _TEXT	
  l2_r03_Handle  . . . . . . . .	L Near	 00002773 _TEXT	
  l2_r04_Handle  . . . . . . . .	L Near	 00002782 _TEXT	
  l2_r05_Handle  . . . . . . . .	L Near	 00002791 _TEXT	
  l2_r06_Handle  . . . . . . . .	L Near	 000027A0 _TEXT	
  l2_r07_Handle  . . . . . . . .	L Near	 000027AF _TEXT	
  l2_r08_Handle  . . . . . . . .	L Near	 000027BE _TEXT	
  l2_r09_Handle  . . . . . . . .	L Near	 000027CD _TEXT	
  l2_r10_Handle  . . . . . . . .	L Near	 000027DC _TEXT	
  l2_r11_Handle  . . . . . . . .	L Near	 000027EB _TEXT	
  l2_r12_Handle  . . . . . . . .	L Near	 000027FA _TEXT	
  l2_r13_Handle  . . . . . . . .	L Near	 00002806 _TEXT	
  l2_r14_Handle  . . . . . . . .	L Near	 00002812 _TEXT	
  l2_r15_Handle  . . . . . . . .	L Near	 0000281E _TEXT	
  l2_r16_Handle  . . . . . . . .	L Near	 0000282A _TEXT	
  l2_r17_Handle  . . . . . . . .	L Near	 00002836 _TEXT	
  l2_r18_Handle  . . . . . . . .	L Near	 00002842 _TEXT	
  l2_r19_Handle  . . . . . . . .	L Near	 0000284E _TEXT	
  l2_r20_Handle  . . . . . . . .	L Near	 0000285A _TEXT	
  l2_r21_Handle  . . . . . . . .	L Near	 00002866 _TEXT	
  l2_r22_Handle  . . . . . . . .	L Near	 00002872 _TEXT	
  MovementChecker  . . . . . . .	L Near	 0000287E _TEXT	
Level2MovementDownGhost3 . . . .	P Near	 00002C5F _TEXT	Length= 000001E7 Public STDCALL
  l2_r01_Handle  . . . . . . . .	L Near	 00002D1C _TEXT	
  l2_r02_Handle  . . . . . . . .	L Near	 00002D2B _TEXT	
  l2_r03_Handle  . . . . . . . .	L Near	 00002D3A _TEXT	
  l2_r04_Handle  . . . . . . . .	L Near	 00002D49 _TEXT	
  l2_r05_Handle  . . . . . . . .	L Near	 00002D58 _TEXT	
  l2_r06_Handle  . . . . . . . .	L Near	 00002D67 _TEXT	
  l2_r07_Handle  . . . . . . . .	L Near	 00002D76 _TEXT	
  l2_r08_Handle  . . . . . . . .	L Near	 00002D85 _TEXT	
  l2_r09_Handle  . . . . . . . .	L Near	 00002D94 _TEXT	
  l2_r10_Handle  . . . . . . . .	L Near	 00002DA3 _TEXT	
  l2_r11_Handle  . . . . . . . .	L Near	 00002DB2 _TEXT	
  l2_r12_Handle  . . . . . . . .	L Near	 00002DC1 _TEXT	
  l2_r13_Handle  . . . . . . . .	L Near	 00002DCD _TEXT	
  l2_r14_Handle  . . . . . . . .	L Near	 00002DD9 _TEXT	
  l2_r15_Handle  . . . . . . . .	L Near	 00002DE5 _TEXT	
  l2_r16_Handle  . . . . . . . .	L Near	 00002DF1 _TEXT	
  l2_r17_Handle  . . . . . . . .	L Near	 00002DFD _TEXT	
  l2_r18_Handle  . . . . . . . .	L Near	 00002E09 _TEXT	
  l2_r19_Handle  . . . . . . . .	L Near	 00002E15 _TEXT	
  l2_r20_Handle  . . . . . . . .	L Near	 00002E21 _TEXT	
  l2_r21_Handle  . . . . . . . .	L Near	 00002E2D _TEXT	
  l2_r22_Handle  . . . . . . . .	L Near	 00002E39 _TEXT	
  MovementChecker  . . . . . . .	L Near	 00002E45 _TEXT	
Level2MovementDown . . . . . . .	P Near	 00005BE3 _TEXT	Length= 000001E7 Public STDCALL
  l2_r01_Handle  . . . . . . . .	L Near	 00005CA0 _TEXT	
  l2_r02_Handle  . . . . . . . .	L Near	 00005CAF _TEXT	
  l2_r03_Handle  . . . . . . . .	L Near	 00005CBE _TEXT	
  l2_r04_Handle  . . . . . . . .	L Near	 00005CCD _TEXT	
  l2_r05_Handle  . . . . . . . .	L Near	 00005CDC _TEXT	
  l2_r06_Handle  . . . . . . . .	L Near	 00005CEB _TEXT	
  l2_r07_Handle  . . . . . . . .	L Near	 00005CFA _TEXT	
  l2_r08_Handle  . . . . . . . .	L Near	 00005D09 _TEXT	
  l2_r09_Handle  . . . . . . . .	L Near	 00005D18 _TEXT	
  l2_r10_Handle  . . . . . . . .	L Near	 00005D27 _TEXT	
  l2_r11_Handle  . . . . . . . .	L Near	 00005D36 _TEXT	
  l2_r12_Handle  . . . . . . . .	L Near	 00005D45 _TEXT	
  l2_r13_Handle  . . . . . . . .	L Near	 00005D51 _TEXT	
  l2_r14_Handle  . . . . . . . .	L Near	 00005D5D _TEXT	
  l2_r15_Handle  . . . . . . . .	L Near	 00005D69 _TEXT	
  l2_r16_Handle  . . . . . . . .	L Near	 00005D75 _TEXT	
  l2_r17_Handle  . . . . . . . .	L Near	 00005D81 _TEXT	
  l2_r18_Handle  . . . . . . . .	L Near	 00005D8D _TEXT	
  l2_r19_Handle  . . . . . . . .	L Near	 00005D99 _TEXT	
  l2_r20_Handle  . . . . . . . .	L Near	 00005DA5 _TEXT	
  l2_r21_Handle  . . . . . . . .	L Near	 00005DB1 _TEXT	
  l2_r22_Handle  . . . . . . . .	L Near	 00005DBD _TEXT	
  MovementChecker  . . . . . . .	L Near	 00005DC9 _TEXT	
Level2MovementLeftRightGhost2  .	P Near	 000022D9 _TEXT	Length= 000001D8 Public STDCALL
  l2_r02_Handle  . . . . . . . .	L Near	 00002396 _TEXT	
  l2_r03_Handle  . . . . . . . .	L Near	 000023A5 _TEXT	
  l2_r04_Handle  . . . . . . . .	L Near	 000023B4 _TEXT	
  l2_r05_Handle  . . . . . . . .	L Near	 000023C3 _TEXT	
  l2_r06_Handle  . . . . . . . .	L Near	 000023D2 _TEXT	
  l2_r07_Handle  . . . . . . . .	L Near	 000023E1 _TEXT	
  l2_r08_Handle  . . . . . . . .	L Near	 000023F0 _TEXT	
  l2_r09_Handle  . . . . . . . .	L Near	 000023FF _TEXT	
  l2_r10_Handle  . . . . . . . .	L Near	 0000240E _TEXT	
  l2_r11_Handle  . . . . . . . .	L Near	 0000241D _TEXT	
  l2_r12_Handle  . . . . . . . .	L Near	 0000242C _TEXT	
  l2_r13_Handle  . . . . . . . .	L Near	 00002438 _TEXT	
  l2_r14_Handle  . . . . . . . .	L Near	 00002444 _TEXT	
  l2_r15_Handle  . . . . . . . .	L Near	 00002450 _TEXT	
  l2_r16_Handle  . . . . . . . .	L Near	 0000245C _TEXT	
  l2_r17_Handle  . . . . . . . .	L Near	 00002468 _TEXT	
  l2_r18_Handle  . . . . . . . .	L Near	 00002474 _TEXT	
  l2_r19_Handle  . . . . . . . .	L Near	 00002480 _TEXT	
  l2_r20_Handle  . . . . . . . .	L Near	 0000248C _TEXT	
  l2_r21_Handle  . . . . . . . .	L Near	 00002498 _TEXT	
  l2_r22_Handle  . . . . . . . .	L Near	 000024A4 _TEXT	
  MovementChecker  . . . . . . .	L Near	 000024B0 _TEXT	
Level2MovementLeftRightGhost3  .	P Near	 000028A0 _TEXT	Length= 000001D8 Public STDCALL
  l2_r02_Handle  . . . . . . . .	L Near	 0000295D _TEXT	
  l2_r03_Handle  . . . . . . . .	L Near	 0000296C _TEXT	
  l2_r04_Handle  . . . . . . . .	L Near	 0000297B _TEXT	
  l2_r05_Handle  . . . . . . . .	L Near	 0000298A _TEXT	
  l2_r06_Handle  . . . . . . . .	L Near	 00002999 _TEXT	
  l2_r07_Handle  . . . . . . . .	L Near	 000029A8 _TEXT	
  l2_r08_Handle  . . . . . . . .	L Near	 000029B7 _TEXT	
  l2_r09_Handle  . . . . . . . .	L Near	 000029C6 _TEXT	
  l2_r10_Handle  . . . . . . . .	L Near	 000029D5 _TEXT	
  l2_r11_Handle  . . . . . . . .	L Near	 000029E4 _TEXT	
  l2_r12_Handle  . . . . . . . .	L Near	 000029F3 _TEXT	
  l2_r13_Handle  . . . . . . . .	L Near	 000029FF _TEXT	
  l2_r14_Handle  . . . . . . . .	L Near	 00002A0B _TEXT	
  l2_r15_Handle  . . . . . . . .	L Near	 00002A17 _TEXT	
  l2_r16_Handle  . . . . . . . .	L Near	 00002A23 _TEXT	
  l2_r17_Handle  . . . . . . . .	L Near	 00002A2F _TEXT	
  l2_r18_Handle  . . . . . . . .	L Near	 00002A3B _TEXT	
  l2_r19_Handle  . . . . . . . .	L Near	 00002A47 _TEXT	
  l2_r20_Handle  . . . . . . . .	L Near	 00002A53 _TEXT	
  l2_r21_Handle  . . . . . . . .	L Near	 00002A5F _TEXT	
  l2_r22_Handle  . . . . . . . .	L Near	 00002A6B _TEXT	
  MovementChecker  . . . . . . .	L Near	 00002A77 _TEXT	
Level2MovementLeftRight  . . . .	P Near	 00005824 _TEXT	Length= 000001D8 Public STDCALL
  l2_r02_Handle  . . . . . . . .	L Near	 000058E1 _TEXT	
  l2_r03_Handle  . . . . . . . .	L Near	 000058F0 _TEXT	
  l2_r04_Handle  . . . . . . . .	L Near	 000058FF _TEXT	
  l2_r05_Handle  . . . . . . . .	L Near	 0000590E _TEXT	
  l2_r06_Handle  . . . . . . . .	L Near	 0000591D _TEXT	
  l2_r07_Handle  . . . . . . . .	L Near	 0000592C _TEXT	
  l2_r08_Handle  . . . . . . . .	L Near	 0000593B _TEXT	
  l2_r09_Handle  . . . . . . . .	L Near	 0000594A _TEXT	
  l2_r10_Handle  . . . . . . . .	L Near	 00005959 _TEXT	
  l2_r11_Handle  . . . . . . . .	L Near	 00005968 _TEXT	
  l2_r12_Handle  . . . . . . . .	L Near	 00005977 _TEXT	
  l2_r13_Handle  . . . . . . . .	L Near	 00005983 _TEXT	
  l2_r14_Handle  . . . . . . . .	L Near	 0000598F _TEXT	
  l2_r15_Handle  . . . . . . . .	L Near	 0000599B _TEXT	
  l2_r16_Handle  . . . . . . . .	L Near	 000059A7 _TEXT	
  l2_r17_Handle  . . . . . . . .	L Near	 000059B3 _TEXT	
  l2_r18_Handle  . . . . . . . .	L Near	 000059BF _TEXT	
  l2_r19_Handle  . . . . . . . .	L Near	 000059CB _TEXT	
  l2_r20_Handle  . . . . . . . .	L Near	 000059D7 _TEXT	
  l2_r21_Handle  . . . . . . . .	L Near	 000059E3 _TEXT	
  l2_r22_Handle  . . . . . . . .	L Near	 000059EF _TEXT	
  MovementChecker  . . . . . . .	L Near	 000059FB _TEXT	
Level2MovementUpGhost2 . . . . .	P Near	 000024B1 _TEXT	Length= 000001E7 Public STDCALL
  l2_r01_Handle  . . . . . . . .	L Near	 0000256E _TEXT	
  l2_r02_Handle  . . . . . . . .	L Near	 0000257D _TEXT	
  l2_r03_Handle  . . . . . . . .	L Near	 0000258C _TEXT	
  l2_r04_Handle  . . . . . . . .	L Near	 0000259B _TEXT	
  l2_r05_Handle  . . . . . . . .	L Near	 000025AA _TEXT	
  l2_r06_Handle  . . . . . . . .	L Near	 000025B9 _TEXT	
  l2_r07_Handle  . . . . . . . .	L Near	 000025C8 _TEXT	
  l2_r08_Handle  . . . . . . . .	L Near	 000025D7 _TEXT	
  l2_r09_Handle  . . . . . . . .	L Near	 000025E6 _TEXT	
  l2_r10_Handle  . . . . . . . .	L Near	 000025F5 _TEXT	
  l2_r11_Handle  . . . . . . . .	L Near	 00002604 _TEXT	
  l2_r12_Handle  . . . . . . . .	L Near	 00002613 _TEXT	
  l2_r13_Handle  . . . . . . . .	L Near	 0000261F _TEXT	
  l2_r14_Handle  . . . . . . . .	L Near	 0000262B _TEXT	
  l2_r15_Handle  . . . . . . . .	L Near	 00002637 _TEXT	
  l2_r16_Handle  . . . . . . . .	L Near	 00002643 _TEXT	
  l2_r17_Handle  . . . . . . . .	L Near	 0000264F _TEXT	
  l2_r18_Handle  . . . . . . . .	L Near	 0000265B _TEXT	
  l2_r19_Handle  . . . . . . . .	L Near	 00002667 _TEXT	
  l2_r20_Handle  . . . . . . . .	L Near	 00002673 _TEXT	
  l2_r21_Handle  . . . . . . . .	L Near	 0000267F _TEXT	
  l2_r22_Handle  . . . . . . . .	L Near	 0000268B _TEXT	
  MovementChecker  . . . . . . .	L Near	 00002697 _TEXT	
Level2MovementUpGhost3 . . . . .	P Near	 00002A78 _TEXT	Length= 000001E7 Public STDCALL
  l2_r01_Handle  . . . . . . . .	L Near	 00002B35 _TEXT	
  l2_r02_Handle  . . . . . . . .	L Near	 00002B44 _TEXT	
  l2_r03_Handle  . . . . . . . .	L Near	 00002B53 _TEXT	
  l2_r04_Handle  . . . . . . . .	L Near	 00002B62 _TEXT	
  l2_r05_Handle  . . . . . . . .	L Near	 00002B71 _TEXT	
  l2_r06_Handle  . . . . . . . .	L Near	 00002B80 _TEXT	
  l2_r07_Handle  . . . . . . . .	L Near	 00002B8F _TEXT	
  l2_r08_Handle  . . . . . . . .	L Near	 00002B9E _TEXT	
  l2_r09_Handle  . . . . . . . .	L Near	 00002BAD _TEXT	
  l2_r10_Handle  . . . . . . . .	L Near	 00002BBC _TEXT	
  l2_r11_Handle  . . . . . . . .	L Near	 00002BCB _TEXT	
  l2_r12_Handle  . . . . . . . .	L Near	 00002BDA _TEXT	
  l2_r13_Handle  . . . . . . . .	L Near	 00002BE6 _TEXT	
  l2_r14_Handle  . . . . . . . .	L Near	 00002BF2 _TEXT	
  l2_r15_Handle  . . . . . . . .	L Near	 00002BFE _TEXT	
  l2_r16_Handle  . . . . . . . .	L Near	 00002C0A _TEXT	
  l2_r17_Handle  . . . . . . . .	L Near	 00002C16 _TEXT	
  l2_r18_Handle  . . . . . . . .	L Near	 00002C22 _TEXT	
  l2_r19_Handle  . . . . . . . .	L Near	 00002C2E _TEXT	
  l2_r20_Handle  . . . . . . . .	L Near	 00002C3A _TEXT	
  l2_r21_Handle  . . . . . . . .	L Near	 00002C46 _TEXT	
  l2_r22_Handle  . . . . . . . .	L Near	 00002C52 _TEXT	
  MovementChecker  . . . . . . .	L Near	 00002C5E _TEXT	
Level2MovementUp . . . . . . . .	P Near	 000059FC _TEXT	Length= 000001E7 Public STDCALL
  l2_r01_Handle  . . . . . . . .	L Near	 00005AB9 _TEXT	
  l2_r02_Handle  . . . . . . . .	L Near	 00005AC8 _TEXT	
  l2_r03_Handle  . . . . . . . .	L Near	 00005AD7 _TEXT	
  l2_r04_Handle  . . . . . . . .	L Near	 00005AE6 _TEXT	
  l2_r05_Handle  . . . . . . . .	L Near	 00005AF5 _TEXT	
  l2_r06_Handle  . . . . . . . .	L Near	 00005B04 _TEXT	
  l2_r07_Handle  . . . . . . . .	L Near	 00005B13 _TEXT	
  l2_r08_Handle  . . . . . . . .	L Near	 00005B22 _TEXT	
  l2_r09_Handle  . . . . . . . .	L Near	 00005B31 _TEXT	
  l2_r10_Handle  . . . . . . . .	L Near	 00005B40 _TEXT	
  l2_r11_Handle  . . . . . . . .	L Near	 00005B4F _TEXT	
  l2_r12_Handle  . . . . . . . .	L Near	 00005B5E _TEXT	
  l2_r13_Handle  . . . . . . . .	L Near	 00005B6A _TEXT	
  l2_r14_Handle  . . . . . . . .	L Near	 00005B76 _TEXT	
  l2_r15_Handle  . . . . . . . .	L Near	 00005B82 _TEXT	
  l2_r16_Handle  . . . . . . . .	L Near	 00005B8E _TEXT	
  l2_r17_Handle  . . . . . . . .	L Near	 00005B9A _TEXT	
  l2_r18_Handle  . . . . . . . .	L Near	 00005BA6 _TEXT	
  l2_r19_Handle  . . . . . . . .	L Near	 00005BB2 _TEXT	
  l2_r20_Handle  . . . . . . . .	L Near	 00005BBE _TEXT	
  l2_r21_Handle  . . . . . . . .	L Near	 00005BCA _TEXT	
  l2_r22_Handle  . . . . . . . .	L Near	 00005BD6 _TEXT	
  MovementChecker  . . . . . . .	L Near	 00005BE2 _TEXT	
Level3Intersection . . . . . . .	P Near	 00004EC6 _TEXT	Length= 000000EE Public STDCALL
  skip1  . . . . . . . . . . . .	L Near	 00004F11 _TEXT	
  skip2  . . . . . . . . . . . .	L Near	 00004F47 _TEXT	
  skip3  . . . . . . . . . . . .	L Near	 00004F7D _TEXT	
  skip4  . . . . . . . . . . . .	L Near	 00004FB3 _TEXT	
Level3Maze . . . . . . . . . . .	P Near	 0000664F _TEXT	Length= 000000BB Public STDCALL
  gameLoop3  . . . . . . . . . .	L Near	 000066BA _TEXT	
  skip . . . . . . . . . . . . .	L Near	 00006707 _TEXT	
Level3MovementDownGhost4 . . . .	P Near	 00003A4C _TEXT	Length= 000001E7 Public STDCALL
  l3_r01_Handle  . . . . . . . .	L Near	 00003B09 _TEXT	
  l3_r02_Handle  . . . . . . . .	L Near	 00003B18 _TEXT	
  l3_r03_Handle  . . . . . . . .	L Near	 00003B27 _TEXT	
  l3_r04_Handle  . . . . . . . .	L Near	 00003B36 _TEXT	
  l3_r05_Handle  . . . . . . . .	L Near	 00003B45 _TEXT	
  l3_r06_Handle  . . . . . . . .	L Near	 00003B54 _TEXT	
  l3_r07_Handle  . . . . . . . .	L Near	 00003B63 _TEXT	
  l3_r08_Handle  . . . . . . . .	L Near	 00003B72 _TEXT	
  l3_r09_Handle  . . . . . . . .	L Near	 00003B81 _TEXT	
  l3_r10_Handle  . . . . . . . .	L Near	 00003B90 _TEXT	
  l3_r11_Handle  . . . . . . . .	L Near	 00003B9F _TEXT	
  l3_r12_Handle  . . . . . . . .	L Near	 00003BAE _TEXT	
  l3_r13_Handle  . . . . . . . .	L Near	 00003BBA _TEXT	
  l3_r14_Handle  . . . . . . . .	L Near	 00003BC6 _TEXT	
  l3_r15_Handle  . . . . . . . .	L Near	 00003BD2 _TEXT	
  l3_r16_Handle  . . . . . . . .	L Near	 00003BDE _TEXT	
  l3_r17_Handle  . . . . . . . .	L Near	 00003BEA _TEXT	
  l3_r18_Handle  . . . . . . . .	L Near	 00003BF6 _TEXT	
  l3_r19_Handle  . . . . . . . .	L Near	 00003C02 _TEXT	
  l3_r20_Handle  . . . . . . . .	L Near	 00003C0E _TEXT	
  l3_r21_Handle  . . . . . . . .	L Near	 00003C1A _TEXT	
  l3_r22_Handle  . . . . . . . .	L Near	 00003C26 _TEXT	
  MovementChecker  . . . . . . .	L Near	 00003C32 _TEXT	
Level3MovementDownGhost5 . . . .	P Near	 00004013 _TEXT	Length= 000001E7 Public STDCALL
  l3_r01_Handle  . . . . . . . .	L Near	 000040D0 _TEXT	
  l3_r02_Handle  . . . . . . . .	L Near	 000040DF _TEXT	
  l3_r03_Handle  . . . . . . . .	L Near	 000040EE _TEXT	
  l3_r04_Handle  . . . . . . . .	L Near	 000040FD _TEXT	
  l3_r05_Handle  . . . . . . . .	L Near	 0000410C _TEXT	
  l3_r06_Handle  . . . . . . . .	L Near	 0000411B _TEXT	
  l3_r07_Handle  . . . . . . . .	L Near	 0000412A _TEXT	
  l3_r08_Handle  . . . . . . . .	L Near	 00004139 _TEXT	
  l3_r09_Handle  . . . . . . . .	L Near	 00004148 _TEXT	
  l3_r10_Handle  . . . . . . . .	L Near	 00004157 _TEXT	
  l3_r11_Handle  . . . . . . . .	L Near	 00004166 _TEXT	
  l3_r12_Handle  . . . . . . . .	L Near	 00004175 _TEXT	
  l3_r13_Handle  . . . . . . . .	L Near	 00004181 _TEXT	
  l3_r14_Handle  . . . . . . . .	L Near	 0000418D _TEXT	
  l3_r15_Handle  . . . . . . . .	L Near	 00004199 _TEXT	
  l3_r16_Handle  . . . . . . . .	L Near	 000041A5 _TEXT	
  l3_r17_Handle  . . . . . . . .	L Near	 000041B1 _TEXT	
  l3_r18_Handle  . . . . . . . .	L Near	 000041BD _TEXT	
  l3_r19_Handle  . . . . . . . .	L Near	 000041C9 _TEXT	
  l3_r20_Handle  . . . . . . . .	L Near	 000041D5 _TEXT	
  l3_r21_Handle  . . . . . . . .	L Near	 000041E1 _TEXT	
  l3_r22_Handle  . . . . . . . .	L Near	 000041ED _TEXT	
  MovementChecker  . . . . . . .	L Near	 000041F9 _TEXT	
Level3MovementDownGhost6 . . . .	P Near	 000045DA _TEXT	Length= 000001E7 Public STDCALL
  l3_r01_Handle  . . . . . . . .	L Near	 00004697 _TEXT	
  l3_r02_Handle  . . . . . . . .	L Near	 000046A6 _TEXT	
  l3_r03_Handle  . . . . . . . .	L Near	 000046B5 _TEXT	
  l3_r04_Handle  . . . . . . . .	L Near	 000046C4 _TEXT	
  l3_r05_Handle  . . . . . . . .	L Near	 000046D3 _TEXT	
  l3_r06_Handle  . . . . . . . .	L Near	 000046E2 _TEXT	
  l3_r07_Handle  . . . . . . . .	L Near	 000046F1 _TEXT	
  l3_r08_Handle  . . . . . . . .	L Near	 00004700 _TEXT	
  l3_r09_Handle  . . . . . . . .	L Near	 0000470F _TEXT	
  l3_r10_Handle  . . . . . . . .	L Near	 0000471E _TEXT	
  l3_r11_Handle  . . . . . . . .	L Near	 0000472D _TEXT	
  l3_r12_Handle  . . . . . . . .	L Near	 0000473C _TEXT	
  l3_r13_Handle  . . . . . . . .	L Near	 00004748 _TEXT	
  l3_r14_Handle  . . . . . . . .	L Near	 00004754 _TEXT	
  l3_r15_Handle  . . . . . . . .	L Near	 00004760 _TEXT	
  l3_r16_Handle  . . . . . . . .	L Near	 0000476C _TEXT	
  l3_r17_Handle  . . . . . . . .	L Near	 00004778 _TEXT	
  l3_r18_Handle  . . . . . . . .	L Near	 00004784 _TEXT	
  l3_r19_Handle  . . . . . . . .	L Near	 00004790 _TEXT	
  l3_r20_Handle  . . . . . . . .	L Near	 0000479C _TEXT	
  l3_r21_Handle  . . . . . . . .	L Near	 000047A8 _TEXT	
  l3_r22_Handle  . . . . . . . .	L Near	 000047B4 _TEXT	
  MovementChecker  . . . . . . .	L Near	 000047C0 _TEXT	
Level3MovementDownGhost7 . . . .	P Near	 00004BA1 _TEXT	Length= 000001E7 Public STDCALL
  l3_r01_Handle  . . . . . . . .	L Near	 00004C5E _TEXT	
  l3_r02_Handle  . . . . . . . .	L Near	 00004C6D _TEXT	
  l3_r03_Handle  . . . . . . . .	L Near	 00004C7C _TEXT	
  l3_r04_Handle  . . . . . . . .	L Near	 00004C8B _TEXT	
  l3_r05_Handle  . . . . . . . .	L Near	 00004C9A _TEXT	
  l3_r06_Handle  . . . . . . . .	L Near	 00004CA9 _TEXT	
  l3_r07_Handle  . . . . . . . .	L Near	 00004CB8 _TEXT	
  l3_r08_Handle  . . . . . . . .	L Near	 00004CC7 _TEXT	
  l3_r09_Handle  . . . . . . . .	L Near	 00004CD6 _TEXT	
  l3_r10_Handle  . . . . . . . .	L Near	 00004CE5 _TEXT	
  l3_r11_Handle  . . . . . . . .	L Near	 00004CF4 _TEXT	
  l3_r12_Handle  . . . . . . . .	L Near	 00004D03 _TEXT	
  l3_r13_Handle  . . . . . . . .	L Near	 00004D0F _TEXT	
  l3_r14_Handle  . . . . . . . .	L Near	 00004D1B _TEXT	
  l3_r15_Handle  . . . . . . . .	L Near	 00004D27 _TEXT	
  l3_r16_Handle  . . . . . . . .	L Near	 00004D33 _TEXT	
  l3_r17_Handle  . . . . . . . .	L Near	 00004D3F _TEXT	
  l3_r18_Handle  . . . . . . . .	L Near	 00004D4B _TEXT	
  l3_r19_Handle  . . . . . . . .	L Near	 00004D57 _TEXT	
  l3_r20_Handle  . . . . . . . .	L Near	 00004D63 _TEXT	
  l3_r21_Handle  . . . . . . . .	L Near	 00004D6F _TEXT	
  l3_r22_Handle  . . . . . . . .	L Near	 00004D7B _TEXT	
  MovementChecker  . . . . . . .	L Near	 00004D87 _TEXT	
Level3MovementDown . . . . . . .	P Near	 0000632A _TEXT	Length= 000001E7 Public STDCALL
  l3_r01_Handle  . . . . . . . .	L Near	 000063E7 _TEXT	
  l3_r02_Handle  . . . . . . . .	L Near	 000063F6 _TEXT	
  l3_r03_Handle  . . . . . . . .	L Near	 00006405 _TEXT	
  l3_r04_Handle  . . . . . . . .	L Near	 00006414 _TEXT	
  l3_r05_Handle  . . . . . . . .	L Near	 00006423 _TEXT	
  l3_r06_Handle  . . . . . . . .	L Near	 00006432 _TEXT	
  l3_r07_Handle  . . . . . . . .	L Near	 00006441 _TEXT	
  l3_r08_Handle  . . . . . . . .	L Near	 00006450 _TEXT	
  l3_r09_Handle  . . . . . . . .	L Near	 0000645F _TEXT	
  l3_r10_Handle  . . . . . . . .	L Near	 0000646E _TEXT	
  l3_r11_Handle  . . . . . . . .	L Near	 0000647D _TEXT	
  l3_r12_Handle  . . . . . . . .	L Near	 0000648C _TEXT	
  l3_r13_Handle  . . . . . . . .	L Near	 00006498 _TEXT	
  l3_r14_Handle  . . . . . . . .	L Near	 000064A4 _TEXT	
  l3_r15_Handle  . . . . . . . .	L Near	 000064B0 _TEXT	
  l3_r16_Handle  . . . . . . . .	L Near	 000064BC _TEXT	
  l3_r17_Handle  . . . . . . . .	L Near	 000064C8 _TEXT	
  l3_r18_Handle  . . . . . . . .	L Near	 000064D4 _TEXT	
  l3_r19_Handle  . . . . . . . .	L Near	 000064E0 _TEXT	
  l3_r20_Handle  . . . . . . . .	L Near	 000064EC _TEXT	
  l3_r21_Handle  . . . . . . . .	L Near	 000064F8 _TEXT	
  l3_r22_Handle  . . . . . . . .	L Near	 00006504 _TEXT	
  MovementChecker  . . . . . . .	L Near	 00006510 _TEXT	
Level3MovementLeftRightGhost4  .	P Near	 0000368D _TEXT	Length= 000001D8 Public STDCALL
  l3_r02_Handle  . . . . . . . .	L Near	 0000374A _TEXT	
  l3_r03_Handle  . . . . . . . .	L Near	 00003759 _TEXT	
  l3_r04_Handle  . . . . . . . .	L Near	 00003768 _TEXT	
  l3_r05_Handle  . . . . . . . .	L Near	 00003777 _TEXT	
  l3_r06_Handle  . . . . . . . .	L Near	 00003786 _TEXT	
  l3_r07_Handle  . . . . . . . .	L Near	 00003795 _TEXT	
  l3_r08_Handle  . . . . . . . .	L Near	 000037A4 _TEXT	
  l3_r09_Handle  . . . . . . . .	L Near	 000037B3 _TEXT	
  l3_r10_Handle  . . . . . . . .	L Near	 000037C2 _TEXT	
  l3_r11_Handle  . . . . . . . .	L Near	 000037D1 _TEXT	
  l3_r12_Handle  . . . . . . . .	L Near	 000037E0 _TEXT	
  l3_r13_Handle  . . . . . . . .	L Near	 000037EC _TEXT	
  l3_r14_Handle  . . . . . . . .	L Near	 000037F8 _TEXT	
  l3_r15_Handle  . . . . . . . .	L Near	 00003804 _TEXT	
  l3_r16_Handle  . . . . . . . .	L Near	 00003810 _TEXT	
  l3_r17_Handle  . . . . . . . .	L Near	 0000381C _TEXT	
  l3_r18_Handle  . . . . . . . .	L Near	 00003828 _TEXT	
  l3_r19_Handle  . . . . . . . .	L Near	 00003834 _TEXT	
  l3_r20_Handle  . . . . . . . .	L Near	 00003840 _TEXT	
  l3_r21_Handle  . . . . . . . .	L Near	 0000384C _TEXT	
  l3_r22_Handle  . . . . . . . .	L Near	 00003858 _TEXT	
  MovementChecker  . . . . . . .	L Near	 00003864 _TEXT	
Level3MovementLeftRightGhost5  .	P Near	 00003C54 _TEXT	Length= 000001D8 Public STDCALL
  l3_r02_Handle  . . . . . . . .	L Near	 00003D11 _TEXT	
  l3_r03_Handle  . . . . . . . .	L Near	 00003D20 _TEXT	
  l3_r04_Handle  . . . . . . . .	L Near	 00003D2F _TEXT	
  l3_r05_Handle  . . . . . . . .	L Near	 00003D3E _TEXT	
  l3_r06_Handle  . . . . . . . .	L Near	 00003D4D _TEXT	
  l3_r07_Handle  . . . . . . . .	L Near	 00003D5C _TEXT	
  l3_r08_Handle  . . . . . . . .	L Near	 00003D6B _TEXT	
  l3_r09_Handle  . . . . . . . .	L Near	 00003D7A _TEXT	
  l3_r10_Handle  . . . . . . . .	L Near	 00003D89 _TEXT	
  l3_r11_Handle  . . . . . . . .	L Near	 00003D98 _TEXT	
  l3_r12_Handle  . . . . . . . .	L Near	 00003DA7 _TEXT	
  l3_r13_Handle  . . . . . . . .	L Near	 00003DB3 _TEXT	
  l3_r14_Handle  . . . . . . . .	L Near	 00003DBF _TEXT	
  l3_r15_Handle  . . . . . . . .	L Near	 00003DCB _TEXT	
  l3_r16_Handle  . . . . . . . .	L Near	 00003DD7 _TEXT	
  l3_r17_Handle  . . . . . . . .	L Near	 00003DE3 _TEXT	
  l3_r18_Handle  . . . . . . . .	L Near	 00003DEF _TEXT	
  l3_r19_Handle  . . . . . . . .	L Near	 00003DFB _TEXT	
  l3_r20_Handle  . . . . . . . .	L Near	 00003E07 _TEXT	
  l3_r21_Handle  . . . . . . . .	L Near	 00003E13 _TEXT	
  l3_r22_Handle  . . . . . . . .	L Near	 00003E1F _TEXT	
  MovementChecker  . . . . . . .	L Near	 00003E2B _TEXT	
Level3MovementLeftRightGhost6  .	P Near	 0000421B _TEXT	Length= 000001D8 Public STDCALL
  l3_r02_Handle  . . . . . . . .	L Near	 000042D8 _TEXT	
  l3_r03_Handle  . . . . . . . .	L Near	 000042E7 _TEXT	
  l3_r04_Handle  . . . . . . . .	L Near	 000042F6 _TEXT	
  l3_r05_Handle  . . . . . . . .	L Near	 00004305 _TEXT	
  l3_r06_Handle  . . . . . . . .	L Near	 00004314 _TEXT	
  l3_r07_Handle  . . . . . . . .	L Near	 00004323 _TEXT	
  l3_r08_Handle  . . . . . . . .	L Near	 00004332 _TEXT	
  l3_r09_Handle  . . . . . . . .	L Near	 00004341 _TEXT	
  l3_r10_Handle  . . . . . . . .	L Near	 00004350 _TEXT	
  l3_r11_Handle  . . . . . . . .	L Near	 0000435F _TEXT	
  l3_r12_Handle  . . . . . . . .	L Near	 0000436E _TEXT	
  l3_r13_Handle  . . . . . . . .	L Near	 0000437A _TEXT	
  l3_r14_Handle  . . . . . . . .	L Near	 00004386 _TEXT	
  l3_r15_Handle  . . . . . . . .	L Near	 00004392 _TEXT	
  l3_r16_Handle  . . . . . . . .	L Near	 0000439E _TEXT	
  l3_r17_Handle  . . . . . . . .	L Near	 000043AA _TEXT	
  l3_r18_Handle  . . . . . . . .	L Near	 000043B6 _TEXT	
  l3_r19_Handle  . . . . . . . .	L Near	 000043C2 _TEXT	
  l3_r20_Handle  . . . . . . . .	L Near	 000043CE _TEXT	
  l3_r21_Handle  . . . . . . . .	L Near	 000043DA _TEXT	
  l3_r22_Handle  . . . . . . . .	L Near	 000043E6 _TEXT	
  MovementChecker  . . . . . . .	L Near	 000043F2 _TEXT	
Level3MovementLeftRightGhost7  .	P Near	 000047E2 _TEXT	Length= 000001D8 Public STDCALL
  l3_r02_Handle  . . . . . . . .	L Near	 0000489F _TEXT	
  l3_r03_Handle  . . . . . . . .	L Near	 000048AE _TEXT	
  l3_r04_Handle  . . . . . . . .	L Near	 000048BD _TEXT	
  l3_r05_Handle  . . . . . . . .	L Near	 000048CC _TEXT	
  l3_r06_Handle  . . . . . . . .	L Near	 000048DB _TEXT	
  l3_r07_Handle  . . . . . . . .	L Near	 000048EA _TEXT	
  l3_r08_Handle  . . . . . . . .	L Near	 000048F9 _TEXT	
  l3_r09_Handle  . . . . . . . .	L Near	 00004908 _TEXT	
  l3_r10_Handle  . . . . . . . .	L Near	 00004917 _TEXT	
  l3_r11_Handle  . . . . . . . .	L Near	 00004926 _TEXT	
  l3_r12_Handle  . . . . . . . .	L Near	 00004935 _TEXT	
  l3_r13_Handle  . . . . . . . .	L Near	 00004941 _TEXT	
  l3_r14_Handle  . . . . . . . .	L Near	 0000494D _TEXT	
  l3_r15_Handle  . . . . . . . .	L Near	 00004959 _TEXT	
  l3_r16_Handle  . . . . . . . .	L Near	 00004965 _TEXT	
  l3_r17_Handle  . . . . . . . .	L Near	 00004971 _TEXT	
  l3_r18_Handle  . . . . . . . .	L Near	 0000497D _TEXT	
  l3_r19_Handle  . . . . . . . .	L Near	 00004989 _TEXT	
  l3_r20_Handle  . . . . . . . .	L Near	 00004995 _TEXT	
  l3_r21_Handle  . . . . . . . .	L Near	 000049A1 _TEXT	
  l3_r22_Handle  . . . . . . . .	L Near	 000049AD _TEXT	
  MovementChecker  . . . . . . .	L Near	 000049B9 _TEXT	
Level3MovementLeftRight  . . . .	P Near	 00005F6B _TEXT	Length= 000001D8 Public STDCALL
  l3_r02_Handle  . . . . . . . .	L Near	 00006028 _TEXT	
  l3_r03_Handle  . . . . . . . .	L Near	 00006037 _TEXT	
  l3_r04_Handle  . . . . . . . .	L Near	 00006046 _TEXT	
  l3_r05_Handle  . . . . . . . .	L Near	 00006055 _TEXT	
  l3_r06_Handle  . . . . . . . .	L Near	 00006064 _TEXT	
  l3_r07_Handle  . . . . . . . .	L Near	 00006073 _TEXT	
  l3_r08_Handle  . . . . . . . .	L Near	 00006082 _TEXT	
  l3_r09_Handle  . . . . . . . .	L Near	 00006091 _TEXT	
  l3_r10_Handle  . . . . . . . .	L Near	 000060A0 _TEXT	
  l3_r11_Handle  . . . . . . . .	L Near	 000060AF _TEXT	
  l3_r12_Handle  . . . . . . . .	L Near	 000060BE _TEXT	
  l3_r13_Handle  . . . . . . . .	L Near	 000060CA _TEXT	
  l3_r14_Handle  . . . . . . . .	L Near	 000060D6 _TEXT	
  l3_r15_Handle  . . . . . . . .	L Near	 000060E2 _TEXT	
  l3_r16_Handle  . . . . . . . .	L Near	 000060EE _TEXT	
  l3_r17_Handle  . . . . . . . .	L Near	 000060FA _TEXT	
  l3_r18_Handle  . . . . . . . .	L Near	 00006106 _TEXT	
  l3_r19_Handle  . . . . . . . .	L Near	 00006112 _TEXT	
  l3_r20_Handle  . . . . . . . .	L Near	 0000611E _TEXT	
  l3_r21_Handle  . . . . . . . .	L Near	 0000612A _TEXT	
  l3_r22_Handle  . . . . . . . .	L Near	 00006136 _TEXT	
  MovementChecker  . . . . . . .	L Near	 00006142 _TEXT	
Level3MovementUpGhost4 . . . . .	P Near	 00003865 _TEXT	Length= 000001E7 Public STDCALL
  l3_r01_Handle  . . . . . . . .	L Near	 00003922 _TEXT	
  l3_r02_Handle  . . . . . . . .	L Near	 00003931 _TEXT	
  l3_r03_Handle  . . . . . . . .	L Near	 00003940 _TEXT	
  l3_r04_Handle  . . . . . . . .	L Near	 0000394F _TEXT	
  l3_r05_Handle  . . . . . . . .	L Near	 0000395E _TEXT	
  l3_r06_Handle  . . . . . . . .	L Near	 0000396D _TEXT	
  l3_r07_Handle  . . . . . . . .	L Near	 0000397C _TEXT	
  l3_r08_Handle  . . . . . . . .	L Near	 0000398B _TEXT	
  l3_r09_Handle  . . . . . . . .	L Near	 0000399A _TEXT	
  l3_r10_Handle  . . . . . . . .	L Near	 000039A9 _TEXT	
  l3_r11_Handle  . . . . . . . .	L Near	 000039B8 _TEXT	
  l3_r12_Handle  . . . . . . . .	L Near	 000039C7 _TEXT	
  l3_r13_Handle  . . . . . . . .	L Near	 000039D3 _TEXT	
  l3_r14_Handle  . . . . . . . .	L Near	 000039DF _TEXT	
  l3_r15_Handle  . . . . . . . .	L Near	 000039EB _TEXT	
  l3_r16_Handle  . . . . . . . .	L Near	 000039F7 _TEXT	
  l3_r17_Handle  . . . . . . . .	L Near	 00003A03 _TEXT	
  l3_r18_Handle  . . . . . . . .	L Near	 00003A0F _TEXT	
  l3_r19_Handle  . . . . . . . .	L Near	 00003A1B _TEXT	
  l3_r20_Handle  . . . . . . . .	L Near	 00003A27 _TEXT	
  l3_r21_Handle  . . . . . . . .	L Near	 00003A33 _TEXT	
  l3_r22_Handle  . . . . . . . .	L Near	 00003A3F _TEXT	
  MovementChecker  . . . . . . .	L Near	 00003A4B _TEXT	
Level3MovementUpGhost5 . . . . .	P Near	 00003E2C _TEXT	Length= 000001E7 Public STDCALL
  l3_r01_Handle  . . . . . . . .	L Near	 00003EE9 _TEXT	
  l3_r02_Handle  . . . . . . . .	L Near	 00003EF8 _TEXT	
  l3_r03_Handle  . . . . . . . .	L Near	 00003F07 _TEXT	
  l3_r04_Handle  . . . . . . . .	L Near	 00003F16 _TEXT	
  l3_r05_Handle  . . . . . . . .	L Near	 00003F25 _TEXT	
  l3_r06_Handle  . . . . . . . .	L Near	 00003F34 _TEXT	
  l3_r07_Handle  . . . . . . . .	L Near	 00003F43 _TEXT	
  l3_r08_Handle  . . . . . . . .	L Near	 00003F52 _TEXT	
  l3_r09_Handle  . . . . . . . .	L Near	 00003F61 _TEXT	
  l3_r10_Handle  . . . . . . . .	L Near	 00003F70 _TEXT	
  l3_r11_Handle  . . . . . . . .	L Near	 00003F7F _TEXT	
  l3_r12_Handle  . . . . . . . .	L Near	 00003F8E _TEXT	
  l3_r13_Handle  . . . . . . . .	L Near	 00003F9A _TEXT	
  l3_r14_Handle  . . . . . . . .	L Near	 00003FA6 _TEXT	
  l3_r15_Handle  . . . . . . . .	L Near	 00003FB2 _TEXT	
  l3_r16_Handle  . . . . . . . .	L Near	 00003FBE _TEXT	
  l3_r17_Handle  . . . . . . . .	L Near	 00003FCA _TEXT	
  l3_r18_Handle  . . . . . . . .	L Near	 00003FD6 _TEXT	
  l3_r19_Handle  . . . . . . . .	L Near	 00003FE2 _TEXT	
  l3_r20_Handle  . . . . . . . .	L Near	 00003FEE _TEXT	
  l3_r21_Handle  . . . . . . . .	L Near	 00003FFA _TEXT	
  l3_r22_Handle  . . . . . . . .	L Near	 00004006 _TEXT	
  MovementChecker  . . . . . . .	L Near	 00004012 _TEXT	
Level3MovementUpGhost6 . . . . .	P Near	 000043F3 _TEXT	Length= 000001E7 Public STDCALL
  l3_r01_Handle  . . . . . . . .	L Near	 000044B0 _TEXT	
  l3_r02_Handle  . . . . . . . .	L Near	 000044BF _TEXT	
  l3_r03_Handle  . . . . . . . .	L Near	 000044CE _TEXT	
  l3_r04_Handle  . . . . . . . .	L Near	 000044DD _TEXT	
  l3_r05_Handle  . . . . . . . .	L Near	 000044EC _TEXT	
  l3_r06_Handle  . . . . . . . .	L Near	 000044FB _TEXT	
  l3_r07_Handle  . . . . . . . .	L Near	 0000450A _TEXT	
  l3_r08_Handle  . . . . . . . .	L Near	 00004519 _TEXT	
  l3_r09_Handle  . . . . . . . .	L Near	 00004528 _TEXT	
  l3_r10_Handle  . . . . . . . .	L Near	 00004537 _TEXT	
  l3_r11_Handle  . . . . . . . .	L Near	 00004546 _TEXT	
  l3_r12_Handle  . . . . . . . .	L Near	 00004555 _TEXT	
  l3_r13_Handle  . . . . . . . .	L Near	 00004561 _TEXT	
  l3_r14_Handle  . . . . . . . .	L Near	 0000456D _TEXT	
  l3_r15_Handle  . . . . . . . .	L Near	 00004579 _TEXT	
  l3_r16_Handle  . . . . . . . .	L Near	 00004585 _TEXT	
  l3_r17_Handle  . . . . . . . .	L Near	 00004591 _TEXT	
  l3_r18_Handle  . . . . . . . .	L Near	 0000459D _TEXT	
  l3_r19_Handle  . . . . . . . .	L Near	 000045A9 _TEXT	
  l3_r20_Handle  . . . . . . . .	L Near	 000045B5 _TEXT	
  l3_r21_Handle  . . . . . . . .	L Near	 000045C1 _TEXT	
  l3_r22_Handle  . . . . . . . .	L Near	 000045CD _TEXT	
  MovementChecker  . . . . . . .	L Near	 000045D9 _TEXT	
Level3MovementUpGhost7 . . . . .	P Near	 000049BA _TEXT	Length= 000001E7 Public STDCALL
  l3_r01_Handle  . . . . . . . .	L Near	 00004A77 _TEXT	
  l3_r02_Handle  . . . . . . . .	L Near	 00004A86 _TEXT	
  l3_r03_Handle  . . . . . . . .	L Near	 00004A95 _TEXT	
  l3_r04_Handle  . . . . . . . .	L Near	 00004AA4 _TEXT	
  l3_r05_Handle  . . . . . . . .	L Near	 00004AB3 _TEXT	
  l3_r06_Handle  . . . . . . . .	L Near	 00004AC2 _TEXT	
  l3_r07_Handle  . . . . . . . .	L Near	 00004AD1 _TEXT	
  l3_r08_Handle  . . . . . . . .	L Near	 00004AE0 _TEXT	
  l3_r09_Handle  . . . . . . . .	L Near	 00004AEF _TEXT	
  l3_r10_Handle  . . . . . . . .	L Near	 00004AFE _TEXT	
  l3_r11_Handle  . . . . . . . .	L Near	 00004B0D _TEXT	
  l3_r12_Handle  . . . . . . . .	L Near	 00004B1C _TEXT	
  l3_r13_Handle  . . . . . . . .	L Near	 00004B28 _TEXT	
  l3_r14_Handle  . . . . . . . .	L Near	 00004B34 _TEXT	
  l3_r15_Handle  . . . . . . . .	L Near	 00004B40 _TEXT	
  l3_r16_Handle  . . . . . . . .	L Near	 00004B4C _TEXT	
  l3_r17_Handle  . . . . . . . .	L Near	 00004B58 _TEXT	
  l3_r18_Handle  . . . . . . . .	L Near	 00004B64 _TEXT	
  l3_r19_Handle  . . . . . . . .	L Near	 00004B70 _TEXT	
  l3_r20_Handle  . . . . . . . .	L Near	 00004B7C _TEXT	
  l3_r21_Handle  . . . . . . . .	L Near	 00004B88 _TEXT	
  l3_r22_Handle  . . . . . . . .	L Near	 00004B94 _TEXT	
  MovementChecker  . . . . . . .	L Near	 00004BA0 _TEXT	
Level3MovementUp . . . . . . . .	P Near	 00006143 _TEXT	Length= 000001E7 Public STDCALL
  l3_r01_Handle  . . . . . . . .	L Near	 00006200 _TEXT	
  l3_r02_Handle  . . . . . . . .	L Near	 0000620F _TEXT	
  l3_r03_Handle  . . . . . . . .	L Near	 0000621E _TEXT	
  l3_r04_Handle  . . . . . . . .	L Near	 0000622D _TEXT	
  l3_r05_Handle  . . . . . . . .	L Near	 0000623C _TEXT	
  l3_r06_Handle  . . . . . . . .	L Near	 0000624B _TEXT	
  l3_r07_Handle  . . . . . . . .	L Near	 0000625A _TEXT	
  l3_r08_Handle  . . . . . . . .	L Near	 00006269 _TEXT	
  l3_r09_Handle  . . . . . . . .	L Near	 00006278 _TEXT	
  l3_r10_Handle  . . . . . . . .	L Near	 00006287 _TEXT	
  l3_r11_Handle  . . . . . . . .	L Near	 00006296 _TEXT	
  l3_r12_Handle  . . . . . . . .	L Near	 000062A5 _TEXT	
  l3_r13_Handle  . . . . . . . .	L Near	 000062B1 _TEXT	
  l3_r14_Handle  . . . . . . . .	L Near	 000062BD _TEXT	
  l3_r15_Handle  . . . . . . . .	L Near	 000062C9 _TEXT	
  l3_r16_Handle  . . . . . . . .	L Near	 000062D5 _TEXT	
  l3_r17_Handle  . . . . . . . .	L Near	 000062E1 _TEXT	
  l3_r18_Handle  . . . . . . . .	L Near	 000062ED _TEXT	
  l3_r19_Handle  . . . . . . . .	L Near	 000062F9 _TEXT	
  l3_r20_Handle  . . . . . . . .	L Near	 00006305 _TEXT	
  l3_r21_Handle  . . . . . . . .	L Near	 00006311 _TEXT	
  l3_r22_Handle  . . . . . . . .	L Near	 0000631D _TEXT	
  MovementChecker  . . . . . . .	L Near	 00006329 _TEXT	
LevelDisplayer1  . . . . . . . .	P Near	 00000E98 _TEXT	Length= 00000036 Public STDCALL
  ld1  . . . . . . . . . . . . .	L Near	 00000E99 _TEXT	
  C1 . . . . . . . . . . . . . .	L Near	 00000EB5 _TEXT	
  C2 . . . . . . . . . . . . . .	L Near	 00000EBC _TEXT	
  C3 . . . . . . . . . . . . . .	L Near	 00000EC3 _TEXT	
  ld_excape  . . . . . . . . . .	L Near	 00000ECA _TEXT	
LevelDisplayer2  . . . . . . . .	P Near	 000010DF _TEXT	Length= 00000042 Public STDCALL
  ld1  . . . . . . . . . . . . .	L Near	 000010E0 _TEXT	
  C1 . . . . . . . . . . . . . .	L Near	 00001101 _TEXT	
  C2 . . . . . . . . . . . . . .	L Near	 00001108 _TEXT	
  C3 . . . . . . . . . . . . . .	L Near	 0000110F _TEXT	
  C4 . . . . . . . . . . . . . .	L Near	 00001116 _TEXT	
  ld_excape  . . . . . . . . . .	L Near	 0000111D _TEXT	
LevelDisplayer3  . . . . . . . .	P Near	 00001332 _TEXT	Length= 00000042 Public STDCALL
  ld1  . . . . . . . . . . . . .	L Near	 00001333 _TEXT	
  C1 . . . . . . . . . . . . . .	L Near	 00001354 _TEXT	
  C2 . . . . . . . . . . . . . .	L Near	 0000135B _TEXT	
  C3 . . . . . . . . . . . . . .	L Near	 00001362 _TEXT	
  C4 . . . . . . . . . . . . . .	L Near	 00001369 _TEXT	
  ld_excape  . . . . . . . . . .	L Near	 00001370 _TEXT	
LocalFree  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Menu1Displayer . . . . . . . . .	P Near	 000003E5 _TEXT	Length= 00000021 Public STDCALL
  ld1  . . . . . . . . . . . . .	L Near	 000003E5 _TEXT	
  C1 . . . . . . . . . . . . . .	L Near	 000003F6 _TEXT	
  C3 . . . . . . . . . . . . . .	L Near	 000003FD _TEXT	
  ld_excape  . . . . . . . . . .	L Near	 00000402 _TEXT	
Menu1EnterName . . . . . . . . .	P Near	 00000512 _TEXT	Length= 00000079 Public STDCALL
Menu1Name  . . . . . . . . . . .	P Near	 0000006F _TEXT	Length= 00000376 Public STDCALL
Menu2Screen  . . . . . . . . . .	P Near	 00000889 _TEXT	Length= 000000C0 Public STDCALL
MessageBoxA  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MsgBoxAsk  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MsgBox . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
OpenInputFile  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
PacmanLogo . . . . . . . . . . .	P Near	 00000406 _TEXT	Length= 0000010C Public STDCALL
ParseDecimal32 . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ParseInteger32 . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
PeekConsoleInputA  . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
PinkyGhost . . . . . . . . . . .	P Near	 0000058B _TEXT	Length= 00000143 Public STDCALL
PlaySound  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
PlayerMovement1  . . . . . . . .	P Near	 00004FB4 _TEXT	Length= 00000165 Public STDCALL
  LookForKey . . . . . . . . . .	L Near	 00004FC0 _TEXT	
  MovementcheckerCharacter . . .	L Near	 00005002 _TEXT	
  L1moveRight  . . . . . . . . .	L Near	 00005039 _TEXT	
  L1moveLeft . . . . . . . . . .	L Near	 0000505D _TEXT	
  L1moveUp . . . . . . . . . . .	L Near	 00005081 _TEXT	
  L1MoveDown . . . . . . . . . .	L Near	 0000509F _TEXT	
  L1SkipLeftRight  . . . . . . .	L Near	 000050BD _TEXT	
  PlayerMovement1Fixer . . . . .	L Near	 000050C8 _TEXT	
  RightFixer . . . . . . . . . .	L Near	 000050EE _TEXT	
  LeftFixer  . . . . . . . . . .	L Near	 000050FC _TEXT	
  UpFixer  . . . . . . . . . . .	L Near	 0000510A _TEXT	
  DownFixer  . . . . . . . . . .	L Near	 00005112 _TEXT	
  SkipMovementFixer  . . . . . .	L Near	 00005118 _TEXT	
PlayerMovement2  . . . . . . . .	P Near	 000056BF _TEXT	Length= 00000165 Public STDCALL
  LookForKey . . . . . . . . . .	L Near	 000056CB _TEXT	
  MovementcheckerCharacter . . .	L Near	 0000570D _TEXT	
  L1moveRight  . . . . . . . . .	L Near	 00005744 _TEXT	
  L1moveLeft . . . . . . . . . .	L Near	 00005768 _TEXT	
  L1moveUp . . . . . . . . . . .	L Near	 0000578C _TEXT	
  L1MoveDown . . . . . . . . . .	L Near	 000057AA _TEXT	
  L1SkipLeftRight  . . . . . . .	L Near	 000057C8 _TEXT	
  PlayerMovement1Fixer . . . . .	L Near	 000057D3 _TEXT	
  RightFixer . . . . . . . . . .	L Near	 000057F9 _TEXT	
  LeftFixer  . . . . . . . . . .	L Near	 00005807 _TEXT	
  UpFixer  . . . . . . . . . . .	L Near	 00005815 _TEXT	
  DownFixer  . . . . . . . . . .	L Near	 0000581D _TEXT	
  SkipMovementFixer  . . . . . .	L Near	 00005823 _TEXT	
PlayerMovement3  . . . . . . . .	P Near	 00005DCA _TEXT	Length= 000001A1 Public STDCALL
  SkipA  . . . . . . . . . . . .	L Near	 00005DED _TEXT	
  SkipB  . . . . . . . . . . . .	L Near	 00005E0B _TEXT	
  LookForKey . . . . . . . . . .	L Near	 00005E12 _TEXT	
  MovementcheckerCharacter . . .	L Near	 00005E54 _TEXT	
  L1moveRight  . . . . . . . . .	L Near	 00005E8B _TEXT	
  L1moveLeft . . . . . . . . . .	L Near	 00005EAF _TEXT	
  L1moveUp . . . . . . . . . . .	L Near	 00005ED3 _TEXT	
  L1MoveDown . . . . . . . . . .	L Near	 00005EF1 _TEXT	
  L1SkipLeftRight  . . . . . . .	L Near	 00005F0F _TEXT	
  PlayerMovement1Fixer . . . . .	L Near	 00005F1A _TEXT	
  RightFixer . . . . . . . . . .	L Near	 00005F40 _TEXT	
  LeftFixer  . . . . . . . . . .	L Near	 00005F4E _TEXT	
  UpFixer  . . . . . . . . . . .	L Near	 00005F5C _TEXT	
  DownFixer  . . . . . . . . . .	L Near	 00005F64 _TEXT	
  SkipMovementFixer  . . . . . .	L Near	 00005F6A _TEXT	
Random32 . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
RandomRange  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Randomize  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadChar . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadConsoleA . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadConsoleInputA  . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadDec  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFile . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFloat  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFromFile . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadHex  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadInt  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadKeyFlush . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadKey  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadString . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
RedGhostMaker  . . . . . . . . .	P Near	 0000084D _TEXT	Length= 0000003C Public STDCALL
  ld1  . . . . . . . . . . . . .	L Near	 0000084E _TEXT	
  C1 . . . . . . . . . . . . . .	L Near	 00000869 _TEXT	
  C2 . . . . . . . . . . . . . .	L Near	 00000870 _TEXT	
  C3 . . . . . . . . . . . . . .	L Near	 00000877 _TEXT	
  C4 . . . . . . . . . . . . . .	L Near	 0000087E _TEXT	
  ld_excape  . . . . . . . . . .	L Near	 00000885 _TEXT	
RedyGhost  . . . . . . . . . . .	P Near	 0000070A _TEXT	Length= 00000143 Public STDCALL
SetConsoleCursorInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleCursorPosition . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleMode . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleScreenBufferSize . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleTextAttribute  . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleTitleA . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleWindowInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetFilePointer . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetLocalTime . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetTextColor . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ShowFPUStack . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Sleep  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
StrLength  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_compare  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_copy . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_length . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_trim . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_ucase  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
StringMasking  . . . . . . . . .	P Near	 00000B03 _TEXT	Length= 00000021 Public STDCALL
  l1 . . . . . . . . . . . . . .	L Near	 00000B0D _TEXT	
SystemTimeToFileTime . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
UpdateGhost1 . . . . . . . . . .	P Near	 000016D6 _TEXT	Length= 00000053 Public STDCALL
  l1 . . . . . . . . . . . . . .	L Near	 00001702 _TEXT	
  next . . . . . . . . . . . . .	L Near	 00001721 _TEXT	
  escape . . . . . . . . . . . .	L Near	 00001728 _TEXT	
UpdateGhost2 . . . . . . . . . .	P Near	 00001F96 _TEXT	Length= 0000006A Public STDCALL
  l2 . . . . . . . . . . . . . .	L Near	 00001FC2 _TEXT	
  next . . . . . . . . . . . . .	L Near	 00001FE1 _TEXT	
  skip . . . . . . . . . . . . .	L Near	 00001FF8 _TEXT	
  escape . . . . . . . . . . . .	L Near	 00001FFF _TEXT	
UpdateGhost3 . . . . . . . . . .	P Near	 0000214F _TEXT	Length= 0000006A Public STDCALL
  l2 . . . . . . . . . . . . . .	L Near	 0000217B _TEXT	
  next . . . . . . . . . . . . .	L Near	 0000219A _TEXT	
  skip . . . . . . . . . . . . .	L Near	 000021B1 _TEXT	
  escape . . . . . . . . . . . .	L Near	 000021B8 _TEXT	
UpdateGhost4 . . . . . . . . . .	P Near	 00002FED _TEXT	Length= 0000006A Public STDCALL
  l3 . . . . . . . . . . . . . .	L Near	 00003019 _TEXT	
  next . . . . . . . . . . . . .	L Near	 00003038 _TEXT	
  skip . . . . . . . . . . . . .	L Near	 0000304F _TEXT	
  escape . . . . . . . . . . . .	L Near	 00003056 _TEXT	
UpdateGhost5 . . . . . . . . . .	P Near	 0000319F _TEXT	Length= 0000006A Public STDCALL
  l3 . . . . . . . . . . . . . .	L Near	 000031CB _TEXT	
  next . . . . . . . . . . . . .	L Near	 000031EA _TEXT	
  skip . . . . . . . . . . . . .	L Near	 00003201 _TEXT	
  escape . . . . . . . . . . . .	L Near	 00003208 _TEXT	
UpdateGhost6 . . . . . . . . . .	P Near	 00003351 _TEXT	Length= 0000006A Public STDCALL
  l3 . . . . . . . . . . . . . .	L Near	 0000337D _TEXT	
  next . . . . . . . . . . . . .	L Near	 0000339C _TEXT	
  skip . . . . . . . . . . . . .	L Near	 000033B3 _TEXT	
  escape . . . . . . . . . . . .	L Near	 000033BA _TEXT	
UpdateGhost7 . . . . . . . . . .	P Near	 00003503 _TEXT	Length= 0000006A Public STDCALL
  l3 . . . . . . . . . . . . . .	L Near	 0000352F _TEXT	
  next . . . . . . . . . . . . .	L Near	 0000354E _TEXT	
  skip . . . . . . . . . . . . .	L Near	 00003565 _TEXT	
  escape . . . . . . . . . . . .	L Near	 0000356C _TEXT	
UpdatePlayer . . . . . . . . . .	P Near	 00004DCE _TEXT	Length= 00000020 Public STDCALL
WaitMsg  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WallCoinChecker  . . . . . . . .	P Near	 00006511 _TEXT	Length= 00000059 Public STDCALL
  l1loop1  . . . . . . . . . . .	L Near	 00006518 _TEXT	
  replacewithspace . . . . . . .	L Near	 00006533 _TEXT	
  SkipScreIncrease . . . . . . .	L Near	 00006552 _TEXT	
  Skip . . . . . . . . . . . . .	L Near	 00006567 _TEXT	
  EscapeReplacer . . . . . . . .	L Near	 00006569 _TEXT	
WriteBinB  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteBin . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteChar  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleA  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleOutputAttribute  . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleOutputCharacterA . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteDec . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteFile  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteFloat . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteHexB  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteHex . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteInt . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteStackFrameName  . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteStackFrame  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteString  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteToFile  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteWindowsMsg  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
getValuesofUser  . . . . . . . .	P Near	 00000B24 _TEXT	Length= 0000008A Public STDCALL
  letsOpenFile . . . . . . . . .	L Near	 00000B33 _TEXT	
main . . . . . . . . . . . . . .	P Near	 00000000 _TEXT	Length= 0000006F Public STDCALL
  Menu . . . . . . . . . . . . .	L Near	 0000000F _TEXT	
  n2 . . . . . . . . . . . . . .	L Near	 00000032 _TEXT	
  SkipL  . . . . . . . . . . . .	L Near	 00000042 _TEXT	
  n3 . . . . . . . . . . . . . .	L Near	 00000042 _TEXT	
  n4 . . . . . . . . . . . . . .	L Near	 0000004A _TEXT	
  level1 . . . . . . . . . . . .	L Near	 0000004A _TEXT	
  level2 . . . . . . . . . . . .	L Near	 0000004F _TEXT	
  level3 . . . . . . . . . . . .	L Near	 00000054 _TEXT	
  exitGame . . . . . . . . . . .	L Near	 00000059 _TEXT	
printf . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C
scanf  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C
wsprintfA  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C


Symbols:

                N a m e                 Type     Value    Attr

??0000 . . . . . . . . . . . . .	Byte	 000014DA _DATA	
??0001 . . . . . . . . . . . . .	Byte	 000014F4 _DATA	
??0002 . . . . . . . . . . . . .	Byte	 00001506 _DATA	
??0003 . . . . . . . . . . . . .	Byte	 00001519 _DATA	
??0004 . . . . . . . . . . . . .	Byte	 00001525 _DATA	
??0005 . . . . . . . . . . . . .	Byte	 00001534 _DATA	
??0006 . . . . . . . . . . . . .	Byte	 00001547 _DATA	
??0007 . . . . . . . . . . . . .	Byte	 00001559 _DATA	
??0008 . . . . . . . . . . . . .	Byte	 00001568 _DATA	
??0009 . . . . . . . . . . . . .	Byte	 00001593 _DATA	
??000A . . . . . . . . . . . . .	Byte	 000015C5 _DATA	
??000B . . . . . . . . . . . . .	Byte	 000015FD _DATA	
??000C . . . . . . . . . . . . .	Byte	 0000162F _DATA	
??000D . . . . . . . . . . . . .	Byte	 00001646 _DATA	
??000E . . . . . . . . . . . . .	Byte	 0000165D _DATA	
??000F . . . . . . . . . . . . .	Byte	 00001679 _DATA	
??0010 . . . . . . . . . . . . .	Byte	 0000168E _DATA	
??0011 . . . . . . . . . . . . .	Byte	 00001699 _DATA	
??0012 . . . . . . . . . . . . .	Byte	 000016A4 _DATA	
??0013 . . . . . . . . . . . . .	Byte	 000016AF _DATA	
??0014 . . . . . . . . . . . . .	Byte	 000016B8 _DATA	
??0015 . . . . . . . . . . . . .	Byte	 000016C1 _DATA	
@CodeSize  . . . . . . . . . . .	Number	 00000000h   
@DataSize  . . . . . . . . . . .	Number	 00000000h   
@Interface . . . . . . . . . . .	Number	 00000003h   
@Model . . . . . . . . . . . . .	Number	 00000007h   
@code  . . . . . . . . . . . . .	Text   	 _TEXT
@data  . . . . . . . . . . . . .	Text   	 FLAT
@fardata?  . . . . . . . . . . .	Text   	 FLAT
@fardata . . . . . . . . . . . .	Text   	 FLAT
@stack . . . . . . . . . . . . .	Text   	 FLAT
ALT_MASK . . . . . . . . . . . .	Number	 00000003h   
CAPSLOCK_ON  . . . . . . . . . .	Number	 00000080h   
CREATE_ALWAYS  . . . . . . . . .	Number	 00000002h   
CREATE_NEW . . . . . . . . . . .	Number	 00000001h   
CTRL_MASK  . . . . . . . . . . .	Number	 0000000Ch   
CreateFile . . . . . . . . . . .	Text   	 CreateFileA
CurrentCoins . . . . . . . . . .	Word	 00000292 _DATA	
DO_NOT_SHARE . . . . . . . . . .	Number	 00000000h   
ENABLE_ECHO_INPUT  . . . . . . .	Number	 00000004h   
ENABLE_LINE_INPUT  . . . . . . .	Number	 00000002h   
ENABLE_MOUSE_INPUT . . . . . . .	Number	 00000010h   
ENABLE_PROCESSED_INPUT . . . . .	Number	 00000001h   
ENABLE_PROCESSED_OUTPUT  . . . .	Number	 00000001h   
ENABLE_WINDOW_INPUT  . . . . . .	Number	 00000008h   
ENABLE_WRAP_AT_EOL_OUTPUT  . . .	Number	 00000002h   
ENHANCED_KEY . . . . . . . . . .	Number	 00000100h   
FALSE  . . . . . . . . . . . . .	Number	 00000000h   
FILE_APPEND_DATA . . . . . . . .	Number	 00000004h   
FILE_ATTRIBUTE_ARCHIVE . . . . .	Number	 00000020h   
FILE_ATTRIBUTE_COMPRESSED  . . .	Number	 00000800h   
FILE_ATTRIBUTE_DEVICE  . . . . .	Number	 00000040h   
FILE_ATTRIBUTE_DIRECTORY . . . .	Number	 00000010h   
FILE_ATTRIBUTE_ENCRYPTED . . . .	Number	 00004000h   
FILE_ATTRIBUTE_HIDDEN  . . . . .	Number	 00000002h   
FILE_ATTRIBUTE_NORMAL  . . . . .	Number	 00000080h   
FILE_ATTRIBUTE_NOT_CONTENT_INDEXED .	Number	 00002000h   
FILE_ATTRIBUTE_OFFLINE . . . . .	Number	 00001000h   
FILE_ATTRIBUTE_READONLY  . . . .	Number	 00000001h   
FILE_ATTRIBUTE_REPARSE_POINT . .	Number	 00000400h   
FILE_ATTRIBUTE_SPARSE_FILE . . .	Number	 00000200h   
FILE_ATTRIBUTE_SYSTEM  . . . . .	Number	 00000004h   
FILE_ATTRIBUTE_TEMPORARY . . . .	Number	 00000100h   
FILE_BEGIN . . . . . . . . . . .	Number	 00000000h   
FILE_CURRENT . . . . . . . . . .	Number	 00000001h   
FILE_DELETE_CHILD  . . . . . . .	Number	 00000040h   
FILE_END . . . . . . . . . . . .	Number	 00000002h   
FILE_READ_DATA . . . . . . . . .	Number	 00000001h   
FILE_SHARE_DELETE  . . . . . . .	Number	 00000004h   
FILE_SHARE_READ  . . . . . . . .	Number	 00000001h   
FILE_SHARE_WRITE . . . . . . . .	Number	 00000002h   
FILE_WRITE_DATA  . . . . . . . .	Number	 00000002h   
FOCUS_EVENT  . . . . . . . . . .	Number	 00000010h   
FORMAT_MESSAGE_ALLOCATE_BUFFER .	Number	 00000100h   
FORMAT_MESSAGE_FROM_SYSTEM . . .	Number	 00001000h   
FormatMessage  . . . . . . . . .	Text   	 FormatMessageA
G1 . . . . . . . . . . . . . . .	Byte	 000002B4 _DATA	
G2 . . . . . . . . . . . . . . .	Byte	 000002B5 _DATA	
G3 . . . . . . . . . . . . . . .	Byte	 000002B6 _DATA	
G4 . . . . . . . . . . . . . . .	Byte	 000002B7 _DATA	
G5 . . . . . . . . . . . . . . .	Byte	 000002B8 _DATA	
G6 . . . . . . . . . . . . . . .	Byte	 000002B9 _DATA	
G7 . . . . . . . . . . . . . . .	Byte	 000002BA _DATA	
GENERIC_ALL  . . . . . . . . . .	Number	 10000000h   
GENERIC_EXECUTE  . . . . . . . .	Number	 20000000h   
GENERIC_READ . . . . . . . . . .	Number	 -80000000h   
GENERIC_WRITE  . . . . . . . . .	Number	 40000000h   
GameStateHandle  . . . . . . . .	Byte	 00000296 _DATA	
GetCommandLine . . . . . . . . .	Text   	 GetCommandLineA
Ghost1DirectionHandle  . . . . .	Byte	 00000299 _DATA	
Ghost1MovementPossibibly . . . .	Byte	 0000029A _DATA	
Ghost1Status . . . . . . . . . .	Byte	 000002A7 _DATA	
Ghost2DirectionHandle  . . . . .	Byte	 0000029B _DATA	
Ghost2MovementPossibibly . . . .	Byte	 0000029C _DATA	
Ghost2Status . . . . . . . . . .	Byte	 000002A8 _DATA	
Ghost3DirectionHandle  . . . . .	Byte	 0000029D _DATA	
Ghost3MovementPossibibly . . . .	Byte	 0000029E _DATA	
Ghost3Status . . . . . . . . . .	Byte	 000002A9 _DATA	
Ghost4DirectionHandle  . . . . .	Byte	 0000029F _DATA	
Ghost4MovementPossibibly . . . .	Byte	 000002A0 _DATA	
Ghost4Status . . . . . . . . . .	Byte	 000002AA _DATA	
Ghost5DirectionHandle  . . . . .	Byte	 000002A1 _DATA	
Ghost5MovementPossibibly . . . .	Byte	 000002A2 _DATA	
Ghost5Status . . . . . . . . . .	Byte	 000002AB _DATA	
Ghost6DirectionHandle  . . . . .	Byte	 000002A3 _DATA	
Ghost6MovementPossibibly . . . .	Byte	 000002A4 _DATA	
Ghost6Status . . . . . . . . . .	Byte	 000002AC _DATA	
Ghost7DirectionHandle  . . . . .	Byte	 000002A5 _DATA	
Ghost7MovementPossibibly . . . .	Byte	 000002A6 _DATA	
Ghost7Status . . . . . . . . . .	Byte	 000002AD _DATA	
HANDLE . . . . . . . . . . . . .	Text   	 DWORD
HEAP_GENERATE_EXCEPTIONS . . . .	Number	 00000004h   
HEAP_GROWABLE  . . . . . . . . .	Number	 00000002h   
HEAP_NO_SERIALIZE  . . . . . . .	Number	 00000001h   
HEAP_REALLOC_IN_PLACE_ONLY . . .	Number	 00000010h   
HEAP_ZERO_MEMORY . . . . . . . .	Number	 00000008h   
HighscorePrompt  . . . . . . . .	Byte	 0000025F _DATA	
IDABORT  . . . . . . . . . . . .	Number	 00000003h   
IDCANCEL . . . . . . . . . . . .	Number	 00000002h   
IDCLOSE  . . . . . . . . . . . .	Number	 00000008h   
IDCONTINUE . . . . . . . . . . .	Number	 0000000Bh   
IDHELP . . . . . . . . . . . . .	Number	 00000009h   
IDIGNORE . . . . . . . . . . . .	Number	 00000005h   
IDNO . . . . . . . . . . . . . .	Number	 00000007h   
IDOK . . . . . . . . . . . . . .	Number	 00000001h   
IDRETRY  . . . . . . . . . . . .	Number	 00000004h   
IDTIMEOUT  . . . . . . . . . . .	Number	 00007D00h   
IDTRYAGAIN . . . . . . . . . . .	Number	 0000000Ah   
IDYES  . . . . . . . . . . . . .	Number	 00000006h   
INVALID_HANDLE_VALUE . . . . . .	Number	 -00000001h   
KBDOWN_FLAG  . . . . . . . . . .	Number	 00000001h   
KEY_EVENT  . . . . . . . . . . .	Number	 00000001h   
KEY_MASKS  . . . . . . . . . . .	Number	 0000001Fh   
LEFT_ALT_PRESSED . . . . . . . .	Number	 00000002h   
LEFT_CTRL_PRESSED  . . . . . . .	Number	 00000008h   
MB_ABORTRETRYIGNORE  . . . . . .	Number	 00000002h   
MB_APPLMODAL . . . . . . . . . .	Number	 00000000h   
MB_CANCELTRYCONTINUE . . . . . .	Number	 00000006h   
MB_DEFBUTTON1  . . . . . . . . .	Number	 00000000h   
MB_DEFBUTTON2  . . . . . . . . .	Number	 00000100h   
MB_DEFBUTTON3  . . . . . . . . .	Number	 00000200h   
MB_DEFBUTTON4  . . . . . . . . .	Number	 00000300h   
MB_HELP  . . . . . . . . . . . .	Number	 00004000h   
MB_ICONASTERISK  . . . . . . . .	Number	 00000040h   
MB_ICONERROR . . . . . . . . . .	Number	 00000010h   
MB_ICONEXCLAMATION . . . . . . .	Number	 00000030h   
MB_ICONHAND  . . . . . . . . . .	Number	 00000010h   
MB_ICONINFORMATION . . . . . . .	Number	 00000040h   
MB_ICONQUESTION  . . . . . . . .	Number	 00000020h   
MB_ICONSTOP  . . . . . . . . . .	Number	 00000010h   
MB_ICONWARNING . . . . . . . . .	Number	 00000030h   
MB_OKCANCEL  . . . . . . . . . .	Number	 00000001h   
MB_OK  . . . . . . . . . . . . .	Number	 00000000h   
MB_RETRYCANCEL . . . . . . . . .	Number	 00000005h   
MB_SYSTEMMODAL . . . . . . . . .	Number	 00001000h   
MB_TASKMODAL . . . . . . . . . .	Number	 00002000h   
MB_USERICON  . . . . . . . . . .	Number	 00000080h   
MB_YESNOCANCEL . . . . . . . . .	Number	 00000003h   
MB_YESNO . . . . . . . . . . . .	Number	 00000004h   
MENU_EVENT . . . . . . . . . . .	Number	 00000008h   
MOUSE_EVENT  . . . . . . . . . .	Number	 00000002h   
Menu1InputNamePrompt . . . . . .	Byte	 00000061 _DATA	
Menu2OptionHandle  . . . . . . .	Byte	 00000294 _DATA	
Menu2OptionUp_Down . . . . . . .	Byte	 00000295 _DATA	
MessageBox . . . . . . . . . . .	Text   	 MessageBoxA
NULL . . . . . . . . . . . . . .	Number	 00000000h   
NUMLOCK_ON . . . . . . . . . . .	Number	 00000020h   
Name1  . . . . . . . . . . . . .	Byte	 0000017E _DATA	
Name2  . . . . . . . . . . . . .	Byte	 00000197 _DATA	
Name3  . . . . . . . . . . . . .	Byte	 000001B0 _DATA	
OPEN_ALWAYS  . . . . . . . . . .	Number	 00000004h   
OPEN_EXISTING  . . . . . . . . .	Number	 00000003h   
PeekConsoleInput . . . . . . . .	Text   	 PeekConsoleInputA
PlayerDirectionHandle  . . . . .	Byte	 00000297 _DATA	
PlayerMovement1Possibibly  . . .	Byte	 00000298 _DATA	
RIGHT_ALT_PRESSED  . . . . . . .	Number	 00000001h   
RIGHT_CTRL_PRESSED . . . . . . .	Number	 00000004h   
ReadConsoleInput . . . . . . . .	Text   	 ReadConsoleInputA
ReadConsole  . . . . . . . . . .	Text   	 ReadConsoleA
SCROLLLOCK_ON  . . . . . . . . .	Number	 00000040h   
SHIFT_MASK . . . . . . . . . . .	Number	 00000010h   
SHIFT_PRESSED  . . . . . . . . .	Number	 00000010h   
SND_FILENAME . . . . . . . . . .	DWord	 0000000C _DATA	
STD_ERROR_HANDLE . . . . . . . .	Number	 -0000000Ch   
STD_INPUT_HANDLE . . . . . . . .	Number	 -0000000Ah   
STD_OUTPUT_HANDLE  . . . . . . .	Number	 -0000000Bh   
Score1 . . . . . . . . . . . . .	Byte	 000001C9 _DATA	
Score2 . . . . . . . . . . . . .	Byte	 000001E2 _DATA	
Score3 . . . . . . . . . . . . .	Byte	 000001FB _DATA	
SetConsoleTitle  . . . . . . . .	Text   	 SetConsoleTitleA
TAB  . . . . . . . . . . . . . .	Number	 00000009h   
TRUE . . . . . . . . . . . . . .	Number	 00000001h   
TRUNCATE_EXISTING  . . . . . . .	Number	 00000005h   
TempM  . . . . . . . . . . . . .	Byte	 0000005B _DATA	
VK_11  . . . . . . . . . . . . .	Number	 000000BDh   
VK_12  . . . . . . . . . . . . .	Number	 000000BBh   
VK_ADD . . . . . . . . . . . . .	Number	 0000006Bh   
VK_BACK  . . . . . . . . . . . .	Number	 00000008h   
VK_CANCEL  . . . . . . . . . . .	Number	 00000003h   
VK_CAPITAL . . . . . . . . . . .	Number	 00000014h   
VK_CLEAR . . . . . . . . . . . .	Number	 0000000Ch   
VK_CONTROL . . . . . . . . . . .	Number	 00000011h   
VK_DECIMAL . . . . . . . . . . .	Number	 0000006Eh   
VK_DELETE  . . . . . . . . . . .	Number	 0000002Eh   
VK_DIVIDE  . . . . . . . . . . .	Number	 0000006Fh   
VK_DOWN  . . . . . . . . . . . .	Number	 00000028h   
VK_END . . . . . . . . . . . . .	Number	 00000023h   
VK_ESCAPE  . . . . . . . . . . .	Number	 0000001Bh   
VK_EXECUTE . . . . . . . . . . .	Number	 0000002Bh   
VK_F10 . . . . . . . . . . . . .	Number	 00000079h   
VK_F11 . . . . . . . . . . . . .	Number	 0000007Ah   
VK_F12 . . . . . . . . . . . . .	Number	 0000007Bh   
VK_F13 . . . . . . . . . . . . .	Number	 0000007Ch   
VK_F14 . . . . . . . . . . . . .	Number	 0000007Dh   
VK_F15 . . . . . . . . . . . . .	Number	 0000007Eh   
VK_F16 . . . . . . . . . . . . .	Number	 0000007Fh   
VK_F17 . . . . . . . . . . . . .	Number	 00000080h   
VK_F18 . . . . . . . . . . . . .	Number	 00000081h   
VK_F19 . . . . . . . . . . . . .	Number	 00000082h   
VK_F1  . . . . . . . . . . . . .	Number	 00000070h   
VK_F20 . . . . . . . . . . . . .	Number	 00000083h   
VK_F21 . . . . . . . . . . . . .	Number	 00000084h   
VK_F22 . . . . . . . . . . . . .	Number	 00000085h   
VK_F23 . . . . . . . . . . . . .	Number	 00000086h   
VK_F24 . . . . . . . . . . . . .	Number	 00000087h   
VK_F2  . . . . . . . . . . . . .	Number	 00000071h   
VK_F3  . . . . . . . . . . . . .	Number	 00000072h   
VK_F4  . . . . . . . . . . . . .	Number	 00000073h   
VK_F5  . . . . . . . . . . . . .	Number	 00000074h   
VK_F6  . . . . . . . . . . . . .	Number	 00000075h   
VK_F7  . . . . . . . . . . . . .	Number	 00000076h   
VK_F8  . . . . . . . . . . . . .	Number	 00000077h   
VK_F9  . . . . . . . . . . . . .	Number	 00000078h   
VK_HELP  . . . . . . . . . . . .	Number	 0000002Fh   
VK_HOME  . . . . . . . . . . . .	Number	 00000024h   
VK_INSERT  . . . . . . . . . . .	Number	 0000002Dh   
VK_LBUTTON . . . . . . . . . . .	Number	 00000001h   
VK_LCONTROL  . . . . . . . . . .	Number	 000000A2h   
VK_LEFT  . . . . . . . . . . . .	Number	 00000025h   
VK_LMENU . . . . . . . . . . . .	Number	 000000A4h   
VK_LSHIFT  . . . . . . . . . . .	Number	 000000A0h   
VK_MENU  . . . . . . . . . . . .	Number	 00000012h   
VK_MULTIPLY  . . . . . . . . . .	Number	 0000006Ah   
VK_NEXT  . . . . . . . . . . . .	Number	 00000022h   
VK_NUMLOCK . . . . . . . . . . .	Number	 00000090h   
VK_NUMPAD0 . . . . . . . . . . .	Number	 00000060h   
VK_NUMPAD1 . . . . . . . . . . .	Number	 00000061h   
VK_NUMPAD2 . . . . . . . . . . .	Number	 00000062h   
VK_NUMPAD3 . . . . . . . . . . .	Number	 00000063h   
VK_NUMPAD4 . . . . . . . . . . .	Number	 00000064h   
VK_NUMPAD5 . . . . . . . . . . .	Number	 00000065h   
VK_NUMPAD6 . . . . . . . . . . .	Number	 00000066h   
VK_NUMPAD7 . . . . . . . . . . .	Number	 00000067h   
VK_NUMPAD8 . . . . . . . . . . .	Number	 00000068h   
VK_NUMPAD9 . . . . . . . . . . .	Number	 00000069h   
VK_PAUSE . . . . . . . . . . . .	Number	 00000013h   
VK_PRINT . . . . . . . . . . . .	Number	 0000002Ah   
VK_PRIOR . . . . . . . . . . . .	Number	 00000021h   
VK_RBUTTON . . . . . . . . . . .	Number	 00000002h   
VK_RCONTROL  . . . . . . . . . .	Number	 000000A3h   
VK_RETURN  . . . . . . . . . . .	Number	 0000000Dh   
VK_RIGHT . . . . . . . . . . . .	Number	 00000027h   
VK_RMENU . . . . . . . . . . . .	Number	 000000A5h   
VK_RSHIFT  . . . . . . . . . . .	Number	 000000A1h   
VK_SCROLL  . . . . . . . . . . .	Number	 00000091h   
VK_SEPARATER . . . . . . . . . .	Number	 0000006Ch   
VK_SHIFT . . . . . . . . . . . .	Number	 00000010h   
VK_SNAPSHOT  . . . . . . . . . .	Number	 0000002Ch   
VK_SPACE . . . . . . . . . . . .	Number	 00000020h   
VK_SUBTRACT  . . . . . . . . . .	Number	 0000006Dh   
VK_TAB . . . . . . . . . . . . .	Number	 00000009h   
VK_UP  . . . . . . . . . . . . .	Number	 00000026h   
WINDOW_BUFFER_SIZE_EVENT . . . .	Number	 00000004h   
WriteConsoleOutputCharacter  . .	Text   	 WriteConsoleOutputCharacterA
WriteConsole . . . . . . . . . .	Text   	 WriteConsoleA
black  . . . . . . . . . . . . .	Number	 00000000h   
blue . . . . . . . . . . . . . .	Number	 00000001h   
brown  . . . . . . . . . . . . .	Number	 00000006h   
buffer . . . . . . . . . . . . .	Byte	 0000007A _DATA	
coin . . . . . . . . . . . . . .	Byte	 000002B2 _DATA	
cyan . . . . . . . . . . . . . .	Number	 00000003h   
exit . . . . . . . . . . . . . .	Text   	 INVOKE ExitProcess,0
fileHandle . . . . . . . . . . .	DWord	 0000028E _DATA	
filename . . . . . . . . . . . .	Byte	 0000027B _DATA	
filetemp . . . . . . . . . . . .	Byte	 00000285 _DATA	
gray . . . . . . . . . . . . . .	Number	 00000008h   
green  . . . . . . . . . . . . .	Number	 00000002h   
inputChar  . . . . . . . . . . .	Byte	 000002B0 _DATA	
l1_r01 . . . . . . . . . . . . .	Byte	 00000704 _DATA	
l1_r02 . . . . . . . . . . . . .	Byte	 0000072B _DATA	
l1_r03 . . . . . . . . . . . . .	Byte	 00000752 _DATA	
l1_r04 . . . . . . . . . . . . .	Byte	 00000779 _DATA	
l1_r05 . . . . . . . . . . . . .	Byte	 000007A0 _DATA	
l1_r06 . . . . . . . . . . . . .	Byte	 000007C7 _DATA	
l1_r07 . . . . . . . . . . . . .	Byte	 000007EE _DATA	
l1_r08 . . . . . . . . . . . . .	Byte	 00000815 _DATA	
l1_r09 . . . . . . . . . . . . .	Byte	 0000083C _DATA	
l1_r10 . . . . . . . . . . . . .	Byte	 00000863 _DATA	
l1_r11 . . . . . . . . . . . . .	Byte	 0000088A _DATA	
l1_r12 . . . . . . . . . . . . .	Byte	 000008B1 _DATA	
l1_r13 . . . . . . . . . . . . .	Byte	 000008D8 _DATA	
l1_r14 . . . . . . . . . . . . .	Byte	 000008FF _DATA	
l1_r15 . . . . . . . . . . . . .	Byte	 00000926 _DATA	
l1_r16 . . . . . . . . . . . . .	Byte	 0000094D _DATA	
l1_r17 . . . . . . . . . . . . .	Byte	 00000974 _DATA	
l1_r18 . . . . . . . . . . . . .	Byte	 0000099B _DATA	
l1_r19 . . . . . . . . . . . . .	Byte	 000009C2 _DATA	
l1_r20 . . . . . . . . . . . . .	Byte	 000009E9 _DATA	
l1_r21 . . . . . . . . . . . . .	Byte	 00000A10 _DATA	
l1_r22 . . . . . . . . . . . . .	Byte	 00000A37 _DATA	
l2_r01 . . . . . . . . . . . . .	Byte	 00000A5E _DATA	
l2_r02 . . . . . . . . . . . . .	Byte	 00000A91 _DATA	
l2_r03 . . . . . . . . . . . . .	Byte	 00000AC4 _DATA	
l2_r04 . . . . . . . . . . . . .	Byte	 00000AF7 _DATA	
l2_r05 . . . . . . . . . . . . .	Byte	 00000B2A _DATA	
l2_r06 . . . . . . . . . . . . .	Byte	 00000B5D _DATA	
l2_r07 . . . . . . . . . . . . .	Byte	 00000B90 _DATA	
l2_r08 . . . . . . . . . . . . .	Byte	 00000BC3 _DATA	
l2_r09 . . . . . . . . . . . . .	Byte	 00000BF6 _DATA	
l2_r10 . . . . . . . . . . . . .	Byte	 00000C29 _DATA	
l2_r11 . . . . . . . . . . . . .	Byte	 00000C5C _DATA	
l2_r12 . . . . . . . . . . . . .	Byte	 00000C8F _DATA	
l2_r13 . . . . . . . . . . . . .	Byte	 00000CC2 _DATA	
l2_r14 . . . . . . . . . . . . .	Byte	 00000CF5 _DATA	
l2_r15 . . . . . . . . . . . . .	Byte	 00000D28 _DATA	
l2_r16 . . . . . . . . . . . . .	Byte	 00000D5B _DATA	
l2_r17 . . . . . . . . . . . . .	Byte	 00000D8E _DATA	
l2_r18 . . . . . . . . . . . . .	Byte	 00000DC1 _DATA	
l2_r19 . . . . . . . . . . . . .	Byte	 00000DF4 _DATA	
l2_r20 . . . . . . . . . . . . .	Byte	 00000E27 _DATA	
l2_r21 . . . . . . . . . . . . .	Byte	 00000E5A _DATA	
l2_r22 . . . . . . . . . . . . .	Byte	 00000E8D _DATA	
l3_r01 . . . . . . . . . . . . .	Byte	 00000EC0 _DATA	
l3_r02 . . . . . . . . . . . . .	Byte	 00000F07 _DATA	
l3_r03 . . . . . . . . . . . . .	Byte	 00000F4E _DATA	
l3_r04 . . . . . . . . . . . . .	Byte	 00000F95 _DATA	
l3_r05 . . . . . . . . . . . . .	Byte	 00000FDC _DATA	
l3_r06 . . . . . . . . . . . . .	Byte	 00001023 _DATA	
l3_r07 . . . . . . . . . . . . .	Byte	 0000106A _DATA	
l3_r08 . . . . . . . . . . . . .	Byte	 000010B1 _DATA	
l3_r09 . . . . . . . . . . . . .	Byte	 000010F8 _DATA	
l3_r10 . . . . . . . . . . . . .	Byte	 0000113F _DATA	
l3_r11 . . . . . . . . . . . . .	Byte	 00001186 _DATA	
l3_r12 . . . . . . . . . . . . .	Byte	 000011CD _DATA	
l3_r13 . . . . . . . . . . . . .	Byte	 00001214 _DATA	
l3_r14 . . . . . . . . . . . . .	Byte	 0000125B _DATA	
l3_r15 . . . . . . . . . . . . .	Byte	 000012A2 _DATA	
l3_r16 . . . . . . . . . . . . .	Byte	 000012E9 _DATA	
l3_r17 . . . . . . . . . . . . .	Byte	 00001330 _DATA	
l3_r18 . . . . . . . . . . . . .	Byte	 00001377 _DATA	
l3_r19 . . . . . . . . . . . . .	Byte	 000013BE _DATA	
l3_r20 . . . . . . . . . . . . .	Byte	 00001405 _DATA	
l3_r21 . . . . . . . . . . . . .	Byte	 0000144C _DATA	
l3_r22 . . . . . . . . . . . . .	Byte	 00001493 _DATA	
levelIndicator . . . . . . . . .	Byte	 0000005D _DATA	
level_1  . . . . . . . . . . . .	Byte	 00000214 _DATA	
level_2  . . . . . . . . . . . .	Byte	 0000022D _DATA	
level_3  . . . . . . . . . . . .	Byte	 00000246 _DATA	
lightBlue  . . . . . . . . . . .	Number	 00000009h   
lightCyan  . . . . . . . . . . .	Number	 0000000Bh   
lightGray  . . . . . . . . . . .	Number	 00000007h   
lightGreen . . . . . . . . . . .	Number	 0000000Ah   
lightMagenta . . . . . . . . . .	Number	 0000000Dh   
lightRed . . . . . . . . . . . .	Number	 0000000Ch   
livesIndicator . . . . . . . . .	Byte	 0000005E _DATA	
m1_r01 . . . . . . . . . . . . .	Byte	 000002C9 _DATA	
m1_r02 . . . . . . . . . . . . .	Byte	 00000315 _DATA	
magenta  . . . . . . . . . . . .	Number	 00000005h   
musicChomp . . . . . . . . . . .	Byte	 00000025 _DATA	
musicDeath . . . . . . . . . . .	Byte	 0000004A _DATA	
musicFruit . . . . . . . . . . .	Byte	 00000036 _DATA	
musicIntro . . . . . . . . . . .	Byte	 00000010 _DATA	
pacman_0 . . . . . . . . . . . .	Byte	 00000361 _DATA	
pacman_1 . . . . . . . . . . . .	Byte	 000003A3 _DATA	
pacman_2 . . . . . . . . . . . .	Byte	 000003E5 _DATA	
pacman_3 . . . . . . . . . . . .	Byte	 00000427 _DATA	
pacman_4 . . . . . . . . . . . .	Byte	 00000469 _DATA	
pacman_5 . . . . . . . . . . . .	Byte	 000004AB _DATA	
pacman_6 . . . . . . . . . . . .	Byte	 000004ED _DATA	
pacman_7 . . . . . . . . . . . .	Byte	 0000052F _DATA	
pinky_01 . . . . . . . . . . . .	Byte	 00000571 _DATA	
pinky_02 . . . . . . . . . . . .	Byte	 00000588 _DATA	
pinky_03 . . . . . . . . . . . .	Byte	 000005A3 _DATA	
pinky_04 . . . . . . . . . . . .	Byte	 000005C0 _DATA	
pinky_05 . . . . . . . . . . . .	Byte	 000005DF _DATA	
pinky_06 . . . . . . . . . . . .	Byte	 000005FE _DATA	
pinky_07 . . . . . . . . . . . .	Byte	 0000061D _DATA	
pinky_08 . . . . . . . . . . . .	Byte	 0000063E _DATA	
pinky_09 . . . . . . . . . . . .	Byte	 0000065F _DATA	
pinky_10 . . . . . . . . . . . .	Byte	 00000680 _DATA	
pinky_11 . . . . . . . . . . . .	Byte	 000006A1 _DATA	
pinky_12 . . . . . . . . . . . .	Byte	 000006C2 _DATA	
pinky_13 . . . . . . . . . . . .	Byte	 000006E3 _DATA	
red  . . . . . . . . . . . . . .	Number	 00000004h   
scoreBuffer  . . . . . . . . . .	Byte	 00000179 _DATA	
score  . . . . . . . . . . . . .	Word	 0000005F _DATA	
space  . . . . . . . . . . . . .	Byte	 000002B3 _DATA	
speed1 . . . . . . . . . . . . .	DWord	 00000000 _DATA	
speed2 . . . . . . . . . . . . .	DWord	 00000004 _DATA	
speed3 . . . . . . . . . . . . .	DWord	 00000008 _DATA	
wall . . . . . . . . . . . . . .	Byte	 000002B1 _DATA	
white  . . . . . . . . . . . . .	Number	 0000000Fh   
wsprintf . . . . . . . . . . . .	Text   	 wsprintfA
xG1Pos . . . . . . . . . . . . .	Byte	 000002BB _DATA	
xG2Pos . . . . . . . . . . . . .	Byte	 000002BD _DATA	
xG3Pos . . . . . . . . . . . . .	Byte	 000002BF _DATA	
xG4Pos . . . . . . . . . . . . .	Byte	 000002C1 _DATA	
xG5Pos . . . . . . . . . . . . .	Byte	 000002C3 _DATA	
xG6Pos . . . . . . . . . . . . .	Byte	 000002C5 _DATA	
xG7Pos . . . . . . . . . . . . .	Byte	 000002C7 _DATA	
xPos . . . . . . . . . . . . . .	Byte	 000002AE _DATA	
yG1Pos . . . . . . . . . . . . .	Byte	 000002BC _DATA	
yG2Pos . . . . . . . . . . . . .	Byte	 000002BE _DATA	
yG3Pos . . . . . . . . . . . . .	Byte	 000002C0 _DATA	
yG4Pos . . . . . . . . . . . . .	Byte	 000002C2 _DATA	
yG5Pos . . . . . . . . . . . . .	Byte	 000002C4 _DATA	
yG6Pos . . . . . . . . . . . . .	Byte	 000002C6 _DATA	
yG7Pos . . . . . . . . . . . . .	Byte	 000002C8 _DATA	
yPos . . . . . . . . . . . . . .	Byte	 000002AF _DATA	
yellow . . . . . . . . . . . . .	Number	 0000000Eh   

	   22 Warnings
	   0 Errors
